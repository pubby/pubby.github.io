
var Module;
if (typeof Module === 'undefined') Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');
if (!Module.expectedDataFileDownloads) {
  Module.expectedDataFileDownloads = 0;
  Module.finishedDataFileDownloads = 0;
}
Module.expectedDataFileDownloads++;
(function() {

    var PACKAGE_PATH;
    if (typeof window === 'object') {
      PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');
    } else {
      // worker
      PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');
    }
    var PACKAGE_NAME = 'js_rogue.data';
    var REMOTE_PACKAGE_NAME = (Module['filePackagePrefixURL'] || '') + 'js_rogue.data';
    var REMOTE_PACKAGE_SIZE = 6242;
    var PACKAGE_UUID = 'bba268ae-0548-4d09-aac4-a798ed485106';
  
    function fetchRemotePackage(packageName, packageSize, callback, errback) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', packageName, true);
      xhr.responseType = 'arraybuffer';
      xhr.onprogress = function(event) {
        var url = packageName;
        var size = packageSize;
        if (event.total) size = event.total;
        if (event.loaded) {
          if (!xhr.addedTotal) {
            xhr.addedTotal = true;
            if (!Module.dataFileDownloads) Module.dataFileDownloads = {};
            Module.dataFileDownloads[url] = {
              loaded: event.loaded,
              total: size
            };
          } else {
            Module.dataFileDownloads[url].loaded = event.loaded;
          }
          var total = 0;
          var loaded = 0;
          var num = 0;
          for (var download in Module.dataFileDownloads) {
          var data = Module.dataFileDownloads[download];
            total += data.total;
            loaded += data.loaded;
            num++;
          }
          total = Math.ceil(total * Module.expectedDataFileDownloads/num);
          if (Module['setStatus']) Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');
        } else if (!Module.dataFileDownloads) {
          if (Module['setStatus']) Module['setStatus']('Downloading data...');
        }
      };
      xhr.onload = function(event) {
        var packageData = xhr.response;
        callback(packageData);
      };
      xhr.send(null);
    };

    function handleError(error) {
      console.error('package error:', error);
    };
  
      var fetched = null, fetchedCallback = null;
      fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, function(data) {
        if (fetchedCallback) {
          fetchedCallback(data);
          fetchedCallback = null;
        } else {
          fetched = data;
        }
      }, handleError);
    
  function runWithFS() {

function assert(check, msg) {
  if (!check) throw msg + new Error().stack;
}

    function DataRequest(start, end, crunched, audio) {
      this.start = start;
      this.end = end;
      this.crunched = crunched;
      this.audio = audio;
    }
    DataRequest.prototype = {
      requests: {},
      open: function(mode, name) {
        this.name = name;
        this.requests[name] = this;
        Module['addRunDependency']('fp ' + this.name);
      },
      send: function() {},
      onload: function() {
        var byteArray = this.byteArray.subarray(this.start, this.end);

          this.finish(byteArray);

      },
      finish: function(byteArray) {
        var that = this;
        Module['FS_createPreloadedFile'](this.name, null, byteArray, true, true, function() {
          Module['removeRunDependency']('fp ' + that.name);
        }, function() {
          if (that.audio) {
            Module['removeRunDependency']('fp ' + that.name); // workaround for chromium bug 124926 (still no audio with this, but at least we don't hang)
          } else {
            Module.printErr('Preloading file ' + that.name + ' failed');
          }
        }, false, true); // canOwn this data in the filesystem, it is a slide into the heap that will never change
        this.requests[this.name] = null;
      },
    };
      new DataRequest(0, 312, 0, 0).open('GET', '/fragment.glsl');
    new DataRequest(312, 3331, 0, 0).open('GET', '/font.png');
    new DataRequest(3331, 5870, 0, 0).open('GET', '/.fragment.glsl.un~');
    new DataRequest(5870, 6242, 0, 0).open('GET', '/vertex.glsl');

    function processPackageData(arrayBuffer) {
      Module.finishedDataFileDownloads++;
      assert(arrayBuffer, 'Loading data file failed.');
      var byteArray = new Uint8Array(arrayBuffer);
      var curr;
      
      // copy the entire loaded file into a spot in the heap. Files will refer to slices in that. They cannot be freed though.
      var ptr = Module['_malloc'](byteArray.length);
      Module['HEAPU8'].set(byteArray, ptr);
      DataRequest.prototype.byteArray = Module['HEAPU8'].subarray(ptr, ptr+byteArray.length);
          DataRequest.prototype.requests["/fragment.glsl"].onload();
          DataRequest.prototype.requests["/font.png"].onload();
          DataRequest.prototype.requests["/.fragment.glsl.un~"].onload();
          DataRequest.prototype.requests["/vertex.glsl"].onload();
          Module['removeRunDependency']('datafile_js_rogue.data');

    };
    Module['addRunDependency']('datafile_js_rogue.data');
  
    if (!Module.preloadResults) Module.preloadResults = {};
  
      Module.preloadResults[PACKAGE_NAME] = {fromCache: false};
      if (fetched) {
        processPackageData(fetched);
        fetched = null;
      } else {
        fetchedCallback = processPackageData;
      }
    
  }
  if (Module['calledRun']) {
    runWithFS();
  } else {
    if (!Module['preRun']) Module['preRun'] = [];
    Module["preRun"].push(runWithFS); // FS is not initialized yet, wait for it
  }

})();

// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  Module['arguments'] = process['argv'].slice(2);

  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    return read(f, 'binary');
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  this['Module'] = Module;

  eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"); // wipe out the SpiderMonkey shell 'gc' function, which can confuse closure (uses it as a minified name, and it is then initted to a non-falsey value unexpectedly)
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WEB) {
    window['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?\{ ?[^}]* ?\}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (vararg) return 8;
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_ && type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    var source = Pointer_stringify(code);
    if (source[0] === '"') {
      // tolerate EM_ASM("..code..") even though EM_ASM(..code..) is correct
      if (source.indexOf('"', 1) === source.length-1) {
        source = source.substr(1, source.length-2);
      } else {
        // something invalid happened, e.g. EM_ASM("..code($0)..", input)
        abort('invalid EM_ASM input |' + source + '|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)');
      }
    }
    try {
      var evalled = eval('(function(' + args.join(',') + '){ ' + source + ' })'); // new Function does not allow upvars in node
    } catch(e) {
      Module.printErr('error in executing inline EM_ASM code: ' + e + ' on: \n\n' + source + '\n\nwith args |' + args + '| (make sure to use the right one out of EM_ASM, EM_ASM_ARGS, etc.)');
      throw e;
    }
    return Runtime.asmConstCache[code] = evalled;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;

      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }

      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }

      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      /* TODO: use TextEncoder when present,
        var encoder = new TextEncoder();
        encoder['encoding'] = "utf-8";
        var utf8Array = encoder['encode'](aMsg.data);
      */
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;









//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}

// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }

  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0;
}
Module['stringToUTF16'] = stringToUTF16;

// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit;
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0;
}
Module['stringToUTF32'] = stringToUTF32;

function demangle(func) {
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    return parse();
  } catch(e) {
    return func;
  }
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}

// Memory management

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

var totalMemory = 4096;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be more reasonable');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===



STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 27120;

var _stdout;
var _stdout=_stdout=allocate(1, "i32*", ALLOC_STATIC);
var _stdin;
var _stdin=_stdin=allocate(1, "i32*", ALLOC_STATIC);
var _stderr;
var _stderr=_stderr=allocate(1, "i32*", ALLOC_STATIC);

/* global initializers */ __ATINIT__.push({ func: function() { runPostSets() } },{ func: function() { __GLOBAL__I_a() } },{ func: function() { __GLOBAL__I_a41() } },{ func: function() { __GLOBAL__I_a49() } },{ func: function() { __GLOBAL__I_a133() } },{ func: function() { __GLOBAL__I_a153() } },{ func: function() { __GLOBAL__I_a367() } });

































































































































































































































































































































































































































var ___dso_handle;
var ___dso_handle=___dso_handle=allocate(1, "i32*", ALLOC_STATIC);


























































































































































































































var __ZTVN10__cxxabiv120__si_class_type_infoE;
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([0,0,0,0,24,80,0,0,134,1,0,0,222,0,0,0,108,0,0,0,248,0,0,0,8,0,0,0,6,0,0,0,4,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);;


var __ZTVN10__cxxabiv119__pointer_type_infoE;
__ZTVN10__cxxabiv119__pointer_type_infoE=allocate([0,0,0,0,56,80,0,0,134,1,0,0,112,0,0,0,108,0,0,0,248,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);;
var __ZTVN10__cxxabiv117__class_type_infoE;
__ZTVN10__cxxabiv117__class_type_infoE=allocate([0,0,0,0,88,80,0,0,134,1,0,0,126,1,0,0,108,0,0,0,248,0,0,0,8,0,0,0,28,0,0,0,2,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);;


















































































































































































































































































var __ZTISt9exception;
var __ZTISt9exception=__ZTISt9exception=allocate([allocate([1,0,0,0,0,0,0], "i8", ALLOC_STATIC)+8, 0], "i32", ALLOC_STATIC);











































































































































































































































































































































































































































var __ZN8asg_kissC1Ev;
var __ZN8asg_kissC1Ej;
var __ZN14coord_sys_viewC1E4rect;
var __ZN14coord_sys_viewC1ERKS_4rect;
var __ZN9term_viewC1Ev;
var __ZN11environmentC1E4gridI12feature_typeNSt3__19allocatorIS1_EEE;
var __ZN8los_dataC1E5coordRK4gridI12feature_typeNSt3__19allocatorIS2_EEE;
var __ZN12message_listC1Ei;
var __ZN11feature_defC1E12feature_type;
var __ZNSt13runtime_errorC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE;
var __ZNSt13runtime_errorC1EPKc;
var __ZNSt13runtime_errorD1Ev;
var __ZNSt12length_errorD1Ev;
var __ZNSt12out_of_rangeD1Ev;
var __ZNSt14overflow_errorD1Ev;
var __ZNSt3__16localeC1Ev;
var __ZNSt3__16localeC1ERKS0_;
var __ZNSt3__16localeD1Ev;
var __ZNSt8bad_castC1Ev;
var __ZNSt8bad_castD1Ev;
/* memory initializer */ allocate([95,112,137,0,255,9,47,15,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,37,100,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,46,47,109,111,118,101,109,101,110,116,46,105,110,108,0,0,68,101,99,0,0,0,0,0,78,111,118,0,0,0,0,0,79,99,116,0,0,0,0,0,83,101,112,0,0,0,0,0,67,0,0,0,0,0,0,0,65,117,103,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,0,0,32,45,32,0,0,0,0,0,74,117,108,0,0,0,0,0,74,117,110,0,0,0,0,0,112,111,115,105,116,105,111,110,0,0,0,0,0,0,0,0,65,112,114,0,0,0,0,0,77,97,114,0,0,0,0,0,70,101,98,0,0,0,0,0,74,97,110,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,108,111,115,46,99,112,112,0,10,37,115,58,37,105,32,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,37,115,10,0,0,0,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,118,101,99,116,111,114,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,65,117,103,117,115,116,0,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,74,117,108,121,0,0,0,0,116,101,120,116,117,114,101,0,10,37,115,58,37,105,32,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,37,115,10,0,0,0,0,74,117,110,101,0,0,0,0,77,97,121,0,0,0,0,0,65,112,114,105,108,0,0,0,114,105,112,32,109,111,110,115,116,101,114,0,0,0,0,0,77,97,114,99,104,0,0,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,74,97,110,117,97,114,121,0,37,46,48,76,102,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,95,32,32,32,32,32,95,32,32,32,32,32,32,32,95,32,32,32,32,32,32,32,32,32,32,32,95,32,95,32,32,32,32,32,32,95,32,32,32,32,95,32,32,32,32,32,32,10,32,32,95,32,32,32,95,32,95,32,32,32,95,124,32,124,95,95,32,40,95,41,95,32,95,95,32,124,32,124,95,95,32,32,32,95,95,95,32,40,95,124,95,41,32,95,95,95,124,32,124,32,95,124,32,124,32,95,95,95,32,10,32,124,32,124,32,124,32,124,32,124,32,124,32,124,32,39,95,32,92,124,32,124,32,39,95,32,92,124,32,39,95,32,92,32,47,32,95,32,92,124,32,124,32,124,47,32,95,95,124,32,124,47,32,47,32,124,47,32,95,32,92,10,32,124,32,124,95,124,32,124,32,124,95,124,32,124,32,124,95,41,32,124,32,124,32,124,32,124,32,124,32,124,32,124,32,124,32,32,95,95,47,124,32,124,32,124,32,40,95,95,124,32,32,32,60,124,32,124,32,32,95,95,47,10,32,32,92,95,95,44,32,124,92,95,95,44,95,124,95,46,95,95,47,124,95,124,95,124,32,124,95,124,95,124,32,124,95,124,92,95,95,95,124,47,32,124,95,124,92,95,95,95,124,95,124,92,95,92,95,124,92,95,95,95,124,10,32,32,124,95,95,95,47,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,124,95,95,47,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,109,97,116,114,105,120,0,0,40,105,110,95,98,111,117,110,100,115,40,114,101,116,44,32,109,95,114,97,121,95,115,101,116,115,46,100,105,109,101,110,115,105,111,110,115,40,41,41,41,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,40,121,111,117,40,41,45,62,104,97,115,95,101,110,101,114,103,121,95,116,111,95,116,97,107,101,95,116,117,114,110,40,41,41,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,95,95,110,101,120,116,95,112,114,105,109,101,32,111,118,101,114,102,108,111,119,0,0,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,102,114,97,103,109,101,110,116,46,103,108,115,108,0,0,0,46,47,108,111,115,95,102,119,100,46,104,112,112,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,101,110,118,105,114,111,110,109,101,110,116,46,99,112,112,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,40,105,116,32,33,61,32,109,95,109,111,110,115,46,101,110,100,40,41,41,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,40,121,47,110,41,63,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,114,97,116,0,0,0,0,0,10,37,115,58,37,105,32,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,37,115,10,0,0,0,0,37,76,102,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,10,37,115,58,37,105,32,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,37,115,10,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,118,101,114,116,101,120,46,103,108,115,108,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,80,77,0,0,0,0,0,0,65,77,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,10,37,115,58,37,105,32,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,37,115,10,0,0,0,0,10,37,115,58,37,105,32,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,37,115,10,0,0,0,0,97,110,100,32,0,0,0,0,117,105,46,99,112,112,0,0,82,101,97,108,108,121,32,113,117,105,116,63,0,0,0,0,40,114,101,115,117,108,116,46,102,105,114,115,116,45,62,115,101,99,111,110,100,46,112,108,117,114,97,108,95,110,97,109,101,32,61,61,32,112,108,117,114,97,108,95,110,97,109,101,41,0,0,0,0,0,0,0,46,47,110,97,109,101,46,104,112,112,0,0,0,0,0,0,67,111,117,108,100,32,110,111,116,32,115,101,116,32,118,105,100,101,111,32,109,111,100,101,58,32,0,0,0,0,0,0,32,105,110,116,111,32,118,105,101,119,46,0,0,0,0,0,32,99,111,109,101,0,0,0,32,99,111,109,101,115,0,0,40,109,95,109,111,110,115,95,103,114,105,100,91,112,111,115,93,32,61,61,32,110,117,108,108,112,116,114,41,0,0,0,46,47,101,109,115,99,114,105,112,116,101,110,95,105,110,99,108,117,100,101,47,98,111,111,115,116,47,99,111,110,116,97,105,110,101,114,47,100,101,116,97,105,108,47,97,100,118,97,110,99,101,100,95,105,110,115,101,114,116,95,105,110,116,46,104,112,112,0,0,0,0,0,110,32,61,61,32,49,0,0,115,108,117,103,115,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,40,33,95,115,99,114,101,101,110,95,115,116,97,99,107,46,101,109,112,116,121,40,41,41,0,0,0,0,0,0,0,0,40,97,46,112,111,115,40,41,32,61,61,32,110,101,119,95,112,111,115,41,0,0,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,84,105,109,101,58,32,0,0,121,111,117,0,0,0,0,0,67,111,117,108,100,32,110,111,116,32,108,111,97,100,32,102,111,110,116,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,39,115,0,0,0,0,0,0,40,105,110,95,98,111,117,110,100,115,40,109,95,98,111,117,110,100,115,46,100,44,32,109,95,114,97,121,95,115,101,116,115,46,100,105,109,101,110,115,105,111,110,115,40,41,41,41,0,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,97,32,0,0,0,0,0,0,37,112,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,97,110,32,0,0,0,0,0,116,104,101,32,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,40,112,46,115,101,99,111,110,100,41,0,0,0,0,0,0,103,101,111,109,101,116,114,121,46,99,112,112,0,0,0,0,40,114,101,116,91,100,116,93,46,101,102,102,101,99,116,95,115,116,97,99,107,101,100,32,61,61,32,102,97,108,115,101,41,0,0,0,0,0,0,0,115,108,117,103,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,114,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,58,32,0,0,0,0,0,0,40,114,101,116,91,100,116,93,46,104,97,100,95,101,102,102,101,99,116,32,61,61,32,102,97,108,115,101,41,0,0,0,46,47,104,112,46,105,110,108,0,0,0,0,0,0,0,0,40,105,110,95,98,111,117,110,100,115,40,115,117,98,114,101,99,116,44,32,116,111,95,114,101,99,116,40,103,46,100,105,109,101,110,115,105,111,110,115,40,41,41,41,41,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,40,105,110,95,98,111,117,110,100,115,40,115,117,98,114,101,99,116,44,32,99,115,46,100,105,109,101,110,115,105,111,110,115,40,41,41,41,0,0,0,37,32,111,102,32,105,116,115,32,104,101,97,108,116,104,46,0,0,0,0,0,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,32,115,104,97,100,101,114,32,99,111,109,112,105,108,97,116,105,111,110,32,101,114,114,111,114,58,10,0,0,0,0,0,32,108,111,115,116,32,0,0,112,111,119,101,114,32,98,108,97,100,101,0,0,0,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,32,0,0,0,0,0,0,0,87,112,58,32,0,0,0,0,32,115,104,97,100,101,114,46,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,69,114,114,111,114,32,99,114,101,97,116,105,110,103,32,0,102,111,110,116,46,112,110,103,0,0,0,0,0,0,0,0,46,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,83,104,97,100,101,114,32,112,114,111,103,114,97,109,32,108,105,110,107,32,101,114,114,111,114,46,0,0,0,0,0,0,40,105,110,95,98,111,117,110,100,115,40,109,95,111,102,102,115,101,116,44,32,102,101,97,116,115,46,100,105,109,101,110,115,105,111,110,115,40,41,41,41,0,0,0,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,32,97,116,116,97,99,107,32,0,0,0,0,0,0,0,0,110,97,110,0,0,0,0,0,116,114,117,101,0,0,0,0,46,47,101,109,115,99,114,105,112,116,101,110,95,105,110,99,108,117,100,101,47,98,111,111,115,116,47,111,112,116,105,111,110,97,108,47,111,112,116,105,111,110,97,108,46,104,112,112,0,0,0,0,0,0,0,0,116,104,105,115,45,62,105,115,95,105,110,105,116,105,97,108,105,122,101,100,40,41,0,0,40,121,111,117,95,112,116,114,45,62,104,97,115,95,101,110,101,114,103,121,95,116,111,95,116,97,107,101,95,116,117,114,110,40,41,41,0,0,0,0,40,105,110,95,98,111,117,110,100,115,40,99,114,100,44,32,100,105,109,101,110,115,105,111,110,115,40,41,41,41,0,0,114,97,116,115,0,0,0,0,70,65,84,65,76,32,69,82,82,79,82,0,0,0,0,0,100,97,103,103,101,114,0,0,40,110,101,105,103,104,98,111,114,95,110,111,100,101,46,100,105,115,116,97,110,99,101,95,115,101,116,41,0,0,0,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,46,47,103,114,105,100,46,104,112,112,0,0,0,0,0,0,114,101,100,114,97,119,105,110,103,10,0,0,0,0,0,0,40,99,117,114,114,101,110,116,95,110,111,100,101,46,100,105,115,116,97,110,99,101,95,115,101,116,41,0,0,0,0,0,83,97,116,0,0,0,0,0,70,114,105,0,0,0,0,0,84,104,117,0,0,0,0,0,87,101,100,0,0,0,0,0,84,117,101,0,0,0,0,0,77,111,110,0,0,0,0,0,83,117,110,0,0,0,0,0,98,103,95,99,111,108,111,114,95,105,110,0,0,0,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,109,101,115,115,97,103,101,115,46,99,112,112,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,46,47,112,97,116,104,102,105,110,100,46,104,112,112,0,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,70,65,84,65,76,32,69,82,82,79,82,58,32,0,0,0,115,119,111,114,100,0,0,0,84,117,101,115,100,97,121,0,77,111,110,100,97,121,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,83,117,110,100,97,121,0,0,40,119,105,100,116,104,32,61,61,32,109,95,102,111,114,109,97,116,116,101,100,95,119,105,100,116,104,41,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,47,0,0,0,0,0,0,0,72,80,58,32,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,102,103,95,99,111,108,111,114,95,105,110,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,40,114,101,115,117,108,116,32,61,61,32,116,114,117,101,41,0,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,116,101,120,95,99,111,111,114,100,95,105,110,0,0,0,0,67,111,117,108,100,32,110,111,116,32,105,110,105,116,105,97,108,105,122,101,32,83,68,76,95,105,109,97,103,101,58,32,0,0,0,0,0,0,0,0,67,111,117,108,100,32,110,111,116,32,105,110,105,116,105,97,108,105,122,101,32,83,68,76,58,32,0,0,0,0,0,0,117,110,105,110,105,116,105,97,108,105,122,101,100,95,99,111,112,121,95,110,95,97,110,100,95,117,112,100,97,116,101,0,99,111,112,121,95,110,95,97,110,100,95,117,112,100,97,116,101,0,0,0,0,0,0,0,103,101,116,0,0,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,88,20,0,0,84,0,0,0,54,0,0,0,80,0,0,0,46,0,0,0,120,1,0,0,106,0,0,0,86,0,0,0,46,0,0,0,102,0,0,0,0,0,0,0,0,0,0,0,104,20,0,0,176,0,0,0,42,1,0,0,52,0,0,0,108,0,0,0,158,0,0,0,10,1,0,0,26,0,0,0,54,0,0,0,82,0,0,0,0,0,0,0,0,0,0,0,120,20,0,0,20,1,0,0,150,0,0,0,60,0,0,0,18,0,0,0,56,1,0,0,202,0,0,0,22,0,0,0,36,0,0,0,62,0,0,0,0,0,0,0,90,78,49,51,112,108,97,121,101,114,95,115,99,114,101,101,110,49,48,103,101,116,95,97,99,116,105,111,110,69,55,99,111,109,109,97,110,100,69,51,36,95,48,0,0,0,0,0,90,78,49,49,101,110,118,105,114,111,110,109,101,110,116,51,109,115,103,69,118,69,51,36,95,50,0,0,0,0,0,0,90,52,109,97,105,110,69,51,36,95,48,0,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,102,117,110,99,73,90,78,49,51,112,108,97,121,101,114,95,115,99,114,101,101,110,49,48,103,101,116,95,97,99,116,105,111,110,69,55,99,111,109,109,97,110,100,69,51,36,95,48,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,52,95,69,69,70,118,98,69,69,69,0,78,83,116,51,95,95,49,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,102,117,110,99,73,90,78,49,49,101,110,118,105,114,111,110,109,101,110,116,51,109,115,103,69,118,69,51,36,95,50,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,51,95,69,69,70,118,82,75,78,83,95,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,52,95,73,99,69,69,69,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,102,117,110,99,73,90,52,109,97,105,110,69,51,36,95,48,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,50,95,69,69,70,118,78,83,95,52,112,97,105,114,73,75,68,105,57,109,101,110,117,95,105,116,101,109,73,78,57,109,97,105,110,95,109,101,110,117,54,99,104,111,105,99,101,69,69,69,69,69,69,69,0,0,0,0,0,0,0,0,0,136,18,0,0,0,0,0,0,184,18,0,0,0,0,0,0,216,18,0,0,0,0,0,0,232,18,0,0,224,78,0,0,0,0,0,0,0,0,0,0,72,19,0,0,232,78,0,0,0,0,0,0,0,0,0,0,208,19,0,0,240,78,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,72,58,37,77,58,37,83,37,72,58,37,77,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,89,45,37,109,45,37,100,37,109,47,37,100,47,37,121,37,72,58,37,77,58,37,83,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,24,72,0,0,58,0,0,0,208,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,72,0,0,60,1,0,0,6,1,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,72,0,0,120,0,0,0,154,1,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,72,0,0,120,0,0,0,150,1,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,72,0,0,156,0,0,0,44,0,0,0,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,72,0,0,156,0,0,0,18,0,0,0,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,72,0,0,156,0,0,0,36,0,0,0,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,72,0,0,14,1,0,0,140,0,0,0,88,0,0,0,2,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,72,0,0,138,1,0,0,40,1,0,0,88,0,0,0,4,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,72,0,0,4,1,0,0,44,1,0,0,88,0,0,0,8,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,73,0,0,140,1,0,0,238,0,0,0,88,0,0,0,6,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,73,0,0,136,1,0,0,154,0,0,0,88,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,73,0,0,2,1,0,0,196,0,0,0,88,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,73,0,0,70,0,0,0,198,0,0,0,88,0,0,0,158,0,0,0,4,0,0,0,30,0,0,0,6,0,0,0,18,0,0,0,54,0,0,0,2,0,0,0,248,255,255,255,240,73,0,0,22,0,0,0,8,0,0,0,40,0,0,0,12,0,0,0,2,0,0,0,38,0,0,0,166,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,74,0,0,124,1,0,0,104,1,0,0,88,0,0,0,20,0,0,0,16,0,0,0,58,0,0,0,20,0,0,0,26,0,0,0,2,0,0,0,4,0,0,0,248,255,255,255,24,74,0,0,96,0,0,0,134,0,0,0,152,0,0,0,164,0,0,0,124,0,0,0,58,0,0,0,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,74,0,0,132,0,0,0,46,1,0,0,88,0,0,0,66,0,0,0,54,0,0,0,14,0,0,0,72,0,0,0,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,74,0,0,166,0,0,0,116,0,0,0,88,0,0,0,56,0,0,0,112,0,0,0,24,0,0,0,94,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,74,0,0,130,1,0,0,8,0,0,0,88,0,0,0,30,0,0,0,34,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,74,0,0,82,0,0,0,10,0,0,0,88,0,0,0,10,0,0,0,12,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,74,0,0,90,1,0,0,204,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,74,0,0,52,0,0,0,236,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,74,0,0,14,0,0,0,18,1,0,0,88,0,0,0,26,0,0,0,18,0,0,0,12,0,0,0,4,0,0,0,10,0,0,0,4,0,0,0,2,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,74,0,0,162,0,0,0,34,0,0,0,88,0,0,0,20,0,0,0,22,0,0,0,32,0,0,0,30,0,0,0,22,0,0,0,8,0,0,0,6,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,74,0,0,72,0,0,0,42,0,0,0,88,0,0,0,46,0,0,0,44,0,0,0,38,0,0,0,40,0,0,0,28,0,0,0,34,0,0,0,36,0,0,0,52,0,0,0,50,0,0,0,48,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,75,0,0,92,0,0,0,6,0,0,0,88,0,0,0,76,0,0,0,68,0,0,0,62,0,0,0,64,0,0,0,56,0,0,0,66,0,0,0,60,0,0,0,74,0,0,0,72,0,0,0,70,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,75,0,0,128,0,0,0,152,0,0,0,88,0,0,0,8,0,0,0,14,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,75,0,0,50,0,0,0,22,1,0,0,88,0,0,0,14,0,0,0,18,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,75,0,0,26,0,0,0,38,1,0,0,88,0,0,0,2,0,0,0,10,0,0,0,20,0,0,0,156,0,0,0,92,0,0,0,24,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,75,0,0,26,1,0,0,226,0,0,0,88,0,0,0,14,0,0,0,16,0,0,0,16,0,0,0,70,0,0,0,6,0,0,0,18,0,0,0,120,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,75,0,0,26,1,0,0,38,0,0,0,88,0,0,0,6,0,0,0,4,0,0,0,4,0,0,0,126,0,0,0,86,0,0,0,12,0,0,0,168,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,75,0,0,26,1,0,0,174,0,0,0,88,0,0,0,12,0,0,0,8,0,0,0,22,0,0,0,36,0,0,0,100,0,0,0,10,0,0,0,176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,75,0,0,26,1,0,0,62,0,0,0,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,75,0,0,102,0,0,0,216,0,0,0,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,75,0,0,26,1,0,0,134,0,0,0,88,0,0,0,24,0,0,0,6,0,0,0,2,0,0,0,10,0,0,0,22,0,0,0,38,0,0,0,50,0,0,0,6,0,0,0,8,0,0,0,8,0,0,0,12,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,76,0,0,148,1,0,0,64,0,0,0,88,0,0,0,16,0,0,0,26,0,0,0,34,0,0,0,48,0,0,0,14,0,0,0,4,0,0,0,32,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,76,0,0,170,0,0,0,98,1,0,0,104,0,0,0,6,0,0,0,18,0,0,0,46,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,88,76,0,0,66,1,0,0,144,1,0,0,56,0,0,0,248,255,255,255,88,76,0,0,86,0,0,0,104,0,0,0,192,255,255,255,192,255,255,255,88,76,0,0,76,1,0,0,70,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,76,0,0,246,0,0,0,234,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,76,0,0,26,1,0,0,142,0,0,0,88,0,0,0,12,0,0,0,8,0,0,0,22,0,0,0,36,0,0,0,100,0,0,0,10,0,0,0,176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,76,0,0,26,1,0,0,8,1,0,0,88,0,0,0,12,0,0,0,8,0,0,0,22,0,0,0,36,0,0,0,100,0,0,0,10,0,0,0,176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,76,0,0,224,0,0,0,86,1,0,0,102,0,0,0,50,0,0,0,24,0,0,0,2,0,0,0,68,0,0,0,114,0,0,0,22,0,0,0,162,0,0,0,10,0,0,0,56,0,0,0,20,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,76,0,0,220,0,0,0,116,1,0,0,42,0,0,0,28,0,0,0,14,0,0,0,16,0,0,0,116,0,0,0,108,0,0,0,44,0,0,0,34,0,0,0,32,0,0,0,10,0,0,0,2,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,76,0,0,20,0,0,0,210,0,0,0,102,0,0,0,50,0,0,0,32,0,0,0,12,0,0,0,68,0,0,0,114,0,0,0,22,0,0,0,4,0,0,0,10,0,0,0,60,0,0,0,20,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,224,76,0,0,254,0,0,0,24,1,0,0,148,255,255,255,148,255,255,255,224,76,0,0,180,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,16,77,0,0,78,0,0,0,84,1,0,0,252,255,255,255,252,255,255,255,16,77,0,0,244,0,0,0,218,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,40,77,0,0,92,1,0,0,118,1,0,0,252,255,255,255,252,255,255,255,40,77,0,0,194,0,0,0,64,1,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,64,77,0,0,146,0,0,0,152,1,0,0,248,255,255,255,248,255,255,255,64,77,0,0,28,1,0,0,114,1,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,88,77,0,0,192,0,0,0,74,1,0,0,248,255,255,255,248,255,255,255,88,77,0,0,232,0,0,0,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,77,0,0,228,0,0,0,110,0,0,0,82,0,0,0,36,0,0,0,10,0,0,0,4,0,0,0,64,0,0,0,114,0,0,0,22,0,0,0,118,0,0,0,10,0,0,0,32,0,0,0,20,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,77,0,0,72,1,0,0,32,1,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,77,0,0,78,1,0,0,108,1,0,0,32,0,0,0,28,0,0,0,14,0,0,0,16,0,0,0,78,0,0,0,108,0,0,0,44,0,0,0,34,0,0,0,32,0,0,0,10,0,0,0,42,0,0,0,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,77,0,0,148,0,0,0,80,1,0,0,64,0,0,0,50,0,0,0,32,0,0,0,12,0,0,0,14,0,0,0,114,0,0,0,22,0,0,0,4,0,0,0,10,0,0,0,60,0,0,0,52,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,77,0,0,100,1,0,0,242,0,0,0,88,0,0,0,94,0,0,0,154,0,0,0,74,0,0,0,124,0,0,0,6,0,0,0,58,0,0,0,72,0,0,0,48,0,0,0,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,78,0,0,182,0,0,0,98,0,0,0,88,0,0,0,144,0,0,0,150,0,0,0,112,0,0,0,120,0,0,0,122,0,0,0,52,0,0,0,148,0,0,0,90,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,78,0,0,106,1,0,0,206,0,0,0,88,0,0,0,16,0,0,0,84,0,0,0,8,0,0,0,84,0,0,0,126,0,0,0,92,0,0,0,122,0,0,0,96,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,78,0,0,130,0,0,0,16,1,0,0,88,0,0,0,130,0,0,0,138,0,0,0,56,0,0,0,118,0,0,0,54,0,0,0,44,0,0,0,106,0,0,0,116,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,78,0,0,78,1,0,0,32,0,0,0,98,0,0,0,28,0,0,0,14,0,0,0,16,0,0,0,116,0,0,0,108,0,0,0,44,0,0,0,98,0,0,0,110,0,0,0,18,0,0,0,2,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,78,0,0,148,0,0,0,94,1,0,0,110,0,0,0,50,0,0,0,32,0,0,0,12,0,0,0,68,0,0,0,114,0,0,0,22,0,0,0,18,0,0,0,26,0,0,0,4,0,0,0,20,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,78,0,0,176,0,0,0,114,0,0,0,132,0,0,0,10,0,0,0,190,0,0,0,186,0,0,0,30,0,0,0,30,0,0,0,170,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,78,0,0,176,0,0,0,34,1,0,0,160,0,0,0,80,0,0,0,16,0,0,0,188,0,0,0,78,0,0,0,28,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,78,0,0,94,0,0,0,112,1,0,0,174,0,0,0,12,0,0,0,168,0,0,0,28,0,0,0,30,0,0,0,24,0,0,0,136,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,78,0,0,178,0,0,0,4,0,0,0,88,0,0,0,4,0,0,0,164,0,0,0,24,0,0,0,64,0,0,0,38,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,79,0,0,48,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,79,0,0,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,79,0,0,68,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,79,0,0,50,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,79,0,0,128,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,79,0,0,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,79,0,0,142,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,79,0,0,212,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,79,0,0,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,79,0,0,172,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,79,0,0,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,79,0,0,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,79,0,0,52,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,79,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,79,0,0,134,1,0,0,144,0,0,0,108,0,0,0,248,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,80,0,0,134,1,0,0,62,1,0,0,108,0,0,0,248,0,0,0,8,0,0,0,2,0,0,0,6,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,80,0,0,134,1,0,0,88,1,0,0,108,0,0,0,248,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,80,0,0,132,1,0,0,48,0,0,0,76,0,0,0,70,0,0,0,42,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,80,0,0,30,1,0,0,124,0,0,0,90,0,0,0,20,0,0,0,52,0,0,0,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,80,0,0,58,1,0,0,122,0,0,0,140,0,0,0,50,0,0,0,12,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,80,0,0,214,0,0,0,82,1,0,0,172,0,0,0,76,0,0,0,68,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,118,0,0,0,0,0,0,0,90,78,49,56,113,117,105,99,107,95,115,116,114,105,110,103,115,116,114,101,97,109,67,49,69,82,78,83,116,51,95,95,49,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,99,78,83,48,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,48,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,69,85,108,82,75,83,54,95,69,95,0,0,0,0,90,78,49,56,113,117,105,99,107,95,115,116,114,105,110,103,115,116,114,101,97,109,67,49,69,49,48,97,112,112,101,110,100,95,116,97,103,82,78,83,116,51,95,95,49,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,99,78,83,49,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,49,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,69,85,108,82,75,83,55,95,69,95,0,0,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,83,116,49,52,111,118,101,114,102,108,111,119,95,101,114,114,111,114,0,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,83,116,49,50,111,117,116,95,111,102,95,114,97,110,103,101,0,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,80,70,98,118,69,0,0,0,80,70,98,68,105,69,0,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,78,83,116,51,95,95,49,49,56,98,97,115,105,99,95,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,49,55,98,97,100,95,102,117,110,99,116,105,111,110,95,99,97,108,108,69,0,0,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,102,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,102,105,108,101,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,78,83,116,51,95,95,49,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,102,117,110,99,73,90,78,49,56,113,117,105,99,107,95,115,116,114,105,110,103,115,116,114,101,97,109,67,49,69,82,78,83,95,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,69,85,108,82,75,83,56,95,69,95,78,83,54,95,73,83,67,95,69,69,70,118,83,66,95,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,102,117,110,99,73,90,78,49,56,113,117,105,99,107,95,115,116,114,105,110,103,115,116,114,101,97,109,67,49,69,49,48,97,112,112,101,110,100,95,116,97,103,82,78,83,95,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,69,85,108,82,75,83,57,95,69,95,78,83,55,95,73,83,68,95,69,69,70,118,83,67,95,69,69,69,0,78,83,116,51,95,95,49,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,102,117,110,99,73,80,70,98,118,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,51,95,69,69,83,50,95,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,102,117,110,99,73,80,70,98,68,105,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,51,95,69,69,83,50,95,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,98,97,115,101,73,70,118,98,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,98,97,115,101,73,70,118,82,75,78,83,95,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,98,97,115,101,73,70,118,78,83,95,52,112,97,105,114,73,75,68,105,57,109,101,110,117,95,105,116,101,109,73,78,57,109,97,105,110,95,109,101,110,117,54,99,104,111,105,99,101,69,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,98,97,115,101,73,70,98,118,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,102,117,110,99,116,105,111,110,54,95,95,98,97,115,101,73,70,98,68,105,69,69,69,0,0,0,0,0,0,78,49,56,99,111,109,112,111,110,101,110,116,95,105,110,115,116,97,110,99,101,73,55,109,111,110,115,116,101,114,74,50,53,99,95,109,111,110,115,116,101,114,95,101,110,118,105,114,111,110,109,101,110,116,95,114,101,102,49,53,99,95,109,111,110,115,116,101,114,95,103,108,121,112,104,49,50,99,95,109,111,110,115,116,101,114,95,105,100,49,53,99,95,109,111,110,115,116,101,114,95,109,101,108,101,101,49,52,99,95,109,111,110,115,116,101,114,95,110,97,109,101,49,55,99,95,109,111,110,115,116,101,114,95,115,112,101,99,105,101,115,49,53,99,95,109,111,110,115,116,101,114,95,116,117,114,110,115,56,99,95,101,110,101,114,103,121,52,99,95,104,112,49,48,99,95,112,111,115,105,116,105,111,110,69,69,49,54,99,97,108,108,95,101,118,101,110,116,95,108,97,116,101,114,73,78,83,65,95,73,83,48,95,69,49,56,101,95,112,111,115,105,116,105,111,110,95,99,104,97,110,103,101,100,69,74,53,99,111,111,114,100,69,69,69,0,0,0,78,49,56,99,111,109,112,111,110,101,110,116,95,105,110,115,116,97,110,99,101,73,55,109,111,110,115,116,101,114,74,50,53,99,95,109,111,110,115,116,101,114,95,101,110,118,105,114,111,110,109,101,110,116,95,114,101,102,49,53,99,95,109,111,110,115,116,101,114,95,103,108,121,112,104,49,50,99,95,109,111,110,115,116,101,114,95,105,100,49,53,99,95,109,111,110,115,116,101,114,95,109,101,108,101,101,49,52,99,95,109,111,110,115,116,101,114,95,110,97,109,101,49,55,99,95,109,111,110,115,116,101,114,95,115,112,101,99,105,101,115,49,53,99,95,109,111,110,115,116,101,114,95,116,117,114,110,115,56,99,95,101,110,101,114,103,121,52,99,95,104,112,49,48,99,95,112,111,115,105,116,105,111,110,69,69,49,54,99,97,108,108,95,101,118,101,110,116,95,108,97,116,101,114,73,78,83,57,95,73,83,48,95,69,49,50,101,95,104,112,95,99,104,97,110,103,101,100,69,74,105,105,69,69,69,0,0,0,0,0,78,49,56,99,111,109,112,111,110,101,110,116,95,105,110,115,116,97,110,99,101,73,55,109,111,110,115,116,101,114,74,50,53,99,95,109,111,110,115,116,101,114,95,101,110,118,105,114,111,110,109,101,110,116,95,114,101,102,49,53,99,95,109,111,110,115,116,101,114,95,103,108,121,112,104,49,50,99,95,109,111,110,115,116,101,114,95,105,100,49,53,99,95,109,111,110,115,116,101,114,95,109,101,108,101,101,49,52,99,95,109,111,110,115,116,101,114,95,110,97,109,101,49,55,99,95,109,111,110,115,116,101,114,95,115,112,101,99,105,101,115,49,53,99,95,109,111,110,115,116,101,114,95,116,117,114,110,115,56,99,95,101,110,101,114,103,121,52,99,95,104,112,49,48,99,95,112,111,115,105,116,105,111,110,69,69,49,54,99,97,108,108,95,101,118,101,110,116,95,108,97,116,101,114,73,78,83,56,95,73,83,48,95,69,49,54,101,95,101,110,101,114,103,121,95,99,104,97,110,103,101,100,69,74,69,69,69,0,0,0,78,49,56,99,111,109,112,111,110,101,110,116,95,105,110,115,116,97,110,99,101,73,55,109,111,110,115,116,101,114,74,50,53,99,95,109,111,110,115,116,101,114,95,101,110,118,105,114,111,110,109,101,110,116,95,114,101,102,49,53,99,95,109,111,110,115,116,101,114,95,103,108,121,112,104,49,50,99,95,109,111,110,115,116,101,114,95,105,100,49,53,99,95,109,111,110,115,116,101,114,95,109,101,108,101,101,49,52,99,95,109,111,110,115,116,101,114,95,110,97,109,101,49,55,99,95,109,111,110,115,116,101,114,95,115,112,101,99,105,101,115,49,53,99,95,109,111,110,115,116,101,114,95,116,117,114,110,115,56,99,95,101,110,101,114,103,121,52,99,95,104,112,49,48,99,95,112,111,115,105,116,105,111,110,69,69,49,54,99,97,108,108,95,101,118,101,110,116,95,108,97,116,101,114,73,78,49,49,101,110,118,105,114,111,110,109,101,110,116,49,49,101,95,116,105,109,101,95,115,116,101,112,69,74,69,69,69,0,0,0,78,49,56,99,111,109,112,111,110,101,110,116,95,105,110,115,116,97,110,99,101,73,55,109,111,110,115,116,101,114,74,50,53,99,95,109,111,110,115,116,101,114,95,101,110,118,105,114,111,110,109,101,110,116,95,114,101,102,49,53,99,95,109,111,110,115,116,101,114,95,103,108,121,112,104,49,50,99,95,109,111,110,115,116,101,114,95,105,100,49,53,99,95,109,111,110,115,116,101,114,95,109,101,108,101,101,49,52,99,95,109,111,110,115,116,101,114,95,110,97,109,101,49,55,99,95,109,111,110,115,116,101,114,95,115,112,101,99,105,101,115,49,53,99,95,109,111,110,115,116,101,114,95,116,117,114,110,115,56,99,95,101,110,101,114,103,121,52,99,95,104,112,49,48,99,95,112,111,115,105,116,105,111,110,69,69,49,54,99,97,108,108,95,101,118,101,110,116,95,108,97,116,101,114,73,78,49,49,101,110,118,105,114,111,110,109,101,110,116,49,49,101,95,112,111,115,116,95,116,117,114,110,69,74,69,69,69,0,0,0,78,49,56,99,111,109,112,111,110,101,110,116,95,105,110,115,116,97,110,99,101,73,55,109,111,110,115,116,101,114,74,50,53,99,95,109,111,110,115,116,101,114,95,101,110,118,105,114,111,110,109,101,110,116,95,114,101,102,49,53,99,95,109,111,110,115,116,101,114,95,103,108,121,112,104,49,50,99,95,109,111,110,115,116,101,114,95,105,100,49,53,99,95,109,111,110,115,116,101,114,95,109,101,108,101,101,49,52,99,95,109,111,110,115,116,101,114,95,110,97,109,101,49,55,99,95,109,111,110,115,116,101,114,95,115,112,101,99,105,101,115,49,53,99,95,109,111,110,115,116,101,114,95,116,117,114,110,115,56,99,95,101,110,101,114,103,121,52,99,95,104,112,49,48,99,95,112,111,115,105,116,105,111,110,69,69,49,54,99,97,108,108,95,101,118,101,110,116,95,108,97,116,101,114,73,78,49,49,101,110,118,105,114,111,110,109,101,110,116,49,48,101,95,112,114,101,95,116,117,114,110,69,74,69,69,69,0,0,0,0,78,49,56,99,111,109,112,111,110,101,110,116,95,105,110,115,116,97,110,99,101,73,55,109,111,110,115,116,101,114,74,50,53,99,95,109,111,110,115,116,101,114,95,101,110,118,105,114,111,110,109,101,110,116,95,114,101,102,49,53,99,95,109,111,110,115,116,101,114,95,103,108,121,112,104,49,50,99,95,109,111,110,115,116,101,114,95,105,100,49,53,99,95,109,111,110,115,116,101,114,95,109,101,108,101,101,49,52,99,95,109,111,110,115,116,101,114,95,110,97,109,101,49,55,99,95,109,111,110,115,116,101,114,95,115,112,101,99,105,101,115,49,53,99,95,109,111,110,115,116,101,114,95,116,117,114,110,115,56,99,95,101,110,101,114,103,121,52,99,95,104,112,49,48,99,95,112,111,115,105,116,105,111,110,69,69,49,50,101,118,101,110,116,95,99,97,108,108,101,114,69,0,0,0,0,0,0,0,78,49,56,99,111,109,112,111,110,101,110,116,95,105,110,115,116,97,110,99,101,73,54,112,108,97,121,101,114,74,50,52,99,95,112,108,97,121,101,114,95,101,110,118,105,114,111,110,109,101,110,116,95,114,101,102,49,52,99,95,112,108,97,121,101,114,95,103,108,121,112,104,49,49,99,95,112,108,97,121,101,114,95,105,100,49,56,99,95,112,108,97,121,101,114,95,105,110,118,101,110,116,111,114,121,49,52,99,95,112,108,97,121,101,114,95,109,101,108,101,101,49,51,99,95,112,108,97,121,101,114,95,110,97,109,101,50,50,99,95,112,108,97,121,101,114,95,110,111,116,105,102,105,99,97,116,105,111,110,115,49,54,99,95,112,108,97,121,101,114,95,115,112,101,99,105,101,115,49,52,99,95,112,108,97,121,101,114,95,116,117,114,110,115,56,99,95,101,110,101,114,103,121,52,99,95,104,112,53,99,95,108,111,115,49,53,99,95,109,97,112,95,107,110,111,119,108,101,100,103,101,49,48,99,95,112,111,115,105,116,105,111,110,69,69,49,54,99,97,108,108,95,101,118,101,110,116,95,108,97,116,101,114,73,78,83,69,95,73,83,48,95,69,49,56,101,95,112,111,115,105,116,105,111,110,95,99,104,97,110,103,101,100,69,74,53,99,111,111,114,100,69,69,69,0,0,0,0,0,0,0,0,78,49,56,99,111,109,112,111,110,101,110,116,95,105,110,115,116,97,110,99,101,73,54,112,108,97,121,101,114,74,50,52,99,95,112,108,97,121,101,114,95,101,110,118,105,114,111,110,109,101,110,116,95,114,101,102,49,52,99,95,112,108,97,121,101,114,95,103,108,121,112,104,49,49,99,95,112,108,97,121,101,114,95,105,100,49,56,99,95,112,108,97,121,101,114,95,105,110,118,101,110,116,111,114,121,49,52,99,95,112,108,97,121,101,114,95,109,101,108,101,101,49,51,99,95,112,108,97,121,101,114,95,110,97,109,101,50,50,99,95,112,108,97,121,101,114,95,110,111,116,105,102,105,99,97,116,105,111,110,115,49,54,99,95,112,108,97,121,101,114,95,115,112,101,99,105,101,115,49,52,99,95,112,108,97,121,101,114,95,116,117,114,110,115,56,99,95,101,110,101,114,103,121,52,99,95,104,112,53,99,95,108,111,115,49,53,99,95,109,97,112,95,107,110,111,119,108,101,100,103,101,49,48,99,95,112,111,115,105,116,105,111,110,69,69,49,54,99,97,108,108,95,101,118,101,110,116,95,108,97,116,101,114,73,78,83,68,95,73,83,48,95,69,50,53,101,95,109,111,110,115,116,101,114,95,99,111,109,101,115,95,105,110,116,111,95,118,105,101,119,69,74,78,83,116,51,95,95,49,54,118,101,99,116,111,114,73,51,48,101,95,109,111,110,115,116,101,114,95,99,111,109,101,115,95,105,110,116,111,95,118,105,101,119,95,100,97,116,97,78,83,74,95,57,97,108,108,111,99,97,116,111,114,73,83,76,95,69,69,69,69,69,69,69,0,0,78,49,56,99,111,109,112,111,110,101,110,116,95,105,110,115,116,97,110,99,101,73,54,112,108,97,121,101,114,74,50,52,99,95,112,108,97,121,101,114,95,101,110,118,105,114,111,110,109,101,110,116,95,114,101,102,49,52,99,95,112,108,97,121,101,114,95,103,108,121,112,104,49,49,99,95,112,108,97,121,101,114,95,105,100,49,56,99,95,112,108,97,121,101,114,95,105,110,118,101,110,116,111,114,121,49,52,99,95,112,108,97,121,101,114,95,109,101,108,101,101,49,51,99,95,112,108,97,121,101,114,95,110,97,109,101,50,50,99,95,112,108,97,121,101,114,95,110,111,116,105,102,105,99,97,116,105,111,110,115,49,54,99,95,112,108,97,121,101,114,95,115,112,101,99,105,101,115,49,52,99,95,112,108,97,121,101,114,95,116,117,114,110,115,56,99,95,101,110,101,114,103,121,52,99,95,104,112,53,99,95,108,111,115,49,53,99,95,109,97,112,95,107,110,111,119,108,101,100,103,101,49,48,99,95,112,111,115,105,116,105,111,110,69,69,49,54,99,97,108,108,95,101,118,101,110,116,95,108,97,116,101,114,73,78,83,67,95,73,83,48,95,69,49,51,101,95,108,111,115,95,99,104,97,110,103,101,100,69,74,69,69,69,0,0,0,78,49,56,99,111,109,112,111,110,101,110,116,95,105,110,115,116,97,110,99,101,73,54,112,108,97,121,101,114,74,50,52,99,95,112,108,97,121,101,114,95,101,110,118,105,114,111,110,109,101,110,116,95,114,101,102,49,52,99,95,112,108,97,121,101,114,95,103,108,121,112,104,49,49,99,95,112,108,97,121,101,114,95,105,100,49,56,99,95,112,108,97,121,101,114,95,105,110,118,101,110,116,111,114,121,49,52,99,95,112,108,97,121,101,114,95,109,101,108,101,101,49,51,99,95,112,108,97,121,101,114,95,110,97,109,101,50,50,99,95,112,108,97,121,101,114,95,110,111,116,105,102,105,99,97,116,105,111,110,115,49,54,99,95,112,108,97,121,101,114,95,115,112,101,99,105,101,115,49,52,99,95,112,108,97,121,101,114,95,116,117,114,110,115,56,99,95,101,110,101,114,103,121,52,99,95,104,112,53,99,95,108,111,115,49,53,99,95,109,97,112,95,107,110,111,119,108,101,100,103,101,49,48,99,95,112,111,115,105,116,105,111,110,69,69,49,54,99,97,108,108,95,101,118,101,110,116,95,108,97,116,101,114,73,78,83,66,95,73,83,48,95,69,49,50,101,95,104,112,95,99,104,97,110,103,101,100,69,74,105,105,69,69,69,0,0,78,49,56,99,111,109,112,111,110,101,110,116,95,105,110,115,116,97,110,99,101,73,54,112,108,97,121,101,114,74,50,52,99,95,112,108,97,121,101,114,95,101,110,118,105,114,111,110,109,101,110,116,95,114,101,102,49,52,99,95,112,108,97,121,101,114,95,103,108,121,112,104,49,49,99,95,112,108,97,121,101,114,95,105,100,49,56,99,95,112,108,97,121,101,114,95,105,110,118,101,110,116,111,114,121,49,52,99,95,112,108,97,121,101,114,95,109,101,108,101,101,49,51,99,95,112,108,97,121,101,114,95,110,97,109,101,50,50,99,95,112,108,97,121,101,114,95,110,111,116,105,102,105,99,97,116,105,111,110,115,49,54,99,95,112,108,97,121,101,114,95,115,112,101,99,105,101,115,49,52,99,95,112,108,97,121,101,114,95,116,117,114,110,115,56,99,95,101,110,101,114,103,121,52,99,95,104,112,53,99,95,108,111,115,49,53,99,95,109,97,112,95,107,110,111,119,108,101,100,103,101,49,48,99,95,112,111,115,105,116,105,111,110,69,69,49,54,99,97,108,108,95,101,118,101,110,116,95,108,97,116,101,114,73,78,83,65,95,73,83,48,95,69,49,54,101,95,101,110,101,114,103,121,95,99,104,97,110,103,101,100,69,74,69,69,69,0,0,0,0,0,0,0,0,78,49,56,99,111,109,112,111,110,101,110,116,95,105,110,115,116,97,110,99,101,73,54,112,108,97,121,101,114,74,50,52,99,95,112,108,97,121,101,114,95,101,110,118,105,114,111,110,109,101,110,116,95,114,101,102,49,52,99,95,112,108,97,121,101,114,95,103,108,121,112,104,49,49,99,95,112,108,97,121,101,114,95,105,100,49,56,99,95,112,108,97,121,101,114,95,105,110,118,101,110,116,111,114,121,49,52,99,95,112,108,97,121,101,114,95,109,101,108,101,101,49,51,99,95,112,108,97,121,101,114,95,110,97,109,101,50,50,99,95,112,108,97,121,101,114,95,110,111,116,105,102,105,99,97,116,105,111,110,115,49,54,99,95,112,108,97,121,101,114,95,115,112,101,99,105,101,115,49,52,99,95,112,108,97,121,101,114,95,116,117,114,110,115,56,99,95,101,110,101,114,103,121,52,99,95,104,112,53,99,95,108,111,115,49,53,99,95,109,97,112,95,107,110,111,119,108,101,100,103,101,49,48,99,95,112,111,115,105,116,105,111,110,69,69,49,54,99,97,108,108,95,101,118,101,110,116,95,108,97,116,101,114,73,78,49,49,101,110,118,105,114,111,110,109,101,110,116,49,49,101,95,116,105,109,101,95,115,116,101,112,69,74,69,69,69,0,0,0,0,0,0,0,0,78,49,56,99,111,109,112,111,110,101,110,116,95,105,110,115,116,97,110,99,101,73,54,112,108,97,121,101,114,74,50,52,99,95,112,108,97,121,101,114,95,101,110,118,105,114,111,110,109,101,110,116,95,114,101,102,49,52,99,95,112,108,97,121,101,114,95,103,108,121,112,104,49,49,99,95,112,108,97,121,101,114,95,105,100,49,56,99,95,112,108,97,121,101,114,95,105,110,118,101,110,116,111,114,121,49,52,99,95,112,108,97,121,101,114,95,109,101,108,101,101,49,51,99,95,112,108,97,121,101,114,95,110,97,109,101,50,50,99,95,112,108,97,121,101,114,95,110,111,116,105,102,105,99,97,116,105,111,110,115,49,54,99,95,112,108,97,121,101,114,95,115,112,101,99,105,101,115,49,52,99,95,112,108,97,121,101,114,95,116,117,114,110,115,56,99,95,101,110,101,114,103,121,52,99,95,104,112,53,99,95,108,111,115,49,53,99,95,109,97,112,95,107,110,111,119,108,101,100,103,101,49,48,99,95,112,111,115,105,116,105,111,110,69,69,49,54,99,97,108,108,95,101,118,101,110,116,95,108,97,116,101,114,73,78,49,49,101,110,118,105,114,111,110,109,101,110,116,49,49,101,95,112,111,115,116,95,116,117,114,110,69,74,69,69,69,0,0,0,0,0,0,0,0,78,49,56,99,111,109,112,111,110,101,110,116,95,105,110,115,116,97,110,99,101,73,54,112,108,97,121,101,114,74,50,52,99,95,112,108,97,121,101,114,95,101,110,118,105,114,111,110,109,101,110,116,95,114,101,102,49,52,99,95,112,108,97,121,101,114,95,103,108,121,112,104,49,49,99,95,112,108,97,121,101,114,95,105,100,49,56,99,95,112,108,97,121,101,114,95,105,110,118,101,110,116,111,114,121,49,52,99,95,112,108,97,121,101,114,95,109,101,108,101,101,49,51,99,95,112,108,97,121,101,114,95,110,97,109,101,50,50,99,95,112,108,97,121,101,114,95,110,111,116,105,102,105,99,97,116,105,111,110,115,49,54,99,95,112,108,97,121,101,114,95,115,112,101,99,105,101,115,49,52,99,95,112,108,97,121,101,114,95,116,117,114,110,115,56,99,95,101,110,101,114,103,121,52,99,95,104,112,53,99,95,108,111,115,49,53,99,95,109,97,112,95,107,110,111,119,108,101,100,103,101,49,48,99,95,112,111,115,105,116,105,111,110,69,69,49,54,99,97,108,108,95,101,118,101,110,116,95,108,97,116,101,114,73,78,49,49,101,110,118,105,114,111,110,109,101,110,116,49,48,101,95,112,114,101,95,116,117,114,110,69,74,69,69,69,0,78,49,56,99,111,109,112,111,110,101,110,116,95,105,110,115,116,97,110,99,101,73,54,112,108,97,121,101,114,74,50,52,99,95,112,108,97,121,101,114,95,101,110,118,105,114,111,110,109,101,110,116,95,114,101,102,49,52,99,95,112,108,97,121,101,114,95,103,108,121,112,104,49,49,99,95,112,108,97,121,101,114,95,105,100,49,56,99,95,112,108,97,121,101,114,95,105,110,118,101,110,116,111,114,121,49,52,99,95,112,108,97,121,101,114,95,109,101,108,101,101,49,51,99,95,112,108,97,121,101,114,95,110,97,109,101,50,50,99,95,112,108,97,121,101,114,95,110,111,116,105,102,105,99,97,116,105,111,110,115,49,54,99,95,112,108,97,121,101,114,95,115,112,101,99,105,101,115,49,52,99,95,112,108,97,121,101,114,95,116,117,114,110,115,56,99,95,101,110,101,114,103,121,52,99,95,104,112,53,99,95,108,111,115,49,53,99,95,109,97,112,95,107,110,111,119,108,101,100,103,101,49,48,99,95,112,111,115,105,116,105,111,110,69,69,49,50,101,118,101,110,116,95,99,97,108,108,101,114,69,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,51,95,95,102,117,110,100,97,109,101,110,116,97,108,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,102,117,110,99,116,105,111,110,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,70,98,118,69,0,0,0,0,70,98,68,105,69,0,0,0,68,110,0,0,0,0,0,0,57,109,97,105,110,95,109,101,110,117,0,0,0,0,0,0,54,115,99,114,101,101,110,0,49,53,115,101,108,101,99,116,95,111,110,101,95,109,101,110,117,73,78,57,109,97,105,110,95,109,101,110,117,54,99,104,111,105,99,101,69,69,0,0,49,51,112,108,97,121,101,114,95,115,99,114,101,101,110,0,49,49,121,101,115,110,111,95,112,111,112,117,112,0,0,0,192,35,0,0,216,36,0,0,0,0,0,0,224,36,0,0,0,0,0,0,72,37,0,0,0,0,0,0,192,37,0,0,0,0,0,0,208,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,37,0,0,72,72,0,0,0,0,0,0,0,0,0,0,8,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,38,0,0,120,72,0,0,0,0,0,0,0,0,0,0,56,38,0,0,120,72,0,0,0,0,0,0,0,0,0,0,80,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,38,0,0,0,0,0,0,120,80,0,0,0,0,0,0,104,38,0,0,0,0,0,0,128,80,0,0,0,0,0,0,112,38,0,0,232,35,0,0,136,38,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,200,77,0,0,0,0,0,0,232,35,0,0,208,38,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,208,77,0,0,0,0,0,0,232,35,0,0,24,39,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,216,77,0,0,0,0,0,0,232,35,0,0,96,39,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,224,77,0,0,0,0,0,0,0,0,0,0,168,39,0,0,160,74,0,0,0,0,0,0,0,0,0,0,216,39,0,0,160,74,0,0,0,0,0,0,232,35,0,0,8,40,0,0,0,0,0,0,1,0,0,0,248,76,0,0,0,0,0,0,232,35,0,0,32,40,0,0,0,0,0,0,1,0,0,0,248,76,0,0,0,0,0,0,232,35,0,0,56,40,0,0,0,0,0,0,1,0,0,0,0,77,0,0,0,0,0,0,232,35,0,0,80,40,0,0,0,0,0,0,1,0,0,0,0,77,0,0,0,0,0,0,232,35,0,0,104,40,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,120,78,0,0,0,8,0,0,232,35,0,0,176,40,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,120,78,0,0,0,8,0,0,232,35,0,0,248,40,0,0,0,0,0,0,3,0,0,0,216,75,0,0,2,0,0,0,168,72,0,0,2,0,0,0,56,76,0,0,0,8,0,0,232,35,0,0,64,41,0,0,0,0,0,0,3,0,0,0,216,75,0,0,2,0,0,0,168,72,0,0,2,0,0,0,64,76,0,0,0,8,0,0,0,0,0,0,136,41,0,0,216,75,0,0,0,0,0,0,0,0,0,0,160,41,0,0,216,75,0,0,0,0,0,0,232,35,0,0,184,41,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,8,77,0,0,2,0,0,0,232,35,0,0,208,41,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,8,77,0,0,2,0,0,0,0,0,0,0,232,41,0,0,0,0,0,0,0,42,0,0,128,77,0,0,0,0,0,0,232,35,0,0,32,42,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,80,73,0,0,0,0,0,0,232,35,0,0,104,42,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,104,73,0,0,0,0,0,0,232,35,0,0,176,42,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,128,73,0,0,0,0,0,0,232,35,0,0,248,42,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,152,73,0,0,0,0,0,0,0,0,0,0,64,43,0,0,216,75,0,0,0,0,0,0,0,0,0,0,88,43,0,0,216,75,0,0,0,0,0,0,232,35,0,0,112,43,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,144,77,0,0,2,0,0,0,232,35,0,0,152,43,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,144,77,0,0,2,0,0,0,232,35,0,0,192,43,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,144,77,0,0,2,0,0,0,232,35,0,0,232,43,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,144,77,0,0,2,0,0,0,0,0,0,0,16,44,0,0,240,76,0,0,0,0,0,0,0,0,0,0,40,44,0,0,216,75,0,0,0,0,0,0,232,35,0,0,64,44,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,112,78,0,0,2,0,0,0,232,35,0,0,88,44,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,112,78,0,0,2,0,0,0,0,0,0,0,112,44,0,0,0,0,0,0,152,44,0,0,0,0,0,0,192,44,0,0,152,77,0,0,0,0,0,0,0,0,0,0,224,44,0,0,192,76,0,0,0,0,0,0,0,0,0,0,40,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,45,0,0,184,75,0,0,0,0,0,0,0,0,0,0,112,45,0,0,184,75,0,0,0,0,0,0,0,0,0,0,152,45,0,0,176,76,0,0,0,0,0,0,0,0,0,0,224,45,0,0,0,0,0,0,24,46,0,0,0,0,0,0,80,46,0,0,232,35,0,0,112,46,0,0,3,0,0,0,2,0,0,0,88,77,0,0,2,0,0,0,40,77,0,0,2,8,0,0,0,0,0,0,160,46,0,0,88,77,0,0,0,0,0,0,0,0,0,0,208,46,0,0,0,0,0,0,240,46,0,0,0,0,0,0,16,47,0,0,0,0,0,0,48,47,0,0,232,35,0,0,72,47,0,0,0,0,0,0,1,0,0,0,48,73,0,0,3,244,255,255,232,35,0,0,120,47,0,0,0,0,0,0,1,0,0,0,64,73,0,0,3,244,255,255,232,35,0,0,168,47,0,0,0,0,0,0,1,0,0,0,48,73,0,0,3,244,255,255,232,35,0,0,216,47,0,0,0,0,0,0,1,0,0,0,64,73,0,0,3,244,255,255,0,0,0,0,8,48,0,0,176,76,0,0,0,0,0,0,0,0,0,0,56,48,0,0,72,72,0,0,0,0,0,0,0,0,0,0,80,48,0,0,0,0,0,0,104,48,0,0,184,76,0,0,0,0,0,0,0,0,0,0,128,48,0,0,168,76,0,0,0,0,0,0,0,0,0,0,160,48,0,0,176,76,0,0,0,0,0,0,0,0,0,0,192,48,0,0,0,0,0,0,224,48,0,0,0,0,0,0,0,49,0,0,0,0,0,0,32,49,0,0,232,35,0,0,64,49,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,104,78,0,0,2,0,0,0,232,35,0,0,96,49,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,104,78,0,0,2,0,0,0,232,35,0,0,128,49,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,104,78,0,0,2,0,0,0,232,35,0,0,160,49,0,0,0,0,0,0,2,0,0,0,216,75,0,0,2,0,0,0,104,78,0,0,2,0,0,0,0,0,0,0,192,49,0,0,0,0,0,0,216,49,0,0,0,0,0,0,240,49,0,0,0,0,0,0,8,50,0,0,168,76,0,0,0,0,0,0,0,0,0,0,32,50,0,0,176,76,0,0,0,0,0,0,0,0,0,0,56,50,0,0,232,78,0,0,0,0,0,0,0,0,0,0,200,50,0,0,232,78,0,0,0,0,0,0,0,0,0,0,96,51,0,0,248,78,0,0,0,0,0,0,0,0,0,0,160,51,0,0,0,79,0,0,0,0,0,0,0,0,0,0,224,51,0,0,0,0,0,0,8,52,0,0,0,0,0,0,104,52,0,0,0,0,0,0,184,52,0,0,0,0,0,0,224,52,0,0,0,0,0,0,8,53,0,0,104,79,0,0,0,0,0,0,0,0,0,0,0,54,0,0,104,79,0,0,0,0,0,0,0,0,0,0,240,54,0,0,104,79,0,0,0,0,0,0,0,0,0,0,224,55,0,0,104,79,0,0,0,0,0,0,0,0,0,0,208,56,0,0,104,79,0,0,0,0,0,0,0,0,0,0,192,57,0,0,104,79,0,0,0,0,0,0,0,0,0,0,176,58,0,0,0,0,0,0,128,59,0,0,240,79,0,0,0,0,0,0,0,0,0,0,184,60,0,0,240,79,0,0,0,0,0,0,0,0,0,0,48,62,0,0,240,79,0,0,0,0,0,0,0,0,0,0,88,63,0,0,240,79,0,0,0,0,0,0,0,0,0,0,128,64,0,0,240,79,0,0,0,0,0,0,0,0,0,0,176,65,0,0,240,79,0,0,0,0,0,0,0,0,0,0,224,66,0,0,240,79,0,0,0,0,0,0,0,0,0,0,16,68,0,0,240,79,0,0,0,0,0,0,0,0,0,0,56,69,0,0,0,0,0,0,64,70,0,0,104,80], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);
/* memory initializer */ allocate([104,70,0,0,88,80,0,0,0,0,0,0,0,0,0,0,144,70,0,0,88,80,0,0,0,0,0,0,0,0,0,0,184,70,0,0,104,80,0,0,0,0,0,0,0,0,0,0,224,70,0,0,72,80,0,0,0,0,0,0,0,0,0,0,8,71,0,0,104,80,0,0,0,0,0,0,0,0,0,0,48,71,0,0,104,80,0,0,0,0,0,0,0,0,0,0,88,71,0,0,16,72,0,0,0,0,0,0,24,36,0,0,128,71,0,0,24,36,0,0,136,71,0,0,192,35,0,0,144,71,0,0,0,0,0,0,152,71,0,0,160,80,0,0,0,0,0,0,0,0,0,0,168,71,0,0,0,0,0,0,176,71,0,0,160,80,0,0,0,0,0,0,0,0,0,0,216,71,0,0,160,80,0,0,0,0,0,0,0,0,0,0,232,71,0,0,160,80,0,0,0,0,0,0,64,0,0,0,0,0,0,0,88,77,0,0,192,0,0,0,74,1,0,0,192,255,255,255,192,255,255,255,88,77,0,0,232,0,0,0,90,0,0,0,108,0,0,0,0,0,0,0,88,77,0,0,192,0,0,0,74,1,0,0,148,255,255,255,148,255,255,255,88,77,0,0,232,0,0,0,90,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,1,0,0,0,11,0,0,0,13,0,0,0,17,0,0,0,19,0,0,0,23,0,0,0,29,0,0,0,31,0,0,0,37,0,0,0,41,0,0,0,43,0,0,0,47,0,0,0,53,0,0,0,59,0,0,0,61,0,0,0,67,0,0,0,71,0,0,0,73,0,0,0,79,0,0,0,83,0,0,0,89,0,0,0,97,0,0,0,101,0,0,0,103,0,0,0,107,0,0,0,109,0,0,0,113,0,0,0,121,0,0,0,127,0,0,0,131,0,0,0,137,0,0,0,139,0,0,0,143,0,0,0,149,0,0,0,151,0,0,0,157,0,0,0,163,0,0,0,167,0,0,0,169,0,0,0,173,0,0,0,179,0,0,0,181,0,0,0,187,0,0,0,191,0,0,0,193,0,0,0,197,0,0,0,199,0,0,0,209,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,5,0,0,0,7,0,0,0,11,0,0,0,13,0,0,0,17,0,0,0,19,0,0,0,23,0,0,0,29,0,0,0,31,0,0,0,37,0,0,0,41,0,0,0,43,0,0,0,47,0,0,0,53,0,0,0,59,0,0,0,61,0,0,0,67,0,0,0,71,0,0,0,73,0,0,0,79,0,0,0,83,0,0,0,89,0,0,0,97,0,0,0,101,0,0,0,103,0,0,0,107,0,0,0,109,0,0,0,113,0,0,0,127,0,0,0,131,0,0,0,137,0,0,0,139,0,0,0,149,0,0,0,151,0,0,0,157,0,0,0,163,0,0,0,167,0,0,0,173,0,0,0,179,0,0,0,181,0,0,0,191,0,0,0,193,0,0,0,197,0,0,0,199,0,0,0,211,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,189,238,174,179,68,35,189,211,45,35,2,65,0,0,0,0,66,17,81,76,187,220,66,44,210,220,253,190,0,0,0,0,185,204,40,163,0,0,57,2,1,0,0,0,0,0,0,0,70,51,215,92,247,59,198,253,174,163,147,97,0,0,0,0,0,0,0,0,8,196,0,0,80,92,108,158,0,0,0,0,177,136,32,2,0,0,49,0,0,0,0,0,0,0,0,0,78,119,207,189,6,2,206,251,41,32,0,0,0,0,0,0,0,0,16,64,249,61,0,4,214,203,219,113,0,0,0,0,0,0,0,0,0,192,0,0,0,20,36,142,0,0,0,0,161,8,32,0,0,0,33,0,0,0,0,0,0,0,0,0,94,247,204,187,0,0,222,131,1,0,0,0,0,0,0,0,0,0,19,68,231,3,0,124,46,34,3,0,0,0,0,0,0,0,0,0,24,124,0,0,208,205,220,121,0,0,0,0,0,0,0,0,0,128,0,0,0,16,32,134,0,0,0,0,129,8,32,0,0,0,1,0,0,0,0,0,0,0,0,0,62,247,192,131,0,0,62,3,0,0,0,0,0,0,0,0,64,0,15,60,7,0,192,252,33,32,0,0,0,0,0,0,0,0,16,64,248,51,0,0,206,195,3,0,0,0,0,0,0,0,0,0,0,76,0,0,16,12,220,125,0,0,0,0,0,0,0,0,0,128,0,0,0,16,32,130,0,0,0,0,1,8,32,0,0,0,1,0,0,0,0,0,0,0,0,0,190,240,192,3,0,0,62,0,0,0,0,0,0,0,0,0,64,7,15,188,0,0,192,227,1,0,0,0,0,0,0,0,0,0,16,64,135,3,0,28,46,32,0,0,0,0,0,0,0,0,0,0,120,60,0,0,208,195,195,1,0,0,0,0,0,0,0,0,0,64,0,0,0,12,28,126,0,0,0,0,0,0,0,0,0,128,0,0,0,16,32,128,0,0,0,0,1,0,32,0,0,0,1,0,0,0,0,0,0,0,0,0,190,8,192,3,0,0,62,0,0,0,0,0,0,0,0,0,64,247,0,188,0,0,192,3,0,0,0,0,0,0,0,0,0,0,15,64,7,0,0,252,1,32,0,0,0,0,0,0,0,0,16,0,248,3,0,0,46,192,3,0,0,0,0,0,0,0,0,0,0,60,0,0,208,3,220,1,0,0,0,0,0,0,0,0,0,64,0,0,0,12,32,126,0,0,0,0,0,0,0,0,0,128,0,0,0,16,0,128,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,190,8,32,0,0,0,62,0,0,0,0,0,0,0,0,0,64,247,192,3,0,0,192,3,0,0,0,0,0,0,0,0,0,0,15,188,0,0,0,252,1,0,0,0,0,0,0,0,0,0,16,64,7,0,0,0,46,32,0,0,0,0,0,0,0,0,0,0,248,3,0,0,208,195,3,0,0,0,0,0,0,0,0,0,0,60,0,0,0,12,220,1,0,0,0,0,0,0,0,0,0,64,0,0,0,16,32,126,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+20484);



var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }var ___cxa_atexit=_atexit;

  
  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;

  
  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            if (canOwn && offset === 0) {
              node.contents = buffer; // this could be a subarray of Emscripten HEAP, or allocated from some other source.
              node.contentMode = (buffer.buffer === HEAP8.buffer) ? MEMFS.CONTENT_OWNING : MEMFS.CONTENT_FIXED;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          fileStore.createIndex('timestamp', 'timestamp', { unique: false });
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function() {
          callback(this.error);
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function() { callback(this.error); };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function() { callback(this.error); };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function() { done(this.error); };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          stream.position = position;
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },getStreamFromPtr:function (ptr) {
        return FS.streams[ptr - 1];
      },getPtrForStream:function (stream) {
        return stream ? stream.fd + 1 : 0;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=FS.getPtrForStream(stdin);
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=FS.getPtrForStream(stdout);
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=FS.getPtrForStream(stderr);
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = Math.floor(idx / this.chunkSize);
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
            // Find length
            var xhr = new XMLHttpRequest();
            xhr.open('HEAD', url, false);
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            var datalength = Number(xhr.getResponseHeader("Content-length"));
            var header;
            var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
            var chunkSize = 1024*1024; // Chunk size in bytes
  
            if (!hasByteServing) chunkSize = datalength;
  
            // Function to get a range from the remote URL.
            var doXHR = (function(from, to) {
              if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
              if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
              // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
              var xhr = new XMLHttpRequest();
              xhr.open('GET', url, false);
              if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
              // Some hints to the browser that we want binary data.
              if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
              if (xhr.overrideMimeType) {
                xhr.overrideMimeType('text/plain; charset=x-user-defined');
              }
  
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              if (xhr.response !== undefined) {
                return new Uint8Array(xhr.response || []);
              } else {
                return intArrayFromString(xhr.responseText || '', true);
              }
            });
            var lazyArray = this;
            lazyArray.setDataGetter(function(chunkNum) {
              var start = chunkNum * chunkSize;
              var end = (chunkNum+1) * chunkSize - 1; // including this byte
              end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
              if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                lazyArray.chunks[chunkNum] = doXHR(start, end);
              }
              if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
              return lazyArray.chunks[chunkNum];
            });
  
            this._length = datalength;
            this._chunkSize = chunkSize;
            this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};
  
  var Browser={mainLoop:{scheduler:null,method:"",shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        
        // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
        // Module['forcedAspectRatio'] = 4 / 3;
        
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'] ||
                                    canvas['msRequestPointerLock'] ||
                                    function(){};
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 document['msExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas ||
                                document['msPointerLockElement'] === canvas;
        }
  
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
        document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        var errorInfo = '?';
        function onContextCreationError(event) {
          errorInfo = event.statusMessage || errorInfo;
        }
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
  
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
  
  
            canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
            try {
              ['experimental-webgl', 'webgl'].some(function(webglId) {
                return ctx = canvas.getContext(webglId, contextAttributes);
              });
            } finally {
              canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
            }
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e]);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
  
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          GLctx = Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          var canvasContainer = canvas.parentNode;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement'] ||
               document['msFullScreenElement'] || document['msFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'] ||
                                      document['msExitFullscreen'] ||
                                      document['exitFullscreen'] ||
                                      function() {};
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
          document.addEventListener('MSFullscreenChange', fullScreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
        
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvasContainer.requestFullScreen();
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          setTimeout(func, 1000/60);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           window['setTimeout'];
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        return Math.max(-1, Math.min(1, event.type === 'DOMMouseScroll' ? event.detail : -event.wheelDelta));
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
  
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
  
          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
            var touch = event.touch;
            if (touch === undefined) {
              return; // the "touch" property is only defined in SDL
  
            }
            var adjustedX = touch.pageX - (scrollX + rect.left);
            var adjustedY = touch.pageY - (scrollY + rect.top);
  
            adjustedX = adjustedX * (cw / rect.width);
            adjustedY = adjustedY * (ch / rect.height);
  
            var coords = { x: adjustedX, y: adjustedY };
            
            if (event.type === 'touchstart') {
              Browser.lastTouches[touch.identifier] = coords;
              Browser.touches[touch.identifier] = coords;
            } else if (event.type === 'touchend' || event.type === 'touchmove') {
              Browser.lastTouches[touch.identifier] = Browser.touches[touch.identifier];
              Browser.touches[touch.identifier] = { x: adjustedX, y: adjustedY };
            } 
            return;
          }
  
          var x = event.pageX - (scrollX + rect.left);
          var y = event.pageY - (scrollY + rect.top);
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
             document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
             document['fullScreenElement'] || document['fullscreenElement'] ||
             document['msFullScreenElement'] || document['msFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      }};
  
  function _SDL_GetTicks() {
      return Math.floor(Date.now() - SDL.startTime);
    }var SDL={defaults:{width:320,height:200,copyOnLock:true},version:null,surfaces:{},canvasPool:[],events:[],fonts:[null],audios:[null],rwops:[null],music:{audio:null,volume:1},mixerFrequency:22050,mixerFormat:32784,mixerNumChannels:2,mixerChunkSize:1024,channelMinimumNumber:0,GL:false,glAttributes:{0:3,1:3,2:2,3:0,4:0,5:1,6:16,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:1,16:0,17:0,18:0},keyboardState:null,keyboardMap:{},canRequestFullscreen:false,isRequestingFullscreen:false,textInput:false,startTime:null,initFlags:0,buttonState:0,modState:0,DOMButtons:[0,0,0],DOMEventToSDLEvent:{},TOUCH_DEFAULT_ID:0,keyCodes:{16:1249,17:1248,18:1250,20:1081,33:1099,34:1102,35:1101,36:1098,37:1104,38:1106,39:1103,40:1105,44:316,45:1097,46:127,91:1251,93:1125,96:1122,97:1113,98:1114,99:1115,100:1116,101:1117,102:1118,103:1119,104:1120,105:1121,106:1109,107:1111,109:1110,110:1123,111:1108,112:1082,113:1083,114:1084,115:1085,116:1086,117:1087,118:1088,119:1089,120:1090,121:1091,122:1092,123:1093,124:1128,125:1129,126:1130,127:1131,128:1132,129:1133,130:1134,131:1135,132:1136,133:1137,134:1138,135:1139,144:1107,160:94,161:33,162:34,163:35,164:36,165:37,166:38,167:95,168:40,169:41,170:42,171:43,172:124,173:45,174:123,175:125,176:126,181:127,182:129,183:128,188:44,190:46,191:47,192:96,219:91,220:92,221:93,222:39},scanCodes:{8:42,9:43,13:40,27:41,32:44,35:204,39:53,44:54,46:55,47:56,48:39,49:30,50:31,51:32,52:33,53:34,54:35,55:36,56:37,57:38,58:203,59:51,61:46,91:47,92:49,93:48,96:52,97:4,98:5,99:6,100:7,101:8,102:9,103:10,104:11,105:12,106:13,107:14,108:15,109:16,110:17,111:18,112:19,113:20,114:21,115:22,116:23,117:24,118:25,119:26,120:27,121:28,122:29,127:76,305:224,308:226,316:70},loadRect:function (rect) {
        return {
          x: HEAP32[((rect + 0)>>2)],
          y: HEAP32[((rect + 4)>>2)],
          w: HEAP32[((rect + 8)>>2)],
          h: HEAP32[((rect + 12)>>2)]
        };
      },loadColorToCSSRGB:function (color) {
        var rgba = HEAP32[((color)>>2)];
        return 'rgb(' + (rgba&255) + ',' + ((rgba >> 8)&255) + ',' + ((rgba >> 16)&255) + ')';
      },loadColorToCSSRGBA:function (color) {
        var rgba = HEAP32[((color)>>2)];
        return 'rgba(' + (rgba&255) + ',' + ((rgba >> 8)&255) + ',' + ((rgba >> 16)&255) + ',' + (((rgba >> 24)&255)/255) + ')';
      },translateColorToCSSRGBA:function (rgba) {
        return 'rgba(' + (rgba&0xff) + ',' + (rgba>>8 & 0xff) + ',' + (rgba>>16 & 0xff) + ',' + (rgba>>>24)/0xff + ')';
      },translateRGBAToCSSRGBA:function (r, g, b, a) {
        return 'rgba(' + (r&0xff) + ',' + (g&0xff) + ',' + (b&0xff) + ',' + (a&0xff)/255 + ')';
      },translateRGBAToColor:function (r, g, b, a) {
        return r | g << 8 | b << 16 | a << 24;
      },makeSurface:function (width, height, flags, usePageCanvas, source, rmask, gmask, bmask, amask) {
        flags = flags || 0;
        var is_SDL_HWSURFACE = flags & 0x00000001;
        var is_SDL_HWPALETTE = flags & 0x00200000;
        var is_SDL_OPENGL = flags & 0x04000000;
  
        var surf = _malloc(60);
        var pixelFormat = _malloc(44);
        //surface with SDL_HWPALETTE flag is 8bpp surface (1 byte)
        var bpp = is_SDL_HWPALETTE ? 1 : 4;
        var buffer = 0;
  
        // preemptively initialize this for software surfaces,
        // otherwise it will be lazily initialized inside of SDL_LockSurface
        if (!is_SDL_HWSURFACE && !is_SDL_OPENGL) {
          buffer = _malloc(width * height * 4);
        }
  
        HEAP32[((surf)>>2)]=flags;
        HEAP32[(((surf)+(4))>>2)]=pixelFormat;
        HEAP32[(((surf)+(8))>>2)]=width;
        HEAP32[(((surf)+(12))>>2)]=height;
        HEAP32[(((surf)+(16))>>2)]=width * bpp;  // assuming RGBA or indexed for now,
                                                                                          // since that is what ImageData gives us in browsers
        HEAP32[(((surf)+(20))>>2)]=buffer;
        HEAP32[(((surf)+(36))>>2)]=0;
        HEAP32[(((surf)+(56))>>2)]=1;
  
        HEAP32[((pixelFormat)>>2)]=0 /* XXX missing C define SDL_PIXELFORMAT_RGBA8888 */;
        HEAP32[(((pixelFormat)+(4))>>2)]=0;// TODO
        HEAP8[(((pixelFormat)+(8))|0)]=bpp * 8;
        HEAP8[(((pixelFormat)+(9))|0)]=bpp;
  
        HEAP32[(((pixelFormat)+(12))>>2)]=rmask || 0x000000ff;
        HEAP32[(((pixelFormat)+(16))>>2)]=gmask || 0x0000ff00;
        HEAP32[(((pixelFormat)+(20))>>2)]=bmask || 0x00ff0000;
        HEAP32[(((pixelFormat)+(24))>>2)]=amask || 0xff000000;
  
        // Decide if we want to use WebGL or not
        SDL.GL = SDL.GL || is_SDL_OPENGL;
        var canvas;
        if (!usePageCanvas) {
          if (SDL.canvasPool.length > 0) {
            canvas = SDL.canvasPool.pop();
          } else {
            canvas = document.createElement('canvas');
          }
          canvas.width = width;
          canvas.height = height;
        } else {
          canvas = Module['canvas'];
        }
  
        var webGLContextAttributes = {
          antialias: ((SDL.glAttributes[13 /*SDL_GL_MULTISAMPLEBUFFERS*/] != 0) && (SDL.glAttributes[14 /*SDL_GL_MULTISAMPLESAMPLES*/] > 1)),
          depth: (SDL.glAttributes[6 /*SDL_GL_DEPTH_SIZE*/] > 0),
          stencil: (SDL.glAttributes[7 /*SDL_GL_STENCIL_SIZE*/] > 0)
        };
        
        var ctx = Browser.createContext(canvas, is_SDL_OPENGL, usePageCanvas, webGLContextAttributes);
              
        SDL.surfaces[surf] = {
          width: width,
          height: height,
          canvas: canvas,
          ctx: ctx,
          surf: surf,
          buffer: buffer,
          pixelFormat: pixelFormat,
          alpha: 255,
          flags: flags,
          locked: 0,
          usePageCanvas: usePageCanvas,
          source: source,
  
          isFlagSet: function(flag) {
            return flags & flag;
          }
        };
  
        return surf;
      },copyIndexedColorData:function (surfData, rX, rY, rW, rH) {
        // HWPALETTE works with palette
        // setted by SDL_SetColors
        if (!surfData.colors) {
          return;
        }
        
        var fullWidth  = Module['canvas'].width;
        var fullHeight = Module['canvas'].height;
  
        var startX  = rX || 0;
        var startY  = rY || 0;
        var endX    = (rW || (fullWidth - startX)) + startX;
        var endY    = (rH || (fullHeight - startY)) + startY;
        
        var buffer  = surfData.buffer;
        var data    = surfData.image.data;
        var colors  = surfData.colors;
  
        for (var y = startY; y < endY; ++y) {
          var indexBase = y * fullWidth;
          var colorBase = indexBase * 4;
          for (var x = startX; x < endX; ++x) {
            // HWPALETTE have only 256 colors (not rgba)
            var index = HEAPU8[((buffer + indexBase + x)|0)] * 3;
            var colorOffset = colorBase + x * 4;
  
            data[colorOffset   ] = colors[index   ];
            data[colorOffset +1] = colors[index +1];
            data[colorOffset +2] = colors[index +2];
            //unused: data[colorOffset +3] = color[index +3];
          }
        }
      },freeSurface:function (surf) {
        var refcountPointer = surf + 56;
        var refcount = HEAP32[((refcountPointer)>>2)];
        if (refcount > 1) {
          HEAP32[((refcountPointer)>>2)]=refcount - 1;
          return;
        }
  
        var info = SDL.surfaces[surf];
        if (!info.usePageCanvas && info.canvas) SDL.canvasPool.push(info.canvas);
        if (info.buffer) _free(info.buffer);
        _free(info.pixelFormat);
        _free(surf);
        SDL.surfaces[surf] = null;
  
        if (surf === SDL.screen) {
          SDL.screen = null;
        }
      },downFingers:{},savedKeydown:null,receiveEvent:function (event) {
        switch(event.type) {
          case 'touchstart': case 'touchmove': {
            event.preventDefault();
  
            var touches = [];
            
            // Clear out any touchstart events that we've already processed
            if (event.type === 'touchstart') {
              for (var i = 0; i < event.touches.length; i++) {
                var touch = event.touches[i];
                if (SDL.downFingers[touch.identifier] != true) {
                  SDL.downFingers[touch.identifier] = true;
                  touches.push(touch);
                }
              }
            } else {
              touches = event.touches;
            }
            
            var firstTouch = touches[0];
            if (event.type == 'touchstart') {
              SDL.DOMButtons[0] = 1;
            }
            var mouseEventType;
            switch(event.type) {
              case 'touchstart': mouseEventType = 'mousedown'; break;
              case 'touchmove': mouseEventType = 'mousemove'; break;
            }
            var mouseEvent = {
              type: mouseEventType,
              button: 0,
              pageX: firstTouch.clientX,
              pageY: firstTouch.clientY
            };
            SDL.events.push(mouseEvent);
  
            for (var i = 0; i < touches.length; i++) {
              var touch = touches[i];
              SDL.events.push({
                type: event.type,
                touch: touch
              });
            };
            break;
          }
          case 'touchend': {
            event.preventDefault();
            
            // Remove the entry in the SDL.downFingers hash
            // because the finger is no longer down.
            for(var i = 0; i < event.changedTouches.length; i++) {
              var touch = event.changedTouches[i];
              if (SDL.downFingers[touch.identifier] === true) {
                delete SDL.downFingers[touch.identifier];
              }
            }
  
            var mouseEvent = {
              type: 'mouseup',
              button: 0,
              pageX: event.changedTouches[0].clientX,
              pageY: event.changedTouches[0].clientY
            };
            SDL.DOMButtons[0] = 0;
            SDL.events.push(mouseEvent);
            
            for (var i = 0; i < event.changedTouches.length; i++) {
              var touch = event.changedTouches[i];
              SDL.events.push({
                type: 'touchend',
                touch: touch
              });
            };
            break;
          }
          case 'mousemove':
            if (SDL.DOMButtons[0] === 1) {
              SDL.events.push({
                type: 'touchmove',
                touch: {
                  identifier: 0,
                  deviceID: -1,
                  pageX: event.pageX,
                  pageY: event.pageY
                }
              });
            }
            if (Browser.pointerLock) {
              // workaround for firefox bug 750111
              if ('mozMovementX' in event) {
                event['movementX'] = event['mozMovementX'];
                event['movementY'] = event['mozMovementY'];
              }
              // workaround for Firefox bug 782777
              if (event['movementX'] == 0 && event['movementY'] == 0) {
                // ignore a mousemove event if it doesn't contain any movement info
                // (without pointer lock, we infer movement from pageX/pageY, so this check is unnecessary)
                event.preventDefault();
                return;
              }
            }
            // fall through
          case 'keydown': case 'keyup': case 'keypress': case 'mousedown': case 'mouseup': case 'DOMMouseScroll': case 'mousewheel':
            // If we preventDefault on keydown events, the subsequent keypress events
            // won't fire. However, it's fine (and in some cases necessary) to
            // preventDefault for keys that don't generate a character. Otherwise,
            // preventDefault is the right thing to do in general.
            if (event.type !== 'keydown' || (!SDL.unicode && !SDL.textInput) || (event.keyCode === 8 /* backspace */ || event.keyCode === 9 /* tab */)) {
              event.preventDefault();
            }
  
            if (event.type == 'DOMMouseScroll' || event.type == 'mousewheel') {
              var button = Browser.getMouseWheelDelta(event) > 0 ? 4 : 3;
              var event2 = {
                type: 'mousedown',
                button: button,
                pageX: event.pageX,
                pageY: event.pageY
              };
              SDL.events.push(event2);
              event = {
                type: 'mouseup',
                button: button,
                pageX: event.pageX,
                pageY: event.pageY
              };
            } else if (event.type == 'mousedown') {
              SDL.DOMButtons[event.button] = 1;
              SDL.events.push({
                type: 'touchstart',
                touch: {
                  identifier: 0,
                  deviceID: -1,
                  pageX: event.pageX,
                  pageY: event.pageY
                }
              });
            } else if (event.type == 'mouseup') {
              // ignore extra ups, can happen if we leave the canvas while pressing down, then return,
              // since we add a mouseup in that case
              if (!SDL.DOMButtons[event.button]) {
                return;
              }
  
              SDL.events.push({
                type: 'touchend',
                touch: {
                  identifier: 0,
                  deviceID: -1,
                  pageX: event.pageX,
                  pageY: event.pageY
                }
              });
              SDL.DOMButtons[event.button] = 0;
            }
  
            // We can only request fullscreen as the result of user input.
            // Due to this limitation, we toggle a boolean on keydown which
            // SDL_WM_ToggleFullScreen will check and subsequently set another
            // flag indicating for us to request fullscreen on the following
            // keyup. This isn't perfect, but it enables SDL_WM_ToggleFullScreen
            // to work as the result of a keypress (which is an extremely
            // common use case).
            if (event.type === 'keydown' || event.type === 'mousedown') {
              SDL.canRequestFullscreen = true;
            } else if (event.type === 'keyup' || event.type === 'mouseup') {
              if (SDL.isRequestingFullscreen) {
                Module['requestFullScreen'](true, true);
                SDL.isRequestingFullscreen = false;
              }
              SDL.canRequestFullscreen = false;
            }
  
            // SDL expects a unicode character to be passed to its keydown events.
            // Unfortunately, the browser APIs only provide a charCode property on
            // keypress events, so we must backfill in keydown events with their
            // subsequent keypress event's charCode.
            if (event.type === 'keypress' && SDL.savedKeydown) {
              // charCode is read-only
              SDL.savedKeydown.keypressCharCode = event.charCode;
              SDL.savedKeydown = null;
            } else if (event.type === 'keydown') {
              SDL.savedKeydown = event;
            }
  
            // Don't push keypress events unless SDL_StartTextInput has been called.
            if (event.type !== 'keypress' || SDL.textInput) {
              SDL.events.push(event);
            }
            break;
          case 'mouseout':
            // Un-press all pressed mouse buttons, because we might miss the release outside of the canvas
            for (var i = 0; i < 3; i++) {
              if (SDL.DOMButtons[i]) {
                SDL.events.push({
                  type: 'mouseup',
                  button: i,
                  pageX: event.pageX,
                  pageY: event.pageY
                });
                SDL.DOMButtons[i] = 0;
              }
            }
            event.preventDefault();
            break;
          case 'blur':
          case 'visibilitychange': {
            // Un-press all pressed keys: TODO
            for (var code in SDL.keyboardMap) {
              SDL.events.push({
                type: 'keyup',
                keyCode: SDL.keyboardMap[code]
              });
            }
            event.preventDefault();
            break;
          }
          case 'unload':
            if (Browser.mainLoop.runner) {
              SDL.events.push(event);
              // Force-run a main event loop, since otherwise this event will never be caught!
              Browser.mainLoop.runner();
            }
            return;
          case 'resize':
            SDL.events.push(event);
            // manually triggered resize event doesn't have a preventDefault member
            if (event.preventDefault) {
              event.preventDefault();
            }
            break;
        }
        if (SDL.events.length >= 10000) {
          Module.printErr('SDL event queue full, dropping events');
          SDL.events = SDL.events.slice(0, 10000);
        }
        return;
      },handleEvent:function (event) {
        if (event.handled) return;
        event.handled = true;
  
        switch (event.type) {
          case 'touchstart': case 'touchend': case 'touchmove': {
            Browser.calculateMouseEvent(event);
            break;
          }
          case 'keydown': case 'keyup': {
            var down = event.type === 'keydown';
            var code = event.keyCode;
            if (code >= 65 && code <= 90) {
              code += 32; // make lowercase for SDL
            } else {
              code = SDL.keyCodes[event.keyCode] || event.keyCode;
            }
  
            HEAP8[(((SDL.keyboardState)+(code))|0)]=down;
            // TODO: lmeta, rmeta, numlock, capslock, KMOD_MODE, KMOD_RESERVED
            SDL.modState = (HEAP8[(((SDL.keyboardState)+(1248))|0)] ? 0x0040 | 0x0080 : 0) | // KMOD_LCTRL & KMOD_RCTRL
              (HEAP8[(((SDL.keyboardState)+(1249))|0)] ? 0x0001 | 0x0002 : 0) | // KMOD_LSHIFT & KMOD_RSHIFT
              (HEAP8[(((SDL.keyboardState)+(1250))|0)] ? 0x0100 | 0x0200 : 0); // KMOD_LALT & KMOD_RALT
  
            if (down) {
              SDL.keyboardMap[code] = event.keyCode; // save the DOM input, which we can use to unpress it during blur
            } else {
              delete SDL.keyboardMap[code];
            }
  
            break;
          }
          case 'mousedown': case 'mouseup':
            if (event.type == 'mousedown') {
              // SDL_BUTTON(x) is defined as (1 << ((x)-1)).  SDL buttons are 1-3,
              // and DOM buttons are 0-2, so this means that the below formula is
              // correct.
              SDL.buttonState |= 1 << event.button;
            } else if (event.type == 'mouseup') {
              SDL.buttonState &= ~(1 << event.button);
            }
            // fall through
          case 'mousemove': {
            Browser.calculateMouseEvent(event);
            break;
          }
        }
      },makeCEvent:function (event, ptr) {
        if (typeof event === 'number') {
          // This is a pointer to a native C event that was SDL_PushEvent'ed
          _memcpy(ptr, event, 28); // XXX
          return;
        }
  
        SDL.handleEvent(event);
  
        switch (event.type) {
          case 'keydown': case 'keyup': {
            var down = event.type === 'keydown';
            //Module.print('Received key event: ' + event.keyCode);
            var key = event.keyCode;
            if (key >= 65 && key <= 90) {
              key += 32; // make lowercase for SDL
            } else {
              key = SDL.keyCodes[event.keyCode] || event.keyCode;
            }
            var scan;
            if (key >= 1024) {
              scan = key - 1024;
            } else {
              scan = SDL.scanCodes[key] || key;
            }
  
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP8[(((ptr)+(8))|0)]=down ? 1 : 0;
            HEAP8[(((ptr)+(9))|0)]=0; // TODO
            HEAP32[(((ptr)+(12))>>2)]=scan;
            HEAP32[(((ptr)+(16))>>2)]=key;
            HEAP16[(((ptr)+(20))>>1)]=SDL.modState;
            // some non-character keys (e.g. backspace and tab) won't have keypressCharCode set, fill in with the keyCode.
            HEAP32[(((ptr)+(24))>>2)]=event.keypressCharCode || key;
  
            break;
          }
          case 'keypress': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            // Not filling in windowID for now
            var cStr = intArrayFromString(String.fromCharCode(event.charCode));
            for (var i = 0; i < cStr.length; ++i) {
              HEAP8[(((ptr)+(8 + i))|0)]=cStr[i];
            }
            break;
          }
          case 'mousedown': case 'mouseup': case 'mousemove': {
            if (event.type != 'mousemove') {
              var down = event.type === 'mousedown';
              HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
              HEAP32[(((ptr)+(4))>>2)]=0;
              HEAP32[(((ptr)+(8))>>2)]=0;
              HEAP32[(((ptr)+(12))>>2)]=0;
              HEAP8[(((ptr)+(16))|0)]=event.button+1; // DOM buttons are 0-2, SDL 1-3
              HEAP8[(((ptr)+(17))|0)]=down ? 1 : 0;
              HEAP32[(((ptr)+(20))>>2)]=Browser.mouseX;
              HEAP32[(((ptr)+(24))>>2)]=Browser.mouseY;
            } else {
              HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
              HEAP32[(((ptr)+(4))>>2)]=0;
              HEAP32[(((ptr)+(8))>>2)]=0;
              HEAP32[(((ptr)+(12))>>2)]=0;
              HEAP32[(((ptr)+(16))>>2)]=SDL.buttonState;
              HEAP32[(((ptr)+(20))>>2)]=Browser.mouseX;
              HEAP32[(((ptr)+(24))>>2)]=Browser.mouseY;
              HEAP32[(((ptr)+(28))>>2)]=Browser.mouseMovementX;
              HEAP32[(((ptr)+(32))>>2)]=Browser.mouseMovementY;
            }
            break;
          }
          case 'touchstart': case 'touchend': case 'touchmove': {
            var touch = event.touch;
            var w = Module['canvas'].width;
            var h = Module['canvas'].height;
            var x = Browser.touches[touch.identifier].x / w;
            var y = Browser.touches[touch.identifier].y / h;
            var lx = Browser.lastTouches[touch.identifier].x / w;
            var ly = Browser.lastTouches[touch.identifier].y / h;
            var dx = x - lx;
            var dy = y - ly;
            if (touch['deviceID'] === undefined) touch.deviceID = SDL.TOUCH_DEFAULT_ID;
            if (dx === 0 && dy === 0 && event.type === 'touchmove') return; // don't send these if nothing happened
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP32[(((ptr)+(4))>>2)]=_SDL_GetTicks();
            (tempI64 = [touch.deviceID>>>0,(tempDouble=touch.deviceID,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[(((ptr)+(8))>>2)]=tempI64[0],HEAP32[(((ptr)+(12))>>2)]=tempI64[1]);
            (tempI64 = [touch.identifier>>>0,(tempDouble=touch.identifier,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[(((ptr)+(16))>>2)]=tempI64[0],HEAP32[(((ptr)+(20))>>2)]=tempI64[1]);
            HEAPF32[(((ptr)+(24))>>2)]=x;
            HEAPF32[(((ptr)+(28))>>2)]=y;
            HEAPF32[(((ptr)+(32))>>2)]=dx;
            HEAPF32[(((ptr)+(36))>>2)]=dy;
            if (touch.force !== undefined) {
              HEAPF32[(((ptr)+(40))>>2)]=touch.force;
            } else { // No pressure data, send a digital 0/1 pressure.
              HEAPF32[(((ptr)+(40))>>2)]=event.type == "touchend" ? 0 : 1;
            }
            break;
          }
          case 'unload': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            break;
          }
          case 'resize': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP32[(((ptr)+(4))>>2)]=event.w;
            HEAP32[(((ptr)+(8))>>2)]=event.h;
            break;
          }
          case 'joystick_button_up': case 'joystick_button_down': {
            var state = event.type === 'joystick_button_up' ? 0 : 1;
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP8[(((ptr)+(4))|0)]=event.index;
            HEAP8[(((ptr)+(5))|0)]=event.button;
            HEAP8[(((ptr)+(6))|0)]=state;
            break;
          }
          case 'joystick_axis_motion': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP8[(((ptr)+(4))|0)]=event.index;
            HEAP8[(((ptr)+(5))|0)]=event.axis;
            HEAP32[(((ptr)+(8))>>2)]=SDL.joystickAxisValueConversion(event.value);
            break;
          }
          default: throw 'Unhandled SDL event: ' + event.type;
        }
      },estimateTextWidth:function (fontData, text) {
        var h = fontData.size;
        var fontString = h + 'px ' + fontData.name;
        var tempCtx = SDL.ttfContext;
        tempCtx.save();
        tempCtx.font = fontString;
        var ret = tempCtx.measureText(text).width | 0;
        tempCtx.restore();
        return ret;
      },allocateChannels:function (num) { // called from Mix_AllocateChannels and init
        if (SDL.numChannels && SDL.numChannels >= num && num != 0) return;
        SDL.numChannels = num;
        SDL.channels = [];
        for (var i = 0; i < num; i++) {
          SDL.channels[i] = {
            audio: null,
            volume: 1.0
          };
        }
      },setGetVolume:function (info, volume) {
        if (!info) return 0;
        var ret = info.volume * 128; // MIX_MAX_VOLUME
        if (volume != -1) {
          info.volume = volume / 128;
          if (info.audio) info.audio.volume = info.volume;
        }
        return ret;
      },fillWebAudioBufferFromHeap:function (heapPtr, sizeSamplesPerChannel, dstAudioBuffer) {
        // The input audio data is interleaved across the channels, i.e. [L, R, L, R, L, R, ...] and is either 8-bit or 16-bit as
        // supported by the SDL API. The output audio wave data for Web Audio API must be in planar buffers of [-1,1]-normalized Float32 data,
        // so perform a buffer conversion for the data.
        var numChannels = SDL.audio.channels;
        for(var c = 0; c < numChannels; ++c) {
          var channelData = dstAudioBuffer['getChannelData'](c);
          if (channelData.length != sizeSamplesPerChannel) {
            throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + sizeSamplesPerChannel + ' samples!';
          }
          if (SDL.audio.format == 0x8010 /*AUDIO_S16LSB*/) {
            for(var j = 0; j < sizeSamplesPerChannel; ++j) {
              channelData[j] = (HEAP16[(((heapPtr)+((j*numChannels + c)*2))>>1)]) / 0x8000;
            }
          } else if (SDL.audio.format == 0x0008 /*AUDIO_U8*/) {
            for(var j = 0; j < sizeSamplesPerChannel; ++j) {
              var v = (HEAP8[(((heapPtr)+(j*numChannels + c))|0)]);
              channelData[j] = ((v >= 0) ? v-128 : v+128) /128;
            }
          }
        }
      },debugSurface:function (surfData) {
        console.log('dumping surface ' + [surfData.surf, surfData.source, surfData.width, surfData.height]);
        var image = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
        var data = image.data;
        var num = Math.min(surfData.width, surfData.height);
        for (var i = 0; i < num; i++) {
          console.log('   diagonal ' + i + ':' + [data[i*surfData.width*4 + i*4 + 0], data[i*surfData.width*4 + i*4 + 1], data[i*surfData.width*4 + i*4 + 2], data[i*surfData.width*4 + i*4 + 3]]);
        }
      },joystickEventState:1,lastJoystickState:{},joystickNamePool:{},recordJoystickState:function (joystick, state) {
        // Standardize button state.
        var buttons = new Array(state.buttons.length);
        for (var i = 0; i < state.buttons.length; i++) {
          buttons[i] = SDL.getJoystickButtonState(state.buttons[i]);
        }
  
        SDL.lastJoystickState[joystick] = {
          buttons: buttons,
          axes: state.axes.slice(0),
          timestamp: state.timestamp,
          index: state.index,
          id: state.id
        };
      },getJoystickButtonState:function (button) {
        if (typeof button === 'object') {
          // Current gamepad API editor's draft (Firefox Nightly)
          // https://dvcs.w3.org/hg/gamepad/raw-file/default/gamepad.html#idl-def-GamepadButton
          return button.pressed;
        } else {
          // Current gamepad API working draft (Firefox / Chrome Stable)
          // http://www.w3.org/TR/2012/WD-gamepad-20120529/#gamepad-interface
          return button > 0;
        }
      },queryJoysticks:function () {
        for (var joystick in SDL.lastJoystickState) {
          var state = SDL.getGamepad(joystick - 1);
          var prevState = SDL.lastJoystickState[joystick];
          // Check only if the timestamp has differed.
          // NOTE: Timestamp is not available in Firefox.
          if (typeof state.timestamp !== 'number' || state.timestamp !== prevState.timestamp) {
            var i;
            for (i = 0; i < state.buttons.length; i++) {
              var buttonState = SDL.getJoystickButtonState(state.buttons[i]);
              // NOTE: The previous state already has a boolean representation of
              //       its button, so no need to standardize its button state here.
              if (buttonState !== prevState.buttons[i]) {
                // Insert button-press event.
                SDL.events.push({
                  type: buttonState ? 'joystick_button_down' : 'joystick_button_up',
                  joystick: joystick,
                  index: joystick - 1,
                  button: i
                });
              }
            }
            for (i = 0; i < state.axes.length; i++) {
              if (state.axes[i] !== prevState.axes[i]) {
                // Insert axes-change event.
                SDL.events.push({
                  type: 'joystick_axis_motion',
                  joystick: joystick,
                  index: joystick - 1,
                  axis: i,
                  value: state.axes[i]
                });
              }
            }
  
            SDL.recordJoystickState(joystick, state);
          }
        }
      },joystickAxisValueConversion:function (value) {
        // Ensures that 0 is 0, 1 is 32767, and -1 is 32768.
        return Math.ceil(((value+1) * 32767.5) - 32768);
      },getGamepads:function () {
        var fcn = navigator.getGamepads || navigator.webkitGamepads || navigator.mozGamepads || navigator.gamepads || navigator.webkitGetGamepads;
        if (fcn !== undefined) {
          // The function must be applied on the navigator object.
          return fcn.apply(navigator);
        } else {
          return [];
        }
      },getGamepad:function (deviceIndex) {
        var gamepads = SDL.getGamepads();
        if (gamepads.length > deviceIndex && deviceIndex >= 0) {
          return gamepads[deviceIndex];
        }
        return null;
      }};function _SDL_Init(initFlags) {
      SDL.startTime = Date.now();
      SDL.initFlags = initFlags;
  
      // capture all key events. we just keep down and up, but also capture press to prevent default actions
      if (!Module['doNotCaptureKeyboard']) {
        document.addEventListener("keydown", SDL.receiveEvent);
        document.addEventListener("keyup", SDL.receiveEvent);
        document.addEventListener("keypress", SDL.receiveEvent);
        window.addEventListener("blur", SDL.receiveEvent);
        document.addEventListener("visibilitychange", SDL.receiveEvent);
      }
  
      if (initFlags & 0x200) {
        // SDL_INIT_JOYSTICK
        // Firefox will not give us Joystick data unless we register this NOP
        // callback.
        // https://bugzilla.mozilla.org/show_bug.cgi?id=936104
        addEventListener("gamepadconnected", function() {});
      }
  
      window.addEventListener("unload", SDL.receiveEvent);
      SDL.keyboardState = _malloc(0x10000); // Our SDL needs 512, but 64K is safe for older SDLs
      _memset(SDL.keyboardState, 0, 0x10000);
      // Initialize this structure carefully for closure
      SDL.DOMEventToSDLEvent['keydown']    = 0x300  /* SDL_KEYDOWN */;
      SDL.DOMEventToSDLEvent['keyup']      = 0x301  /* SDL_KEYUP */;
      SDL.DOMEventToSDLEvent['keypress']   = 0x303  /* SDL_TEXTINPUT */;
      SDL.DOMEventToSDLEvent['mousedown']  = 0x401  /* SDL_MOUSEBUTTONDOWN */;
      SDL.DOMEventToSDLEvent['mouseup']    = 0x402  /* SDL_MOUSEBUTTONUP */;
      SDL.DOMEventToSDLEvent['mousemove']  = 0x400  /* SDL_MOUSEMOTION */;
      SDL.DOMEventToSDLEvent['touchstart'] = 0x700  /* SDL_FINGERDOWN */;
      SDL.DOMEventToSDLEvent['touchend']   = 0x701  /* SDL_FINGERUP */;
      SDL.DOMEventToSDLEvent['touchmove']  = 0x702  /* SDL_FINGERMOTION */;
      SDL.DOMEventToSDLEvent['unload']     = 0x100  /* SDL_QUIT */;
      SDL.DOMEventToSDLEvent['resize']     = 0x7001 /* SDL_VIDEORESIZE/SDL_EVENT_COMPAT2 */;
      // These are not technically DOM events; the HTML gamepad API is poll-based.
      // However, we define them here, as the rest of the SDL code assumes that
      // all SDL events originate as DOM events.
      SDL.DOMEventToSDLEvent['joystick_axis_motion'] = 0x600 /* SDL_JOYAXISMOTION */;
      SDL.DOMEventToSDLEvent['joystick_button_down'] = 0x603 /* SDL_JOYBUTTONDOWN */;
      SDL.DOMEventToSDLEvent['joystick_button_up'] = 0x604 /* SDL_JOYBUTTONUP */;
      return 0; // success
    }

  
  var ___cxa_exception_header_size=8;function ___cxa_allocate_exception(size) {
      var ptr = _malloc(size + ___cxa_exception_header_size);
      return ptr + ___cxa_exception_header_size;
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  
  
  
  var ___cxa_last_thrown_exception=0;function ___resumeException(ptr) {
      if (!___cxa_last_thrown_exception) { ___cxa_last_thrown_exception = ptr; }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = ___cxa_last_thrown_exception;
      header = thrown - ___cxa_exception_header_size;
      if (throwntype == -1) throwntype = HEAP32[((header)>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);
  
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___gxx_personality_v0() {
    }

  function _SDL_GetError() {
      if (!SDL.errorMessage) {
        SDL.errorMessage = allocate(intArrayFromString("unknown SDL-emscripten error"), 'i8', ALLOC_NORMAL);
      }
      return SDL.errorMessage;
    }

  function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      var header = ptr - ___cxa_exception_header_size;
      HEAP32[((header)>>2)]=type;
      HEAP32[(((header)+(4))>>2)]=destructor;
      ___cxa_last_thrown_exception = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

  function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr - ___cxa_exception_header_size);
      } catch(e) { // XXX FIXME
      }
    }

  function _IMG_Init(flags) {
      return flags; // We support JPG, PNG, TIF because browsers do
    }

  function _SDL_EnableUNICODE(on) {
      var ret = SDL.unicode || 0;
      SDL.unicode = on;
      return ret;
    }

  
  
  function _SDL_LockSurface(surf) {
      var surfData = SDL.surfaces[surf];
  
      surfData.locked++;
      if (surfData.locked > 1) return 0;
  
      if (!surfData.buffer) {
        surfData.buffer = _malloc(surfData.width * surfData.height * 4);
        HEAP32[(((surf)+(20))>>2)]=surfData.buffer;
      }
  
      // Mark in C/C++-accessible SDL structure
      // SDL_Surface has the following fields: Uint32 flags, SDL_PixelFormat *format; int w, h; Uint16 pitch; void *pixels; ...
      // So we have fields all of the same size, and 5 of them before us.
      // TODO: Use macros like in library.js
      HEAP32[(((surf)+(20))>>2)]=surfData.buffer;
  
      if (surf == SDL.screen && Module.screenIsReadOnly && surfData.image) return 0;
  
      surfData.image = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
      if (surf == SDL.screen) {
        var data = surfData.image.data;
        var num = data.length;
        for (var i = 0; i < num/4; i++) {
          data[i*4+3] = 255; // opacity, as canvases blend alpha
        }
      }
  
      if (SDL.defaults.copyOnLock) {
        // Copy pixel data to somewhere accessible to 'C/C++'
        if (surfData.isFlagSet(0x00200000 /* SDL_HWPALETTE */)) {
          // If this is neaded then
          // we should compact the data from 32bpp to 8bpp index.
          // I think best way to implement this is use
          // additional colorMap hash (color->index).
          // Something like this:
          //
          // var size = surfData.width * surfData.height;
          // var data = '';
          // for (var i = 0; i<size; i++) {
          //   var color = SDL.translateRGBAToColor(
          //     surfData.image.data[i*4   ], 
          //     surfData.image.data[i*4 +1], 
          //     surfData.image.data[i*4 +2], 
          //     255);
          //   var index = surfData.colorMap[color];
          //   HEAP8[(((surfData.buffer)+(i))|0)]=index;
          // }
          throw 'CopyOnLock is not supported for SDL_LockSurface with SDL_HWPALETTE flag set' + new Error().stack;
        } else {
        HEAPU8.set(surfData.image.data, surfData.buffer);
        }
      }
  
      return 0;
    }
  
  function _SDL_FreeRW(rwopsID) {
      SDL.rwops[rwopsID] = null;
      while (SDL.rwops.length > 0 && SDL.rwops[SDL.rwops.length-1] === null) {
        SDL.rwops.pop();
      }
    }function _IMG_Load_RW(rwopsID, freeSrc) {
      try {
        // stb_image integration support
        function cleanup() {
          if (rwops && freeSrc) _SDL_FreeRW(rwopsID);
        };
        function addCleanup(func) {
          var old = cleanup;
          cleanup = function added_cleanup() {
            old();
            func();
          }
        }
        function callStbImage(func, params) {
          var x = Module['_malloc'](4);
          var y = Module['_malloc'](4);
          var comp = Module['_malloc'](4);
          addCleanup(function() {
            Module['_free'](x);
            Module['_free'](y);
            Module['_free'](comp);
            if (data) Module['_stbi_image_free'](data);
          });
          var data = Module['_' + func].apply(null, params.concat([x, y, comp, 0]));
          if (!data) return null;
          return {
            rawData: true,
            data: data,
            width: HEAP32[((x)>>2)],
            height: HEAP32[((y)>>2)],
            size: HEAP32[((x)>>2)] * HEAP32[((y)>>2)] * HEAP32[((comp)>>2)],
            bpp: HEAP32[((comp)>>2)]
          };
        }
  
        var rwops = SDL.rwops[rwopsID];
        if (rwops === undefined) {
          return 0;
        }
  
        var filename = rwops.filename;
        if (filename === undefined) {
          Runtime.warnOnce('Only file names that have been preloaded are supported for IMG_Load_RW. Consider using STB_IMAGE=1 if you want synchronous image decoding (see settings.js)');
          return 0;
        }
  
        if (!raw) {
          filename = PATH.resolve(filename);
          var raw = Module["preloadedImages"][filename];
          if (!raw) {
            if (raw === null) Module.printErr('Trying to reuse preloaded image, but freePreloadedMediaOnUse is set!');
            Runtime.warnOnce('Cannot find preloaded image ' + filename);
            Runtime.warnOnce('Cannot find preloaded image ' + filename + '. Consider using STB_IMAGE=1 if you want synchronous image decoding (see settings.js)');
            return 0;
          } else if (Module['freePreloadedMediaOnUse']) {
            Module["preloadedImages"][filename] = null;
          }
        }
  
        var surf = SDL.makeSurface(raw.width, raw.height, 0, false, 'load:' + filename);
        var surfData = SDL.surfaces[surf];
        surfData.ctx.globalCompositeOperation = "copy";
        if (!raw.rawData) {
          surfData.ctx.drawImage(raw, 0, 0, raw.width, raw.height, 0, 0, raw.width, raw.height);
        } else {
          var imageData = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
          if (raw.bpp == 4) {
            imageData.data.set(HEAPU8.subarray((raw.data),(raw.data+raw.size)));
          } else if (raw.bpp == 3) {
            var pixels = raw.size/3;
            var data = imageData.data;
            var sourcePtr = raw.data;
            var destPtr = 0;
            for (var i = 0; i < pixels; i++) {
              data[destPtr++] = HEAPU8[((sourcePtr++)|0)];
              data[destPtr++] = HEAPU8[((sourcePtr++)|0)];
              data[destPtr++] = HEAPU8[((sourcePtr++)|0)];
              data[destPtr++] = 255;
            }
          } else {
            Module.printErr('cannot handle bpp ' + raw.bpp);
            return 0;
          }
          surfData.ctx.putImageData(imageData, 0, 0);
        }
        surfData.ctx.globalCompositeOperation = "source-over";
        // XXX SDL does not specify that loaded images must have available pixel data, in fact
        //     there are cases where you just want to blit them, so you just need the hardware
        //     accelerated version. However, code everywhere seems to assume that the pixels
        //     are in fact available, so we retrieve it here. This does add overhead though.
        _SDL_LockSurface(surf);
        surfData.locked--; // The surface is not actually locked in this hack
        if (SDL.GL) {
          // After getting the pixel data, we can free the canvas and context if we do not need to do 2D canvas blitting
          surfData.canvas = surfData.ctx = null;
        }
        return surf;
      } finally {
        cleanup();
      }
    }
  
  function _SDL_RWFromFile(_name, mode) {
      var id = SDL.rwops.length; // TODO: recycle ids when they are null
      var name = Pointer_stringify(_name)
      SDL.rwops.push({ filename: name, mimetype: Browser.getMimetype(name) });
      return id;
    }function _IMG_Load(filename){
      var rwops = _SDL_RWFromFile(filename);
      var result = _IMG_Load_RW(rwops, 1);
      return result;
    }

  function _SDL_SetVideoMode(width, height, depth, flags) {
      ['touchstart', 'touchend', 'touchmove', 'mousedown', 'mouseup', 'mousemove', 'DOMMouseScroll', 'mousewheel', 'mouseout'].forEach(function(event) {
        Module['canvas'].addEventListener(event, SDL.receiveEvent, true);
      });
  
      // (0,0) means 'use fullscreen' in native; in Emscripten, use the current canvas size.
      if (width == 0 && height == 0) {
        var canvas = Module['canvas'];
        width = canvas.width;
        height = canvas.height;
      }
  
      Browser.setCanvasSize(width, height, true);
      // Free the old surface first.
      if (SDL.screen) {
        SDL.freeSurface(SDL.screen);
        assert(!SDL.screen);
      }
      SDL.screen = SDL.makeSurface(width, height, flags, true, 'screen');
      if (!SDL.addedResizeListener) {
        SDL.addedResizeListener = true;
        Browser.resizeListeners.push(function(w, h) {
          SDL.receiveEvent({
            type: 'resize',
            w: w,
            h: h
          });
        });
      }
      return SDL.screen;
    }

  
  var GL={counter:1,lastError:0,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],programInfos:{},stringCache:{},packAlignment:4,unpackAlignment:4,init:function () {
        GL.createLog2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);
        Browser.moduleContextCreatedCallbacks.push(GL.initExtensions);
      },recordError:function recordError(errorCode) {
        if (!GL.lastError) {
          GL.lastError = errorCode;
        }
      },getNewId:function (table) {
        var ret = GL.counter++;
        for (var i = table.length; i < ret; i++) {
          table[i] = null;
        }
        return ret;
      },MINI_TEMP_BUFFER_SIZE:16,miniTempBuffer:null,miniTempBufferViews:[0],MAX_TEMP_BUFFER_SIZE:2097152,tempVertexBuffers1:[],tempVertexBufferCounters1:[],tempVertexBuffers2:[],tempVertexBufferCounters2:[],numTempVertexBuffersPerSize:64,tempIndexBuffers:[],tempQuadIndexBuffer:null,log2ceilLookup:null,createLog2ceilLookup:function (maxValue) {
        GL.log2ceilLookup = new Uint8Array(maxValue+1);
        var log2 = 0;
        var pow2 = 1;
        GL.log2ceilLookup[0] = 0;
        for(var i = 1; i <= maxValue; ++i) {
          if (i > pow2) {
            pow2 <<= 1;
            ++log2;
          }
          GL.log2ceilLookup[i] = log2;
        }
      },generateTempBuffers:function (quads) {
        var largestIndex = GL.log2ceilLookup[GL.MAX_TEMP_BUFFER_SIZE];
        GL.tempVertexBufferCounters1.length = GL.tempVertexBufferCounters2.length = largestIndex+1;
        GL.tempVertexBuffers1.length = GL.tempVertexBuffers2.length = largestIndex+1;
        GL.tempIndexBuffers.length = largestIndex+1;
        for(var i = 0; i <= largestIndex; ++i) {
          GL.tempIndexBuffers[i] = null; // Created on-demand
          GL.tempVertexBufferCounters1[i] = GL.tempVertexBufferCounters2[i] = 0;
          var ringbufferLength = GL.numTempVertexBuffersPerSize;
          GL.tempVertexBuffers1[i] = [];
          GL.tempVertexBuffers2[i] = [];
          var ringbuffer1 = GL.tempVertexBuffers1[i];
          var ringbuffer2 = GL.tempVertexBuffers2[i];
          ringbuffer1.length = ringbuffer2.length = ringbufferLength;
          for(var j = 0; j < ringbufferLength; ++j) {
            ringbuffer1[j] = ringbuffer2[j] = null; // Created on-demand
          }
        }
  
        if (quads) {
          // GL_QUAD indexes can be precalculated
          GL.tempQuadIndexBuffer = GLctx.createBuffer();
          GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, GL.tempQuadIndexBuffer);
          var numIndexes = GL.MAX_TEMP_BUFFER_SIZE >> 1;
          var quadIndexes = new Uint16Array(numIndexes);
          var i = 0, v = 0;
          while (1) {
            quadIndexes[i++] = v;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+1;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+2;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+2;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+3;
            if (i >= numIndexes) break;
            v += 4;
          }
          GLctx.bufferData(GLctx.ELEMENT_ARRAY_BUFFER, quadIndexes, GLctx.STATIC_DRAW);
          GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, null);
        }
      },getTempVertexBuffer:function getTempVertexBuffer(sizeBytes) {
        var idx = GL.log2ceilLookup[sizeBytes];
        var ringbuffer = GL.tempVertexBuffers1[idx];
        var nextFreeBufferIndex = GL.tempVertexBufferCounters1[idx];
        GL.tempVertexBufferCounters1[idx] = (GL.tempVertexBufferCounters1[idx]+1) & (GL.numTempVertexBuffersPerSize-1);
        var vbo = ringbuffer[nextFreeBufferIndex];
        if (vbo) {
          return vbo;
        }
        var prevVBO = GLctx.getParameter(GLctx.ARRAY_BUFFER_BINDING);
        ringbuffer[nextFreeBufferIndex] = GLctx.createBuffer();
        GLctx.bindBuffer(GLctx.ARRAY_BUFFER, ringbuffer[nextFreeBufferIndex]);
        GLctx.bufferData(GLctx.ARRAY_BUFFER, 1 << idx, GLctx.DYNAMIC_DRAW);
        GLctx.bindBuffer(GLctx.ARRAY_BUFFER, prevVBO);
        return ringbuffer[nextFreeBufferIndex];
      },getTempIndexBuffer:function getTempIndexBuffer(sizeBytes) {
        var idx = GL.log2ceilLookup[sizeBytes];
        var ibo = GL.tempIndexBuffers[idx];
        if (ibo) {
          return ibo;
        }
        var prevIBO = GLctx.getParameter(GLctx.ELEMENT_ARRAY_BUFFER_BINDING);
        GL.tempIndexBuffers[idx] = GLctx.createBuffer();
        GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, GL.tempIndexBuffers[idx]);
        GLctx.bufferData(GLctx.ELEMENT_ARRAY_BUFFER, 1 << idx, GLctx.DYNAMIC_DRAW);
        GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, prevIBO);
        return GL.tempIndexBuffers[idx];
      },newRenderingFrameStarted:function newRenderingFrameStarted() {
        var vb = GL.tempVertexBuffers1;
        GL.tempVertexBuffers1 = GL.tempVertexBuffers2;
        GL.tempVertexBuffers2 = vb;
        vb = GL.tempVertexBufferCounters1;
        GL.tempVertexBufferCounters1 = GL.tempVertexBufferCounters2;
        GL.tempVertexBufferCounters2 = vb;
        var largestIndex = GL.log2ceilLookup[GL.MAX_TEMP_BUFFER_SIZE];
        for(var i = 0; i <= largestIndex; ++i) {
          GL.tempVertexBufferCounters1[i] = 0;
        }
      },getSource:function (shader, count, string, length) {
        var source = '';
        for (var i = 0; i < count; ++i) {
          var frag;
          if (length) {
            var len = HEAP32[(((length)+(i*4))>>2)];
            if (len < 0) {
              frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)]);
            } else {
              frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)], len);
            }
          } else {
            frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)]);
          }
          source += frag;
        }
        return source;
      },computeImageSize:function (width, height, sizePerPixel, alignment) {
        function roundedToNextMultipleOf(x, y) {
          return Math.floor((x + y - 1) / y) * y
        }
        var plainRowSize = width * sizePerPixel;
        var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);
        return (height <= 0) ? 0 :
                 ((height - 1) * alignedRowSize + plainRowSize);
      },get:function (name_, p, type) {
        // Guard against user passing a null pointer.
        // Note that GLES2 spec does not say anything about how passing a null pointer should be treated.
        // Testing on desktop core GL 3, the application crashes on glGetIntegerv to a null pointer, but
        // better to report an error instead of doing anything random.
        if (!p) {
          GL.recordError(0x0501 /* GL_INVALID_VALUE */);
          return;
        }
        var ret = undefined;
        switch(name_) { // Handle a few trivial GLES values
          case 0x8DFA: // GL_SHADER_COMPILER
            ret = 1;
            break;
          case 0x8DF8: // GL_SHADER_BINARY_FORMATS
            if (type !== 'Integer') {
              GL.recordError(0x0500); // GL_INVALID_ENUM
            }
            return; // Do not write anything to the out pointer, since no binary formats are supported.
          case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS
            ret = 0;
            break;
          case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS
            // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be queried for length),
            // so implement it ourselves to allow C++ GLES2 code get the length.
            var formats = GLctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);
            ret = formats.length;
            break;
          case 0x8B9A: // GL_IMPLEMENTATION_COLOR_READ_TYPE
            ret = 0x1401; // GL_UNSIGNED_BYTE
            break;
          case 0x8B9B: // GL_IMPLEMENTATION_COLOR_READ_FORMAT
            ret = 0x1908; // GL_RGBA
            break;
        }
  
        if (ret === undefined) {
          var result = GLctx.getParameter(name_);
          switch (typeof(result)) {
            case "number":
              ret = result;
              break;
            case "boolean":
              ret = result ? 1 : 0;
              break;
            case "string":
              GL.recordError(0x0500); // GL_INVALID_ENUM
              return;
            case "object":
              if (result === null) {
                // null is a valid result for some (e.g., which buffer is bound - perhaps nothing is bound), but otherwise
                // can mean an invalid name_, which we need to report as an error
                switch(name_) {
                  case 0x8894: // ARRAY_BUFFER_BINDING
                  case 0x8B8D: // CURRENT_PROGRAM
                  case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING
                  case 0x8CA6: // FRAMEBUFFER_BINDING
                  case 0x8CA7: // RENDERBUFFER_BINDING
                  case 0x8069: // TEXTURE_BINDING_2D
                  case 0x8514: { // TEXTURE_BINDING_CUBE_MAP
                    ret = 0;
                    break;
                  }
                  default: {
                    GL.recordError(0x0500); // GL_INVALID_ENUM
                    return;
                  }
                }
              } else if (result instanceof Float32Array ||
                         result instanceof Uint32Array ||
                         result instanceof Int32Array ||
                         result instanceof Array) {
                for (var i = 0; i < result.length; ++i) {
                  switch (type) {
                    case 'Integer': HEAP32[(((p)+(i*4))>>2)]=result[i];   break;
                    case 'Float':   HEAPF32[(((p)+(i*4))>>2)]=result[i]; break;
                    case 'Boolean': HEAP8[(((p)+(i))|0)]=result[i] ? 1 : 0;    break;
                    default: throw 'internal glGet error, bad type: ' + type;
                  }
                }
                return;
              } else if (result instanceof WebGLBuffer ||
                         result instanceof WebGLProgram ||
                         result instanceof WebGLFramebuffer ||
                         result instanceof WebGLRenderbuffer ||
                         result instanceof WebGLTexture) {
                ret = result.name | 0;
              } else {
                GL.recordError(0x0500); // GL_INVALID_ENUM
                return;
              }
              break;
            default:
              GL.recordError(0x0500); // GL_INVALID_ENUM
              return;
          }
        }
  
        switch (type) {
          case 'Integer': HEAP32[((p)>>2)]=ret;    break;
          case 'Float':   HEAPF32[((p)>>2)]=ret;  break;
          case 'Boolean': HEAP8[(p)]=ret ? 1 : 0; break;
          default: throw 'internal glGet error, bad type: ' + type;
        }
      },getTexPixelData:function (type, format, width, height, pixels, internalFormat) {
        var sizePerPixel;
        switch (type) {
          case 0x1401 /* GL_UNSIGNED_BYTE */:
            switch (format) {
              case 0x1906 /* GL_ALPHA */:
              case 0x1909 /* GL_LUMINANCE */:
                sizePerPixel = 1;
                break;
              case 0x1907 /* GL_RGB */:
                sizePerPixel = 3;
                break;
              case 0x1908 /* GL_RGBA */:
                sizePerPixel = 4;
                break;
              case 0x190A /* GL_LUMINANCE_ALPHA */:
                sizePerPixel = 2;
                break;
              default:
                throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x1403 /* GL_UNSIGNED_SHORT */:
            if (format == 0x1902 /* GL_DEPTH_COMPONENT */) {
              sizePerPixel = 2;
            } else {
              throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x1405 /* GL_UNSIGNED_INT */:
            if (format == 0x1902 /* GL_DEPTH_COMPONENT */) {
              sizePerPixel = 4;
            } else {
              throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x84FA /* UNSIGNED_INT_24_8_WEBGL */:
            sizePerPixel = 4;
            break;
          case 0x8363 /* GL_UNSIGNED_SHORT_5_6_5 */:
          case 0x8033 /* GL_UNSIGNED_SHORT_4_4_4_4 */:
          case 0x8034 /* GL_UNSIGNED_SHORT_5_5_5_1 */:
            sizePerPixel = 2;
            break;
          case 0x1406 /* GL_FLOAT */:
            switch (format) {
              case 0x1907 /* GL_RGB */:
                sizePerPixel = 3*4;
                break;
              case 0x1908 /* GL_RGBA */:
                sizePerPixel = 4*4;
                break;
              default:
                throw 'Invalid format (' + format + ')';
            }
            internalFormat = GLctx.RGBA;
            break;
          default:
            throw 'Invalid type (' + type + ')';
        }
        var bytes = GL.computeImageSize(width, height, sizePerPixel, GL.unpackAlignment);
        if (type == 0x1401 /* GL_UNSIGNED_BYTE */) {
          pixels = HEAPU8.subarray((pixels),(pixels+bytes));
        } else if (type == 0x1406 /* GL_FLOAT */) {
          pixels = HEAPF32.subarray((pixels)>>2,(pixels+bytes)>>2);
        } else if (type == 0x1405 /* GL_UNSIGNED_INT */ || type == 0x84FA /* UNSIGNED_INT_24_8_WEBGL */) {
          pixels = HEAPU32.subarray((pixels)>>2,(pixels+bytes)>>2);
        } else {
          pixels = HEAPU16.subarray((pixels)>>1,(pixels+bytes)>>1);
        }
        return {
          pixels: pixels,
          internalFormat: internalFormat
        }
      },initExtensions:function () {
        if (GL.initExtensions.done) return;
        GL.initExtensions.done = true;
  
        if (!Module.useWebGL) return; // an app might link both gl and 2d backends
  
        GL.miniTempBuffer = new Float32Array(GL.MINI_TEMP_BUFFER_SIZE);
        for (var i = 0; i < GL.MINI_TEMP_BUFFER_SIZE; i++) {
          GL.miniTempBufferViews[i] = GL.miniTempBuffer.subarray(0, i+1);
        }
  
        GL.maxVertexAttribs = GLctx.getParameter(GLctx.MAX_VERTEX_ATTRIBS);
  
        // Detect the presence of a few extensions manually, this GL interop layer itself will need to know if they exist. 
        GL.compressionExt = GLctx.getExtension('WEBGL_compressed_texture_s3tc') ||
                            GLctx.getExtension('MOZ_WEBGL_compressed_texture_s3tc') ||
                            GLctx.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');
  
        GL.anisotropicExt = GLctx.getExtension('EXT_texture_filter_anisotropic') ||
                            GLctx.getExtension('MOZ_EXT_texture_filter_anisotropic') ||
                            GLctx.getExtension('WEBKIT_EXT_texture_filter_anisotropic');
  
        GL.floatExt = GLctx.getExtension('OES_texture_float');
  
        // Extension available from Firefox 26 and Google Chrome 30
        GL.instancedArraysExt = GLctx.getExtension('ANGLE_instanced_arrays');
        
        // Extension available from Firefox 25 and WebKit
        GL.vaoExt = Module.ctx.getExtension('OES_vertex_array_object');
  
        // These are the 'safe' feature-enabling extensions that don't add any performance impact related to e.g. debugging, and
        // should be enabled by default so that client GLES2/GL code will not need to go through extra hoops to get its stuff working.
        // As new extensions are ratified at http://www.khronos.org/registry/webgl/extensions/ , feel free to add your new extensions
        // here, as long as they don't produce a performance impact for users that might not be using those extensions.
        // E.g. debugging-related extensions should probably be off by default.
        var automaticallyEnabledExtensions = [ "OES_texture_float", "OES_texture_half_float", "OES_standard_derivatives",
                                               "OES_vertex_array_object", "WEBGL_compressed_texture_s3tc", "WEBGL_depth_texture",
                                               "OES_element_index_uint", "EXT_texture_filter_anisotropic", "ANGLE_instanced_arrays",
                                               "OES_texture_float_linear", "OES_texture_half_float_linear", "WEBGL_compressed_texture_atc",
                                               "WEBGL_compressed_texture_pvrtc", "EXT_color_buffer_half_float", "WEBGL_color_buffer_float",
                                               "EXT_frag_depth", "EXT_sRGB", "WEBGL_draw_buffers", "WEBGL_shared_resources",
                                               "EXT_shader_texture_lod" ];
  
        function shouldEnableAutomatically(extension) {
          for(var i in automaticallyEnabledExtensions) {
            var include = automaticallyEnabledExtensions[i];
            if (ext.indexOf(include) != -1) {
              return true;
            }
          }
          return false;
        }
  
        var extensions = GLctx.getSupportedExtensions();
        for(var e in extensions) {
          var ext = extensions[e].replace('MOZ_', '').replace('WEBKIT_', '');
          if (automaticallyEnabledExtensions.indexOf(ext) != -1) {
            GLctx.getExtension(ext); // Calling .getExtension enables that extension permanently, no need to store the return value to be enabled.
          }
        }
      },populateUniformTable:function (program) {
        var p = GL.programs[program];
        GL.programInfos[program] = {
          uniforms: {},
          maxUniformLength: 0, // This is eagerly computed below, since we already enumerate all uniforms anyway.
          maxAttributeLength: -1 // This is lazily computed and cached, computed when/if first asked, "-1" meaning not computed yet.
        };
  
        var ptable = GL.programInfos[program];
        var utable = ptable.uniforms;
        // A program's uniform table maps the string name of an uniform to an integer location of that uniform.
        // The global GL.uniforms map maps integer locations to WebGLUniformLocations.
        var numUniforms = GLctx.getProgramParameter(p, GLctx.ACTIVE_UNIFORMS);
        for (var i = 0; i < numUniforms; ++i) {
          var u = GLctx.getActiveUniform(p, i);
  
          var name = u.name;
          ptable.maxUniformLength = Math.max(ptable.maxUniformLength, name.length+1);
  
          // Strip off any trailing array specifier we might have got, e.g. "[0]".
          if (name.indexOf(']', name.length-1) !== -1) {
            var ls = name.lastIndexOf('[');
            name = name.slice(0, ls);
          }
  
          // Optimize memory usage slightly: If we have an array of uniforms, e.g. 'vec3 colors[3];', then 
          // only store the string 'colors' in utable, and 'colors[0]', 'colors[1]' and 'colors[2]' will be parsed as 'colors'+i.
          // Note that for the GL.uniforms table, we still need to fetch the all WebGLUniformLocations for all the indices.
          var loc = GLctx.getUniformLocation(p, name);
          var id = GL.getNewId(GL.uniforms);
          utable[name] = [u.size, id];
          GL.uniforms[id] = loc;
  
          for (var j = 1; j < u.size; ++j) {
            var n = name + '['+j+']';
            loc = GLctx.getUniformLocation(p, n);
            id = GL.getNewId(GL.uniforms);
  
            GL.uniforms[id] = loc;
          }
        }
      }};function _glUseProgram(program) {
      GLctx.useProgram(program ? GL.programs[program] : null);
    }

  function _glGenTextures(n, textures) {
      for (var i = 0; i < n; i++) {
        var id = GL.getNewId(GL.textures);
        var texture = GLctx.createTexture();
        texture.name = id;
        GL.textures[id] = texture;
        HEAP32[(((textures)+(i*4))>>2)]=id;
      }
    }

  function _glBindTexture(target, texture) {
      GLctx.bindTexture(target, texture ? GL.textures[texture] : null);
    }

  function _glTexParameteri(x0, x1, x2) { GLctx.texParameteri(x0, x1, x2) }

  function _glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels) {
      if (pixels) {
        var data = GL.getTexPixelData(type, format, width, height, pixels, internalFormat);
        pixels = data.pixels;
        internalFormat = data.internalFormat;
      } else {
        pixels = null;
      }
      GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);
    }

  function _glGenBuffers(n, buffers) {
      for (var i = 0; i < n; i++) {
        var id = GL.getNewId(GL.buffers);
        var buffer = GLctx.createBuffer();
        buffer.name = id;
        GL.buffers[id] = buffer;
        HEAP32[(((buffers)+(i*4))>>2)]=id;
      }
    }

  function _glBindBuffer(target, buffer) {
      var bufferObj = buffer ? GL.buffers[buffer] : null;
  
  
      GLctx.bindBuffer(target, bufferObj);
    }

  function _glBufferData(target, size, data, usage) {
      switch (usage) { // fix usages, WebGL only has *_DRAW
        case 0x88E1: // GL_STREAM_READ
        case 0x88E2: // GL_STREAM_COPY
          usage = 0x88E0; // GL_STREAM_DRAW
          break;
        case 0x88E5: // GL_STATIC_READ
        case 0x88E6: // GL_STATIC_COPY
          usage = 0x88E4; // GL_STATIC_DRAW
          break;
        case 0x88E9: // GL_DYNAMIC_READ
        case 0x88EA: // GL_DYNAMIC_COPY
          usage = 0x88E8; // GL_DYNAMIC_DRAW
          break;
      }
      if (!data) {
        GLctx.bufferData(target, size, usage);
      } else {
        GLctx.bufferData(target, HEAPU8.subarray(data, data+size), usage);
      }
    }

  function _glGetUniformLocation(program, name) {
      name = Pointer_stringify(name);
  
      var arrayOffset = 0;
      // If user passed an array accessor "[index]", parse the array index off the accessor.
      if (name.indexOf(']', name.length-1) !== -1) {
        var ls = name.lastIndexOf('[');
        var arrayIndex = name.slice(ls+1, -1);
        if (arrayIndex.length > 0) {
          arrayOffset = parseInt(arrayIndex);
          if (arrayOffset < 0) {
            return -1;
          }
        }
        name = name.slice(0, ls);
      }
  
      var ptable = GL.programInfos[program];
      if (!ptable) {
        return -1;
      }
      var utable = ptable.uniforms;
      var uniformInfo = utable[name]; // returns pair [ dimension_of_uniform_array, uniform_location ]
      if (uniformInfo && arrayOffset < uniformInfo[0]) { // Check if user asked for an out-of-bounds element, i.e. for 'vec4 colors[3];' user could ask for 'colors[10]' which should return -1.
        return uniformInfo[1]+arrayOffset;
      } else {
        return -1;
      }
    }

  function _glUniformMatrix4fv(location, count, transpose, value) {
      location = GL.uniforms[location];
      var view;
      if (count == 1) {
        // avoid allocation for the common case of uploading one uniform matrix
        view = GL.miniTempBufferViews[15];
        for (var i = 0; i < 16; i++) {
          view[i] = HEAPF32[(((value)+(i*4))>>2)];
        }
      } else {
        view = HEAPF32.subarray((value)>>2,(value+count*64)>>2);
      }
      GLctx.uniformMatrix4fv(location, transpose, view);
    }

  function _glActiveTexture(x0) { GLctx.activeTexture(x0) }

  function _glUniform1i(location, v0) {
      location = GL.uniforms[location];
      GLctx.uniform1i(location, v0);
    }

  function _glGetAttribLocation(program, name) {
      program = GL.programs[program];
      name = Pointer_stringify(name);
      return GLctx.getAttribLocation(program, name);
    }

  function _glEnableVertexAttribArray(index) {
      GLctx.enableVertexAttribArray(index);
    }

  function _glVertexAttribPointer(index, size, type, normalized, stride, ptr) {
      GLctx.vertexAttribPointer(index, size, type, normalized, stride, ptr);
    }

  function _glClearColor(x0, x1, x2, x3) { GLctx.clearColor(x0, x1, x2, x3) }

  function _glViewport(x0, x1, x2, x3) { GLctx.viewport(x0, x1, x2, x3) }

  function _IMG_Quit() {
  Module['printErr']('missing function: IMG_Quit'); abort(-1);
  }

  function _SDL_Quit() {
      for (var i = 0; i < SDL.numChannels; ++i) {
        if (SDL.channels[i].audio) {
          SDL.channels[i].audio.pause();
        }
      }
      if (SDL.music.audio) {
        SDL.music.audio.pause();
      }
      Module.print('SDL_Quit called (and ignored)');
    }

  function _glClear(x0) { GLctx.clear(x0) }

  function _glBufferSubData(target, offset, size, data) {
      GLctx.bufferSubData(target, offset, HEAPU8.subarray(data, data+size));
    }

  function _glDrawArrays(mode, first, count) {
  
      GLctx.drawArrays(mode, first, count);
  
    }

  function _SDL_GL_SwapBuffers() {}

  function _llvm_lifetime_start() {}

  function _SDL_PollEvent(ptr) {
      if (SDL.initFlags & 0x200 && SDL.joystickEventState) {
        // If SDL_INIT_JOYSTICK was supplied AND the joystick system is configured
        // to automatically query for events, query for joystick events.
        SDL.queryJoysticks();
      }
      if (SDL.events.length === 0) return 0;
      if (ptr) {
        SDL.makeCEvent(SDL.events.shift(), ptr);
      }
      return 1;
    }

  function _llvm_lifetime_end() {}

  
   
  Module["_memset"] = _memset;var _llvm_memset_p0i8_i32=_memset;

  function __ZNSt9exceptionD2Ev() {}

  function __ZNKSt9exception4whatEv() {
      if (!__ZNKSt9exception4whatEv.buffer) {
        var name = "std::exception";
        __ZNKSt9exception4whatEv.buffer = _malloc(name.length + 1);
        writeStringToMemory(name, __ZNKSt9exception4whatEv.buffer);
      }
      return __ZNKSt9exception4whatEv.buffer;
    }

  
  var ___cxa_caught_exceptions=[];function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      ___cxa_caught_exceptions.push(___cxa_last_thrown_exception);
      return ptr;
    }

  function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = ___cxa_caught_exceptions.pop();
      if (ptr) {
        header = ptr - ___cxa_exception_header_size;
        var destructor = HEAP32[(((header)+(4))>>2)];
        if (destructor) {
          Runtime.dynCall('vi', destructor, [ptr]);
          HEAP32[(((header)+(4))>>2)]=0;
        }
        ___cxa_free_exception(ptr);
        ___cxa_last_thrown_exception = 0;
      }
    }

  
  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }function __ZSt9terminatev() {
      _exit(-1234);
    }


   
  Module["_strlen"] = _strlen;

  function _SDL_FreeSurface(surf) {
      if (surf) SDL.freeSurface(surf);
    }

  function _glCreateProgram() {
      var id = GL.getNewId(GL.programs);
      var program = GLctx.createProgram();
      program.name = id;
      GL.programs[id] = program;
      return id;
    }

  function _glAttachShader(program, shader) {
      GLctx.attachShader(GL.programs[program],
                              GL.shaders[shader]);
    }

  function _glLinkProgram(program) {
      GLctx.linkProgram(GL.programs[program]);
      GL.programInfos[program] = null; // uniforms no longer keep the same names after linking
      GL.populateUniformTable(program);
    }

  function _glGetProgramiv(program, pname, p) {
      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH
        HEAP32[((p)>>2)]=GLctx.getProgramInfoLog(GL.programs[program]).length + 1;
      } else if (pname == 0x8B87 /* GL_ACTIVE_UNIFORM_MAX_LENGTH */) {
        var ptable = GL.programInfos[program];
        if (ptable) {
          HEAP32[((p)>>2)]=ptable.maxUniformLength;
          return;
        } else if (program < GL.counter) {
          GL.recordError(0x0502 /* GL_INVALID_OPERATION */);
        } else {
          GL.recordError(0x0501 /* GL_INVALID_VALUE */);
        }
      } else if (pname == 0x8B8A /* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */) {
        var ptable = GL.programInfos[program];
        if (ptable) {
          if (ptable.maxAttributeLength == -1) {
            var program = GL.programs[program];
            var numAttribs = GLctx.getProgramParameter(program, GLctx.ACTIVE_ATTRIBUTES);
            ptable.maxAttributeLength = 0; // Spec says if there are no active attribs, 0 must be returned.
            for(var i = 0; i < numAttribs; ++i) {
              var activeAttrib = GLctx.getActiveAttrib(program, i);
              ptable.maxAttributeLength = Math.max(ptable.maxAttributeLength, activeAttrib.name.length+1);
            }
          }
          HEAP32[((p)>>2)]=ptable.maxAttributeLength;
          return;
        } else if (program < GL.counter) {
          GL.recordError(0x0502 /* GL_INVALID_OPERATION */);
        } else {
          GL.recordError(0x0501 /* GL_INVALID_VALUE */);
        }
      } else {
        HEAP32[((p)>>2)]=GLctx.getProgramParameter(GL.programs[program], pname);
      }
    }

  function _glDeleteProgram(program) {
      var program = GL.programs[program];
      GLctx.deleteProgram(program);
      program.name = 0;
      GL.programs[program] = null;
      GL.programInfos[program] = null;
    }

  function _glCreateShader(shaderType) {
      var id = GL.getNewId(GL.shaders);
      GL.shaders[id] = GLctx.createShader(shaderType);
      return id;
    }

  function _glShaderSource(shader, count, string, length) {
      var source = GL.getSource(shader, count, string, length);
      GLctx.shaderSource(GL.shaders[shader], source);
    }

  function _glCompileShader(shader) {
      GLctx.compileShader(GL.shaders[shader]);
    }

  function _glGetShaderiv(shader, pname, p) {
      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH
        var log = GLctx.getShaderInfoLog(GL.shaders[shader]);
        // Work around a bug in Chromium which causes getShaderInfoLog to return null
        if (!log) log = '(unknown error)';
        HEAP32[((p)>>2)]=log.length + 1;
      } else {
        HEAP32[((p)>>2)]=GLctx.getShaderParameter(GL.shaders[shader], pname);
      }
    }

  function _glGetShaderInfoLog(shader, maxLength, length, infoLog) {
      var log = GLctx.getShaderInfoLog(GL.shaders[shader]);
      // Work around a bug in Chromium which causes getShaderInfoLog to return null
      if (!log) log = '(unknown error)';
      log = log.substr(0, maxLength - 1);
      writeStringToMemory(log, infoLog);
      if (length) {
        HEAP32[((length)>>2)]=log.length
      }
    }

  function _glDeleteShader(shader) {
      GLctx.deleteShader(GL.shaders[shader]);
      GL.shaders[shader] = null;
    }

  
  
  
  
  function _mkport() { throw 'TODO' }var SOCKFS={mount:function (mount) {
        return FS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
  
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
  
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
  
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
  
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
  
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
  
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
  
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              // runtimeConfig gets set to true if WebSocket runtime configuration is available.
              var runtimeConfig = (Module['websocket'] && ('object' === typeof Module['websocket']));
  
              // The default value is 'ws://' the replace is needed because the compiler replaces "//" comments with '#'
              // comments without checking context, so we'd end up with ws:#, the replace swaps the "#" for "//" again.
              var url = 'ws:#'.replace('#', '//');
  
              if (runtimeConfig) {
                if ('string' === typeof Module['websocket']['url']) {
                  url = Module['websocket']['url']; // Fetch runtime WebSocket URL config.
                }
              }
  
              if (url === 'ws://' || url === 'wss://') { // Is the supplied URL config just a prefix, if so complete it.
                url = url + addr + ':' + port;
              }
  
              // Make the WebSocket subprotocol (Sec-WebSocket-Protocol) default to binary if no configuration is set.
              var subProtocols = 'binary'; // The default value is 'binary'
  
              if (runtimeConfig) {
                if ('string' === typeof Module['websocket']['subprotocol']) {
                  subProtocols = Module['websocket']['subprotocol']; // Fetch runtime WebSocket subprotocol config.
                }
              }
  
              // The regex trims the string (removes spaces at the beginning and end, then splits the string by
              // <any space>,<any space> into an Array. Whitespace removal is important for Websockify and ws.
              subProtocols = subProtocols.replace(/^ +| +$/g,"").split(/ *, */);
  
              // The node ws library API for specifying optional subprotocol is slightly different than the browser's.
              var opts = ENVIRONMENT_IS_NODE ? {'protocol': subProtocols.toString()} : subProtocols;
  
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
  
  
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
  
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
  
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
  
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
  
          var handleOpen = function () {
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
  
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
  
  
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
  
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
          };
  
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('error', function() {
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
  
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
  
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
  
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
  
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
  
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODS.EOPNOTSUPP);
          }
  
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
  
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
  
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
  
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
  
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
  
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
  
              // push to queue for accept to pick up
              sock.pending.push(newsock);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
            }
          });
          sock.server.on('closed', function() {
            sock.server = null;
          });
          sock.server.on('error', function() {
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
  
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
  
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
  
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
  
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
  
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
  
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
  
  
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
  
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) return -1;
      return stream.fd;
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }

  
   
  Module["_memmove"] = _memmove;var _llvm_memmove_p0i8_p0i8_i32=_memmove;

  
  
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)|0)]=streamObj.ungotten.pop();
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(streamObj.fd, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return Math.floor(bytesRead / size);
    }


  
  
  function _lseek(fildes, offset, whence) {
      // off_t lseek(int fildes, off_t offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/lseek.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        return FS.llseek(stream, offset, whence);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fseek(stream, offset, whence) {
      // int fseek(FILE *stream, long offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fseek.html
      var fd = _fileno(stream);
      var ret = _lseek(fd, offset, whence);
      if (ret == -1) {
        return -1;
      }
      stream = FS.getStreamFromPtr(stream);
      stream.eof = false;
      return 0;
    }var _fseeko=_fseek;

  
  function _ftell(stream) {
      // long ftell(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ftell.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      if (FS.isChrdev(stream.node.mode)) {
        ___setErrNo(ERRNO_CODES.ESPIPE);
        return -1;
      } else {
        return stream.position;
      }
    }var _ftello=_ftell;

  
  function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        FS.close(stream);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fsync(fildes) {
      // int fsync(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fsync.html
      var stream = FS.getStream(fildes);
      if (stream) {
        // We write directly to the file system, so there's nothing to do here.
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      var fd = _fileno(stream);
      _fsync(fd);
      return _close(fd);
    }

  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      var ptr = ___cxa_caught_exceptions.pop();
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

  
  function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      var mode = HEAP32[((varargs)>>2)];
      path = Pointer_stringify(path);
      try {
        var stream = FS.open(path, oflag, mode);
        return stream.fd;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fopen(filename, mode) {
      // FILE *fopen(const char *restrict filename, const char *restrict mode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fopen.html
      var flags;
      mode = Pointer_stringify(mode);
      if (mode[0] == 'r') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 0;
        }
      } else if (mode[0] == 'w') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 512;
      } else if (mode[0] == 'a') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 1024;
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return 0;
      }
      var fd = _open(filename, flags, allocate([0x1FF, 0, 0, 0], 'i32', ALLOC_STACK));  // All creation permissions.
      return fd === -1 ? 0 : FS.getPtrForStream(FS.getStream(fd));
    }

  var _llvm_memset_p0i8_i64=_memset;

  var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC); 
  Module["_llvm_ctlz_i32"] = _llvm_ctlz_i32;

  
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = HEAPF64[(((varargs)+(argIndex))>>3)];
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+8))>>2)]];
          argIndex += 8; // each 32-bit chunk is in a 64-bit block
  
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Math.max(Runtime.getNativeFieldSize(type), Runtime.getAlignSize(type, null, true));
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }

  function _abort() {
      Module['abort']();
    }

   
  Module["_tolower"] = _tolower;

  function _toupper(chr) {
      if (chr >= 97 && chr <= 122) {
        return chr - 97 + 65;
      } else {
        return chr;
      }
    }

  function _isspace(chr) {
      return (chr == 32) || (chr >= 9 && chr <= 13);
    }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[(variable)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[(variable)]=1;
        return 1;
      }
      return 0;
    }

  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  function ___cxa_guard_abort() {}

  function ___cxa_guard_release() {}

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  var _ceilf=Math_ceil;

  function _llvm_invariant_start() {}

  function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg) {
      Module['noExitRuntime'] = true;
  
      Browser.mainLoop.runner = function Browser_mainLoop_runner() {
        if (ABORT) return;
        if (Browser.mainLoop.queue.length > 0) {
          var start = Date.now();
          var blocker = Browser.mainLoop.queue.shift();
          blocker.func(blocker.arg);
          if (Browser.mainLoop.remainingBlockers) {
            var remaining = Browser.mainLoop.remainingBlockers;
            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);
            if (blocker.counted) {
              Browser.mainLoop.remainingBlockers = next;
            } else {
              // not counted, but move the progress along a tiny bit
              next = next + 0.5; // do not steal all the next one's progress
              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;
            }
          }
          console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);
          Browser.mainLoop.updateStatus();
          setTimeout(Browser.mainLoop.runner, 0);
          return;
        }
        if (Browser.mainLoop.shouldPause) {
          // catch pauses from non-main loop sources
          Browser.mainLoop.paused = true;
          Browser.mainLoop.shouldPause = false;
          return;
        }
  
        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize
        // VBO double-buffering and reduce GPU stalls.
  
        if (Browser.mainLoop.method === 'timeout' && Module.ctx) {
          Module.printErr('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');
          Browser.mainLoop.method = ''; // just warn once per call to set main loop
        }
  
        if (Module['preMainLoop']) {
          Module['preMainLoop']();
        }
  
        try {
          if (typeof arg !== 'undefined') {
            Runtime.dynCall('vi', func, [arg]);
          } else {
            Runtime.dynCall('v', func);
          }
        } catch (e) {
          if (e instanceof ExitStatus) {
            return;
          } else {
            if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
            throw e;
          }
        }
  
        if (Module['postMainLoop']) {
          Module['postMainLoop']();
        }
  
        if (Browser.mainLoop.shouldPause) {
          // catch pauses from the main loop itself
          Browser.mainLoop.paused = true;
          Browser.mainLoop.shouldPause = false;
          return;
        }
        Browser.mainLoop.scheduler();
      }
      if (fps && fps > 0) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          setTimeout(Browser.mainLoop.runner, 1000/fps); // doing this each time means that on exception, we stop
        };
        Browser.mainLoop.method = 'timeout';
      } else {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          Browser.requestAnimationFrame(Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'rAF';
      }
      Browser.mainLoop.scheduler();
  
      if (simulateInfiniteLoop) {
        throw 'SimulateInfiniteLoop';
      }
    }

  function _llvm_eh_typeid_for(type) {
      return type;
    }

  function _pthread_mutex_lock() {}

  function _pthread_mutex_unlock() {}

  function _pthread_cond_broadcast() {
      return 0;
    }

  function _pthread_cond_wait() {
      return 0;
    }

  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        return -1;
      }
      if (c === -1) {
        // do nothing for EOF character
        return c;
      }
      c = unSign(c & 0xFF);
      stream.ungotten.push(c);
      stream.eof = false;
      return c;
    }

  
  function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)|0)];
      }
    }var _getc=_fgetc;

  function ___errno_location() {
      return ___errno_state;
    }

  
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  
  function _isxdigit(chr) {
      return (chr >= 48 && chr <= 57) ||
             (chr >= 97 && chr <= 102) ||
             (chr >= 65 && chr <= 70);
    }function _isxdigit_l(chr) {
      return _isxdigit(chr); // no locale support yet
    }

  
  function _isdigit(chr) {
      return chr >= 48 && chr <= 57;
    }function _isdigit_l(chr) {
      return _isdigit(chr); // no locale support yet
    }

  
  
  function __getFloat(text) {
      return /^[+-]?[0-9]*\.?[0-9]+([eE][+-]?[0-9]+)?/.exec(text);
    }function __scanString(format, get, unget, varargs) {
      if (!__scanString.whiteSpace) {
        __scanString.whiteSpace = {};
        __scanString.whiteSpace[32] = 1;
        __scanString.whiteSpace[9] = 1;
        __scanString.whiteSpace[10] = 1;
        __scanString.whiteSpace[11] = 1;
        __scanString.whiteSpace[12] = 1;
        __scanString.whiteSpace[13] = 1;
      }
      // Supports %x, %4x, %d.%d, %lld, %s, %f, %lf.
      // TODO: Support all format specifiers.
      format = Pointer_stringify(format);
      var soFar = 0;
      if (format.indexOf('%n') >= 0) {
        // need to track soFar
        var _get = get;
        get = function get() {
          soFar++;
          return _get();
        }
        var _unget = unget;
        unget = function unget() {
          soFar--;
          return _unget();
        }
      }
      var formatIndex = 0;
      var argsi = 0;
      var fields = 0;
      var argIndex = 0;
      var next;
  
      mainLoop:
      for (var formatIndex = 0; formatIndex < format.length;) {
        if (format[formatIndex] === '%' && format[formatIndex+1] == 'n') {
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          HEAP32[((argPtr)>>2)]=soFar;
          formatIndex += 2;
          continue;
        }
  
        if (format[formatIndex] === '%') {
          var nextC = format.indexOf('c', formatIndex+1);
          if (nextC > 0) {
            var maxx = 1;
            if (nextC > formatIndex+1) {
              var sub = format.substring(formatIndex+1, nextC);
              maxx = parseInt(sub);
              if (maxx != sub) maxx = 0;
            }
            if (maxx) {
              var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
              argIndex += Runtime.getAlignSize('void*', null, true);
              fields++;
              for (var i = 0; i < maxx; i++) {
                next = get();
                HEAP8[((argPtr++)|0)]=next;
                if (next === 0) return i > 0 ? fields : fields-1; // we failed to read the full length of this field
              }
              formatIndex += nextC - formatIndex + 1;
              continue;
            }
          }
        }
  
        // handle %[...]
        if (format[formatIndex] === '%' && format.indexOf('[', formatIndex+1) > 0) {
          var match = /\%([0-9]*)\[(\^)?(\]?[^\]]*)\]/.exec(format.substring(formatIndex));
          if (match) {
            var maxNumCharacters = parseInt(match[1]) || Infinity;
            var negateScanList = (match[2] === '^');
            var scanList = match[3];
  
            // expand "middle" dashs into character sets
            var middleDashMatch;
            while ((middleDashMatch = /([^\-])\-([^\-])/.exec(scanList))) {
              var rangeStartCharCode = middleDashMatch[1].charCodeAt(0);
              var rangeEndCharCode = middleDashMatch[2].charCodeAt(0);
              for (var expanded = ''; rangeStartCharCode <= rangeEndCharCode; expanded += String.fromCharCode(rangeStartCharCode++));
              scanList = scanList.replace(middleDashMatch[1] + '-' + middleDashMatch[2], expanded);
            }
  
            var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
            argIndex += Runtime.getAlignSize('void*', null, true);
            fields++;
  
            for (var i = 0; i < maxNumCharacters; i++) {
              next = get();
              if (negateScanList) {
                if (scanList.indexOf(String.fromCharCode(next)) < 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              } else {
                if (scanList.indexOf(String.fromCharCode(next)) >= 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              }
            }
  
            // write out null-terminating character
            HEAP8[((argPtr++)|0)]=0;
            formatIndex += match[0].length;
            
            continue;
          }
        }      
        // remove whitespace
        while (1) {
          next = get();
          if (next == 0) return fields;
          if (!(next in __scanString.whiteSpace)) break;
        }
        unget();
  
        if (format[formatIndex] === '%') {
          formatIndex++;
          var suppressAssignment = false;
          if (format[formatIndex] == '*') {
            suppressAssignment = true;
            formatIndex++;
          }
          var maxSpecifierStart = formatIndex;
          while (format[formatIndex].charCodeAt(0) >= 48 &&
                 format[formatIndex].charCodeAt(0) <= 57) {
            formatIndex++;
          }
          var max_;
          if (formatIndex != maxSpecifierStart) {
            max_ = parseInt(format.slice(maxSpecifierStart, formatIndex), 10);
          }
          var long_ = false;
          var half = false;
          var longLong = false;
          if (format[formatIndex] == 'l') {
            long_ = true;
            formatIndex++;
            if (format[formatIndex] == 'l') {
              longLong = true;
              formatIndex++;
            }
          } else if (format[formatIndex] == 'h') {
            half = true;
            formatIndex++;
          }
          var type = format[formatIndex];
          formatIndex++;
          var curr = 0;
          var buffer = [];
          // Read characters according to the format. floats are trickier, they may be in an unfloat state in the middle, then be a valid float later
          if (type == 'f' || type == 'e' || type == 'g' ||
              type == 'F' || type == 'E' || type == 'G') {
            next = get();
            while (next > 0 && (!(next in __scanString.whiteSpace)))  {
              buffer.push(String.fromCharCode(next));
              next = get();
            }
            var m = __getFloat(buffer.join(''));
            var last = m ? m[0].length : 0;
            for (var i = 0; i < buffer.length - last + 1; i++) {
              unget();
            }
            buffer.length = last;
          } else {
            next = get();
            var first = true;
            
            // Strip the optional 0x prefix for %x.
            if ((type == 'x' || type == 'X') && (next == 48)) {
              var peek = get();
              if (peek == 120 || peek == 88) {
                next = get();
              } else {
                unget();
              }
            }
            
            while ((curr < max_ || isNaN(max_)) && next > 0) {
              if (!(next in __scanString.whiteSpace) && // stop on whitespace
                  (type == 's' ||
                   ((type === 'd' || type == 'u' || type == 'i') && ((next >= 48 && next <= 57) ||
                                                                     (first && next == 45))) ||
                   ((type === 'x' || type === 'X') && (next >= 48 && next <= 57 ||
                                     next >= 97 && next <= 102 ||
                                     next >= 65 && next <= 70))) &&
                  (formatIndex >= format.length || next !== format[formatIndex].charCodeAt(0))) { // Stop when we read something that is coming up
                buffer.push(String.fromCharCode(next));
                next = get();
                curr++;
                first = false;
              } else {
                break;
              }
            }
            unget();
          }
          if (buffer.length === 0) return 0;  // Failure.
          if (suppressAssignment) continue;
  
          var text = buffer.join('');
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          switch (type) {
            case 'd': case 'u': case 'i':
              if (half) {
                HEAP16[((argPtr)>>1)]=parseInt(text, 10);
              } else if (longLong) {
                (tempI64 = [parseInt(text, 10)>>>0,(tempDouble=parseInt(text, 10),(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((argPtr)>>2)]=tempI64[0],HEAP32[(((argPtr)+(4))>>2)]=tempI64[1]);
              } else {
                HEAP32[((argPtr)>>2)]=parseInt(text, 10);
              }
              break;
            case 'X':
            case 'x':
              HEAP32[((argPtr)>>2)]=parseInt(text, 16);
              break;
            case 'F':
            case 'f':
            case 'E':
            case 'e':
            case 'G':
            case 'g':
            case 'E':
              // fallthrough intended
              if (long_) {
                HEAPF64[((argPtr)>>3)]=parseFloat(text);
              } else {
                HEAPF32[((argPtr)>>2)]=parseFloat(text);
              }
              break;
            case 's':
              var array = intArrayFromString(text);
              for (var j = 0; j < array.length; j++) {
                HEAP8[(((argPtr)+(j))|0)]=array[j];
              }
              break;
          }
          fields++;
        } else if (format[formatIndex].charCodeAt(0) in __scanString.whiteSpace) {
          next = get();
          while (next in __scanString.whiteSpace) {
            if (next <= 0) break mainLoop;  // End of input.
            next = get();
          }
          unget(next);
          formatIndex++;
        } else {
          // Not a specifier.
          next = get();
          if (format[formatIndex].charCodeAt(0) !== next) {
            unget(next);
            break mainLoop;
          }
          formatIndex++;
        }
      }
      return fields;
    }function _sscanf(s, format, varargs) {
      // int sscanf(const char *restrict s, const char *restrict format, ... );
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/scanf.html
      var index = 0;
      function get() { return HEAP8[(((s)+(index++))|0)]; };
      function unget() { index--; };
      return __scanString(format, get, unget, varargs);
    }

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  function _newlocale(mask, locale, base) {
      return _malloc(4);
    }

  function _freelocale(locale) {
      _free(locale);
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
      
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)]
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls(Math.floor(year/100),2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ),
          // or by no characters if no timezone is determinable. 
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich). 
          // If tm_isdst is zero, the standard time offset is used. 
          // If tm_isdst is greater than zero, the daylight savings time offset is used. 
          // If tm_isdst is negative, no characters are returned. 
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%Z': function(date) {
          // Replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists. [ tm_isdst]
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  
  
  function __parseInt64(str, endptr, base, min, max, unsign) {
      var isNegative = false;
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
  
      // Check for a plus/minus sign.
      if (HEAP8[(str)] == 45) {
        str++;
        isNegative = true;
      } else if (HEAP8[(str)] == 43) {
        str++;
      }
  
      // Find base.
      var ok = false;
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            ok = true; // we saw an initial zero, perhaps the entire thing is just "0"
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      var start = str;
  
      // Get digits.
      var chr;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          str++;
          ok = true;
        }
      }
  
      if (!ok) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return ((asm["setTempRet0"](0),0)|0);
      }
  
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str;
      }
  
      try {
        var numberString = isNegative ? '-'+Pointer_stringify(start, str - start) : Pointer_stringify(start, str - start);
        i64Math.fromString(numberString, finalBase, min, max, unsign);
      } catch(e) {
        ___setErrNo(ERRNO_CODES.ERANGE); // not quite correct
      }
  
      return ((asm["setTempRet0"](((HEAP32[(((tempDoublePtr)+(4))>>2)])|0)),((HEAP32[((tempDoublePtr)>>2)])|0))|0);
    }function _strtoull(str, endptr, base) {
      return __parseInt64(str, endptr, base, 0, '18446744073709551615', true);  // ULONG_MAX.
    }function _strtoull_l(str, endptr, base) {
      return _strtoull(str, endptr, base); // no locale support yet
    }

  
  function _strtoll(str, endptr, base) {
      return __parseInt64(str, endptr, base, '-9223372036854775808', '9223372036854775807');  // LLONG_MIN, LLONG_MAX.
    }function _strtoll_l(str, endptr, base) {
      return _strtoll(str, endptr, base); // no locale support yet
    }

  function _uselocale(locale) {
      return 0;
    }

  var _llvm_va_start=undefined;

  
  
  function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }function _asprintf(s, format, varargs) {
      return _sprintf(-s, format, varargs);
    }function _vasprintf(s, format, va_arg) {
      return _asprintf(s, format, HEAP32[((va_arg)>>2)]);
    }

  function _llvm_va_end() {}

  function _vsnprintf(s, n, format, va_arg) {
      return _snprintf(s, n, format, HEAP32[((va_arg)>>2)]);
    }

  function _vsscanf(s, format, va_arg) {
      return _sscanf(s, format, HEAP32[((va_arg)>>2)]);
    }

  var _fabs=Math_abs;

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }

  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }

  
  function _copysign(a, b) {
      return __reallyNegative(a) === __reallyNegative(b) ? a : -a;
    }var _copysignl=_copysign;

  
  function _fmod(x, y) {
      return x % y;
    }var _fmodl=_fmod;






FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
var GLctx; GL.init()
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + 5242880;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);

var Math_min = Math.min;
function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiid"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer){"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.ctlz_i8|0;var o=env._stdin|0;var p=env.__ZTVN10__cxxabiv117__class_type_infoE|0;var q=env.__ZTVN10__cxxabiv120__si_class_type_infoE|0;var r=env._stderr|0;var s=env._stdout|0;var t=env.__ZTISt9exception|0;var u=env.__ZTVN10__cxxabiv119__pointer_type_infoE|0;var v=env.___dso_handle|0;var w=+env.NaN;var x=+env.Infinity;var y=0;var z=0;var A=0;var B=0;var C=0,D=0,E=0,F=0,G=0.0,H=0,I=0,J=0,K=0.0;var L=0;var M=0;var N=0;var O=0;var P=0;var Q=0;var R=0;var S=0;var T=0;var U=0;var V=global.Math.floor;var W=global.Math.abs;var X=global.Math.sqrt;var Y=global.Math.pow;var Z=global.Math.cos;var _=global.Math.sin;var $=global.Math.tan;var aa=global.Math.acos;var ba=global.Math.asin;var ca=global.Math.atan;var da=global.Math.atan2;var ea=global.Math.exp;var fa=global.Math.log;var ga=global.Math.ceil;var ha=global.Math.imul;var ia=env.abort;var ja=env.assert;var ka=env.asmPrintInt;var la=env.asmPrintFloat;var ma=env.min;var na=env.invoke_viiiii;var oa=env.invoke_viiiiiii;var pa=env.invoke_i;var qa=env.invoke_vi;var ra=env.invoke_vii;var sa=env.invoke_iii;var ta=env.invoke_iiii;var ua=env.invoke_viiiiiid;var va=env.invoke_ii;var wa=env.invoke_viii;var xa=env.invoke_viiiiid;var ya=env.invoke_v;var za=env.invoke_iiiiiiiii;var Aa=env.invoke_viiiiiiiii;var Ba=env.invoke_viiiiiiii;var Ca=env.invoke_viiiiii;var Da=env.invoke_iiiii;var Ea=env.invoke_iiiiii;var Fa=env.invoke_viiii;var Ga=env._llvm_lifetime_end;var Ha=env._lseek;var Ia=env._glClearColor;var Ja=env.__scanString;var Ka=env._fclose;var La=env._pthread_mutex_lock;var Ma=env.___cxa_end_catch;var Na=env._glLinkProgram;var Oa=env._strtoull;var Pa=env._glBindTexture;var Qa=env._fflush;var Ra=env.__isLeapYear;var Sa=env._fwrite;var Ta=env._send;var Ua=env.__ZSt18uncaught_exceptionv;var Va=env._glCompileShader;var Wa=env._isspace;var Xa=env._read;var Ya=env._isxdigit_l;var Za=env._fileno;var _a=env._fsync;var $a=env._glGenTextures;var ab=env._newlocale;var bb=env.___gxx_personality_v0;var cb=env._pthread_cond_wait;var db=env.___cxa_rethrow;var eb=env._fmod;var fb=env.___resumeException;var gb=env._glCreateShader;var hb=env._glUniform1i;var ib=env._llvm_va_end;var jb=env._vsscanf;var kb=env._snprintf;var lb=env._SDL_RWFromFile;var mb=env._fgetc;var nb=env._glGetProgramiv;var ob=env._glVertexAttribPointer;var pb=env.__getFloat;var qb=env._atexit;var rb=env.___cxa_free_exception;var sb=env._glGetUniformLocation;var tb=env._close;var ub=env._fopen;var vb=env.___setErrNo;var wb=env.___cxa_guard_abort;var xb=env._isxdigit;var yb=env._ftell;var zb=env._glDeleteProgram;var Ab=env._exit;var Bb=env._sprintf;var Cb=env.___ctype_b_loc;var Db=env._freelocale;var Eb=env._glAttachShader;var Fb=env._catopen;var Gb=env._catgets;var Hb=env._asprintf;var Ib=env.___cxa_is_number_type;var Jb=env.___cxa_does_inherit;var Kb=env.___ctype_toupper_loc;var Lb=env.___cxa_guard_acquire;var Mb=env.___cxa_begin_catch;var Nb=env._emscripten_memcpy_big;var Ob=env._recv;var Pb=env.__parseInt64;var Qb=env.__ZNKSt9exception4whatEv;var Rb=env._SDL_GL_SwapBuffers;var Sb=env._glBufferSubData;var Tb=env.__ZNSt9exceptionD2Ev;var Ub=env._SDL_Init;var Vb=env._mkport;var Wb=env._copysign;var Xb=env._glGetShaderiv;var Yb=env.__exit;var Zb=env._SDL_FreeRW;var _b=env._IMG_Quit;var $b=env._strftime;var ac=env.___cxa_throw;var bc=env._toupper;var cc=env._glShaderSource;var dc=env._pread;var ec=env._SDL_SetVideoMode;var fc=env._SDL_LockSurface;var gc=env._open;var hc=env._glDrawArrays;var ic=env._strtoull_l;var jc=env.__arraySum;var kc=env._sysconf;var lc=env._SDL_PollEvent;var mc=env._SDL_GetTicks;var nc=env._strtoll_l;var oc=env._glClear;var pc=env._glActiveTexture;var qc=env._glEnableVertexAttribArray;var rc=env._glBindBuffer;var sc=env.___cxa_find_matching_catch;var tc=env._SDL_GetError;var uc=env._glBufferData;var vc=env.__formatString;var wc=env._pthread_cond_broadcast;var xc=env.__ZSt9terminatev;var yc=env._pthread_mutex_unlock;var zc=env.___cxa_call_unexpected;var Ac=env._sbrk;var Bc=env.___errno_location;var Cc=env._strerror;var Dc=env._catclose;var Ec=env._llvm_lifetime_start;var Fc=env._SDL_Quit;var Gc=env.___cxa_guard_release;var Hc=env._ungetc;var Ic=env._IMG_Load;var Jc=env._SDL_EnableUNICODE;var Kc=env._uselocale;var Lc=env._vsnprintf;var Mc=env._glUseProgram;var Nc=env._sscanf;var Oc=env._glTexImage2D;var Pc=env.___assert_fail;var Qc=env._fread;var Rc=env._IMG_Init;var Sc=env._glGetShaderInfoLog;var Tc=env._strftime_l;var Uc=env._abort;var Vc=env._fprintf;var Wc=env._isdigit;var Xc=env._strtoll;var Yc=env.__addDays;var Zc=env._fabs;var _c=env.__reallyNegative;var $c=env._fseek;var ad=env._write;var bd=env._glGenBuffers;var cd=env._glGetAttribLocation;var dd=env.___cxa_allocate_exception;var ed=env._glDeleteShader;var fd=env._glCreateProgram;var gd=env._ceilf;var hd=env._vasprintf;var id=env._glViewport;var jd=env._emscripten_set_main_loop;var kd=env._llvm_invariant_start;var ld=env._IMG_Load_RW;var md=env._isdigit_l;var nd=env.___ctype_tolower_loc;var od=env._llvm_eh_typeid_for;var pd=env._glUniformMatrix4fv;var qd=env._pwrite;var rd=env._strerror_r;var sd=env._glTexParameteri;var td=env._SDL_FreeSurface;var ud=env._time;var vd=0.0;
// EMSCRIPTEN_START_FUNCS
function Lh(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0;h=i;i=i+48|0;j=d;d=i;i=i+16|0;c[d>>2]=c[j>>2];c[d+4>>2]=c[j+4>>2];c[d+8>>2]=c[j+8>>2];c[d+12>>2]=c[j+12>>2];j=e;e=i;i=i+8|0;c[e>>2]=c[j>>2];c[e+4>>2]=c[j+4>>2];j=f;f=i;i=i+8|0;c[f>>2]=c[j>>2];c[f+4>>2]=c[j+4>>2];j=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[j>>2];j=h|0;k=h+16|0;l=h+24|0;m=h+32|0;n=h+40|0;o=i;i=i+16|0;p=i;i=i+16|0;q=i;i=i+16|0;s=i;i=i+8|0;t=i;i=i+8|0;u=i;i=i+8|0;v=i;i=i+8|0;w=v;x=i;i=i+8|0;y=x;z=i;i=i+8|0;A=z;B=i;i=i+8|0;C=B;D=i;i=i+16|0;E=i;i=i+8|0;F=E;G=i;i=i+8|0;H=G;I=b|0;J=b+8|0;K=b+12|0;eu(b|0,0,16)|0;a[I]=0;L=f;f=c[L>>2]|0;M=c[L+4>>2]|0;N=f;O=M;P=d;Q=d|0;R=c[Q>>2]|0;S=d+4|0;T=c[S>>2]|0;U=d+8|0;V=d+12|0;d=(c[U>>2]|0)+R|0;W=(c[V>>2]|0)+T|0;if(!((O|0)>=(T|0)&(N|0)>=(R|0)&(N|0)<(d|0)&(O|0)<(W|0))){i=h;return}O=e;e=c[O>>2]|0;N=c[O+4>>2]|0;X=e;Y=N;if(!((Y|0)>=(T|0)&(X|0)>=(R|0)&(X|0)<(d|0)&(Y|0)<(W|0))){i=h;return}c[n>>2]=e;c[n+4>>2]=N;if((di(g,n)|0)==0){i=h;return}n=o;c[n>>2]=c[P>>2];c[n+4>>2]=c[P+4>>2];c[n+8>>2]=c[P+8>>2];c[n+12>>2]=c[P+12>>2];of(26848,o);o=p|0;c[o>>2]=0;P=p+4|0;c[P>>2]=0;n=p+8|0;c[n>>2]=0;c[s>>2]=e;c[s+4>>2]=N;c[t>>2]=f;c[t+4>>2]=M;c[q>>2]=mf(s,t,0)|0;c[q+4>>2]=0;t=q+8|0;c[t>>2]=e;c[t+4>>2]=N;t=c[P>>2]|0;if(t>>>0<(c[n>>2]|0)>>>0){if((t|0)==0){Z=0}else{s=t;t=q;c[s>>2]=c[t>>2];c[s+4>>2]=c[t+4>>2];c[s+8>>2]=c[t+8>>2];c[s+12>>2]=c[t+12>>2];Z=c[P>>2]|0}t=Z+16|0;c[P>>2]=t;_=t}else{ei(p|0,q);_=c[P>>2]|0}q=c[o>>2]|0;t=_-q|0;Z=t>>4;s=e;M=N;do{if((t|0)>16){f=(Z-2|0)/2|0;W=q+(f<<4)|0;Y=_-16|0;d=c[W>>2]|0;X=c[Y>>2]|0;if((d|0)==(X|0)){R=c[_-16+4>>2]|0;if((c[q+(f<<4)+4>>2]|0)<(R|0)){$=R}else{aa=N;ba=e;break}}else{if(!(d>>>0>X>>>0)){aa=N;ba=e;break}$=c[_-16+4>>2]|0}d=_-16+8|0;R=c[d>>2]|0;T=c[d+4>>2]|0;d=Y;Y=W;c[d>>2]=c[Y>>2];c[d+4>>2]=c[Y+4>>2];c[d+8>>2]=c[Y+8>>2];c[d+12>>2]=c[Y+12>>2];a:do{if((Z-1|0)>>>0<3>>>0){ca=W}else{Y=f;d=W;while(1){da=(Y-1|0)/2|0;ea=q+(da<<4)|0;fa=c[ea>>2]|0;if((fa|0)==(X|0)){if((c[q+(da<<4)+4>>2]|0)>=($|0)){ca=d;break a}}else{if(!(fa>>>0>X>>>0)){ca=d;break a}}fa=d;ga=ea;c[fa>>2]=c[ga>>2];c[fa+4>>2]=c[ga+4>>2];c[fa+8>>2]=c[ga+8>>2];c[fa+12>>2]=c[ga+12>>2];if(Y>>>0<3>>>0){ca=ea;break}else{Y=da;d=ea}}}}while(0);c[ca>>2]=X;c[ca+4>>2]=$;W=ca+8|0;c[W>>2]=R;c[W+4>>2]=T;aa=c[O+4>>2]|0;ba=c[O>>2]|0}else{aa=M;ba=s}}while(0);s=26868;M=ba-(c[s>>2]|0)|0;ba=aa-(c[s+4>>2]|0)|0;s=26860;aa=c[s>>2]|0;if((ba|M|0)>-1&(M|0)<(aa|0)?(ba|0)<(c[s+4>>2]|0):0){s=(ha(ba,aa)|0)+M|0;M=c[6712]|0;aa=M+(s*24|0)|0;c[aa>>2]=0;a[M+(s*24|0)+20|0]=1;qf(26848,aa);aa=c[o>>2]|0;s=c[P>>2]|0;b:do{if((aa|0)!=(s|0)){M=j;ba=k|0;ca=l|0;$=D|0;q=D+4|0;Z=D+8|0;_=D;e=p|0;N=1;t=aa;W=s;c:while(1){f=t+8|0;ia=c[f>>2]|0;ja=c[f+4>>2]|0;c[u>>2]=ia;c[u+4>>2]=ja;f=W-t|0;if((f|0)>16){d=W-16|0;Y=t;c[M>>2]=c[Y>>2];c[M+4>>2]=c[Y+4>>2];c[M+8>>2]=c[Y+8>>2];c[M+12>>2]=c[Y+12>>2];ea=d;c[Y>>2]=c[ea>>2];c[Y+4>>2]=c[ea+4>>2];c[Y+8>>2]=c[ea+8>>2];c[Y+12>>2]=c[ea+12>>2];c[ea>>2]=c[M>>2];c[ea+4>>2]=c[M+4>>2];c[ea+8>>2]=c[M+8>>2];c[ea+12>>2]=c[M+12>>2];c[ba>>2]=t;c[ca>>2]=d;fi(k,l,m,(f>>4)-1|0);ka=c[P>>2]|0}else{ka=W}c[P>>2]=ka-16;la=ia;ma=ja;na=c[L>>2]|0;oa=c[L+4>>2]|0;if((la|0)==(na|0)&(ma|0)==(oa|0)){pa=36;break}f=26868;d=la-(c[f>>2]|0)|0;ea=ma-(c[f+4>>2]|0)|0;f=26860;Y=c[f>>2]|0;if(!((ea|d|0)>-1&(d|0)<(Y|0))){pa=65;break}if((ea|0)>=(c[f+4>>2]|0)){pa=65;break}f=(ha(ea,Y)|0)+d|0;d=c[6712]|0;Y=d+(f*24|0)|0;rf(26848,Y);tf(26848,Y);if((a[d+(f*24|0)+20|0]|0)==0){pa=71;break}f=Y|0;Y=N;d=-1;while(1){ea=Y;da=-1;while(1){do{if(((da|d|0)!=0?(ga=c[u>>2]|0,fa=c[u+4>>2]|0,qa=ga+da|0,ra=fa+d|0,sa=qa|0,ta=ra|0,c[B>>2]=sa,c[B+4>>2]=ta,ua=di(g,C)|0,va=c[Q>>2]|0,wa=c[S>>2]|0,(ra|0)>=(wa|0)&(qa|0)>=(va|0)&(qa|0)<((c[U>>2]|0)+va|0)):0)?!((ua|0)==0|(ra|0)>=((c[V>>2]|0)+wa|0)):0){wa=c[f>>2]|0;va=(ha(nf(da,d)|0,ua)|0)+wa|0;wa=26868;ua=qa-(c[wa>>2]|0)|0;qa=ra-(c[wa+4>>2]|0)|0;wa=26860;ra=c[wa>>2]|0;if(!((qa|ua|0)>-1&(ua|0)<(ra|0))){pa=81;break c}if((qa|0)>=(c[wa+4>>2]|0)){pa=81;break c}wa=(ha(qa,ra)|0)+ua|0;ua=c[6712]|0;ra=ua+(wa*24|0)|0;if(!(sf(26848,ra)|0)?!(pf(26848,ra)|0):0){xa=0}else{if((a[ua+(wa*24|0)+20|0]|0)==0){pa=88;break c}xa=c[ra>>2]|0}qa=va>>>0<xa>>>0;if((qa|(sf(26848,ra)|0)^1?qa|(pf(26848,ra)|0)^1:0)?(qa=ua+(wa*24|0)+12|0,c[qa>>2]=ga,c[qa+4>>2]=fa,fa=ra|0,c[fa>>2]=va,a[ua+(wa*24|0)+20|0]=1,!(pf(26848,ra)|0)):0){qf(26848,ra);c[E>>2]=sa;c[E+4>>2]=ta;ra=c[L+4>>2]|0;c[G>>2]=c[L>>2];c[G+4>>2]=ra;c[$>>2]=mf(F,H,c[fa>>2]|0)|0;fa=ea+1|0;c[q>>2]=ea;c[Z>>2]=sa;c[Z+4>>2]=ta;ta=c[P>>2]|0;if(ta>>>0<(c[n>>2]|0)>>>0){if((ta|0)==0){ya=0}else{sa=ta;c[sa>>2]=c[_>>2];c[sa+4>>2]=c[_+4>>2];c[sa+8>>2]=c[_+8>>2];c[sa+12>>2]=c[_+12>>2];ya=c[P>>2]|0}sa=ya+16|0;c[P>>2]=sa;za=sa}else{ei(e,D);za=c[P>>2]|0}sa=c[o>>2]|0;ta=za-sa|0;ra=ta>>4;if((ta|0)>16){ta=(ra-2|0)/2|0;wa=sa+(ta<<4)|0;ua=za-16|0;va=c[wa>>2]|0;qa=c[ua>>2]|0;if((va|0)==(qa|0)){ga=c[za-16+4>>2]|0;if((c[sa+(ta<<4)+4>>2]|0)<(ga|0)){Aa=ga}else{Ba=fa;break}}else{if(!(va>>>0>qa>>>0)){Ba=fa;break}Aa=c[za-16+4>>2]|0}va=za-16+8|0;ga=c[va>>2]|0;Ca=c[va+4>>2]|0;va=ua;ua=wa;c[va>>2]=c[ua>>2];c[va+4>>2]=c[ua+4>>2];c[va+8>>2]=c[ua+8>>2];c[va+12>>2]=c[ua+12>>2];d:do{if((ra-1|0)>>>0<3>>>0){Da=wa}else{ua=ta;va=wa;while(1){Ea=(ua-1|0)/2|0;Fa=sa+(Ea<<4)|0;Ga=c[Fa>>2]|0;if((Ga|0)==(qa|0)){if((c[sa+(Ea<<4)+4>>2]|0)>=(Aa|0)){Da=va;break d}}else{if(!(Ga>>>0>qa>>>0)){Da=va;break d}}Ga=va;Ha=Fa;c[Ga>>2]=c[Ha>>2];c[Ga+4>>2]=c[Ha+4>>2];c[Ga+8>>2]=c[Ha+8>>2];c[Ga+12>>2]=c[Ha+12>>2];if(ua>>>0<3>>>0){Da=Fa;break}else{ua=Ea;va=Fa}}}}while(0);c[Da>>2]=qa;c[Da+4>>2]=Aa;sa=Da+8|0;c[sa>>2]=ga;c[sa+4>>2]=Ca;Ba=fa}else{Ba=fa}}else{Ba=ea}}else{Ba=ea}}while(0);da=da+1|0;if((da|0)>=2){break}else{ea=Ba}}d=d+1|0;if((d|0)>=2){break}else{Y=Ba}}Y=c[o>>2]|0;d=c[P>>2]|0;if((Y|0)==(d|0)){Ia=Y;break b}else{N=Ba;t=Y;W=d}}if((pa|0)==36){W=b+4|0;t=c[O>>2]|0;N=c[O+4>>2]|0;c[v>>2]=t;c[v+4>>2]=N;c[x>>2]=na;c[x+4>>2]=oa;e=Ve(w,y)|0;_=e<<1;Z=W|0;q=c[Z>>2]|0;$=q;if((c[K>>2]|0)-$>>3>>>0<_>>>0){ca=c[J>>2]|0;ba=ca-$>>3;if((e|0)==0){Ja=0;Ka=q;La=ca}else{ca=Lt(e<<4)|0;Ja=ca;Ka=c[Z>>2]|0;La=c[J>>2]|0}ca=La-Ka|0;e=Ja+(ba-(ca>>3)<<3)|0;q=Ka;du(e|0,q|0,ca)|0;c[Z>>2]=e;c[J>>2]=Ja+(ba<<3);c[K>>2]=Ja+(_<<3);if((Ka|0)!=0){Nt(q)}}c[z>>2]=ia;c[z+4>>2]=ja;q=t;t=N;e:do{if((ma|0)!=(t|0)|(la|0)!=(q|0)){N=ja;_=ia;while(1){ba=c[J>>2]|0;if((ba|0)==(c[K>>2]|0)){ef(W,A)}else{if((ba|0)==0){Ma=0}else{e=ba;c[e>>2]=_;c[e+4>>2]=N;Ma=c[J>>2]|0}c[J>>2]=Ma+8}e=26868;ba=_-(c[e>>2]|0)|0;Z=N-(c[e+4>>2]|0)|0;e=26860;ca=c[e>>2]|0;if(!((Z|ba|0)>-1&(ba|0)<(ca|0))){break}if((Z|0)>=(c[e+4>>2]|0)){break}e=(ha(Z,ca)|0)+ba|0;ba=(c[6712]|0)+(e*24|0)+12|0;_=c[ba>>2]|0;N=c[ba+4>>2]|0;c[z>>2]=_;c[z+4>>2]=N;if(!((N|0)!=(t|0)|(_|0)!=(q|0))){break e}}Vc(c[r>>2]|0,1896,(Na=i,i=i+24|0,c[Na>>2]=3736,c[Na+8>>2]=85,c[Na+16>>2]=3432,Na)|0)|0;i=Na;Uc()}}while(0);a[I]=1;Ia=c[o>>2]|0;break}else if((pa|0)==65){Vc(c[r>>2]|0,1896,(Na=i,i=i+24|0,c[Na>>2]=3736,c[Na+8>>2]=85,c[Na+16>>2]=3432,Na)|0)|0;i=Na;Uc()}else if((pa|0)==71){Vc(c[r>>2]|0,1896,(Na=i,i=i+24|0,c[Na>>2]=3736,c[Na+8>>2]=190,c[Na+16>>2]=3576,Na)|0)|0;i=Na;Uc()}else if((pa|0)==81){Vc(c[r>>2]|0,1896,(Na=i,i=i+24|0,c[Na>>2]=3736,c[Na+8>>2]=85,c[Na+16>>2]=3432,Na)|0)|0;i=Na;Uc()}else if((pa|0)==88){Vc(c[r>>2]|0,1896,(Na=i,i=i+24|0,c[Na>>2]=3736,c[Na+8>>2]=219,c[Na+16>>2]=3496,Na)|0)|0;i=Na;Uc()}}else{Ia=aa}}while(0);if((Ia|0)==0){i=h;return}aa=c[P>>2]|0;if((aa|0)!=(Ia|0)){c[P>>2]=aa+(~((aa-16-Ia|0)>>>4)<<4)}Nt(Ia);i=h;return}Vc(c[r>>2]|0,1896,(Na=i,i=i+24|0,c[Na>>2]=3736,c[Na+8>>2]=85,c[Na+16>>2]=3432,Na)|0)|0;i=Na;Uc()}function Mh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+24|0;e=b;b=i;i=i+8|0;c[b>>2]=c[e>>2];c[b+4>>2]=c[e+4>>2];e=d|0;f=d+8|0;g=d+16|0;h=b;b=c[h>>2]|0;j=c[h+4>>2]|0;c[g>>2]=b;c[g+4>>2]=j;if(!(fh(a,g)|0)){k=0;i=d;return k|0}g=a|0;h=c[g>>2]|0;l=c[h>>2]|0;m=c[h+4>>2]|0;h=a-24|0;a=c[h>>2]|0;c[e>>2]=b;c[e+4>>2]=j;if(!(ih(a,h,e)|0)){Vc(c[r>>2]|0,1896,(e=i,i=i+24|0,c[e>>2]=120,c[e+8>>2]=25,c[e+16>>2]=4e3,e)|0)|0;i=e;Uc();return 0}e=c[a+48>>2]|0;j=(ha(e,m)|0)+l|0;b=c[a+36>>2]|0;a=b+(j<<2)|0;j=c[g>>2]|0;g=b+((ha(c[j+4>>2]|0,e)|0)+(c[j>>2]|0)<<2)|0;j=c[a>>2]|0;c[a>>2]=c[g>>2];c[g>>2]=j;c[f>>2]=l;c[f+4>>2]=m;Gh(h,f);k=1;i=d;return k|0}function Nh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=(c[d>>2]|0)-f>>2;h=g+1|0;if(h>>>0>1073741823>>>0){Ep(a)}i=a+8|0;a=(c[i>>2]|0)-f|0;if(a>>2>>>0<536870911>>>0){f=a>>1;a=f>>>0<h>>>0?h:f;if((a|0)==0){j=0;k=0}else{l=a;m=5}}else{l=1073741823;m=5}if((m|0)==5){j=Lt(l<<2)|0;k=l}l=j+(g<<2)|0;if((l|0)!=0){c[l>>2]=c[b>>2]}b=c[e>>2]|0;l=(c[d>>2]|0)-b|0;m=j+(g-(l>>2)<<2)|0;g=b;du(m|0,g|0,l)|0;c[e>>2]=m;c[d>>2]=j+(h<<2);c[i>>2]=j+(k<<2);if((b|0)==0){return}Nt(g);return}function Oh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0;f=i;i=i+120|0;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[g>>2];g=f|0;h=f+8|0;j=f+24|0;k=f+40|0;l=f+72|0;m=f+88|0;n=f+104|0;o=h+4|0;c[o>>2]=0;p=h+8|0;c[p>>2]=0;q=h+4|0;s=q;t=h|0;c[t>>2]=s;u=c[d>>2]|0;d=c[e>>2]|0;if((u|0)==(d|0)){eu(b|0,0,12)|0;v=h|0;w=c[o>>2]|0;x=w;ii(v,x);i=f;return}e=j;y=j+1|0;z=m;A=m+12|0;B=k;C=l;D=k+12|0;E=k+24|0;F=h|0;G=g|0;H=g+4|0;I=j+8|0;J=j+4|0;K=m+8|0;L=k+8|0;M=k+20|0;N=m+1|0;O=m|0;P=m+4|0;Q=j|0;R=u;a:while(1){u=c[R>>2]|0;S=c[(c[u+12>>2]|0)+8>>2]|0;T=fu(S|0)|0;if(T>>>0>4294967279>>>0){U=5;break}if(T>>>0<11>>>0){V=T<<1&255;a[e]=V;W=y;X=V}else{V=T+16&-16;Y=Lt(V)|0;c[I>>2]=Y;Z=V|1;c[Q>>2]=Z;c[J>>2]=T;W=Y;X=Z&255}du(W|0,S|0,T)|0;a[W+T|0]=0;gi(l,u,3);if((X&1)==0){c[z>>2]=c[e>>2];c[z+4>>2]=c[e+4>>2];c[z+8>>2]=c[e+8>>2]}else{u=c[I>>2]|0;T=c[J>>2]|0;if(T>>>0>4294967279>>>0){U=15;break}if(T>>>0<11>>>0){a[z]=T<<1;_=N}else{S=T+16&-16;Z=Lt(S)|0;c[K>>2]=Z;c[O>>2]=S|1;c[P>>2]=T;_=Z}du(_|0,u|0,T)|0;a[_+T|0]=0}c[A>>2]=1;c[B>>2]=c[C>>2];c[B+4>>2]=c[C+4>>2];c[B+8>>2]=c[C+8>>2];eu(C|0,0,12)|0;c[D>>2]=c[z>>2];c[D+4>>2]=c[z+4>>2];c[D+8>>2]=c[z+8>>2];eu(z|0,0,12)|0;c[E>>2]=1;hi(g,F,k);T=c[G>>2]|0;u=a[H]|0;if(!((a[D]&1)==0)){Nt(c[M>>2]|0)}if(!((a[B]&1)==0)){Nt(c[L>>2]|0)}if(u<<24>>24==0){u=T+28|0;Z=a[u]|0;S=(Z&1)==0;if(S){$=(Z&255)>>>1}else{$=c[T+32>>2]|0}Z=(X&1)==0;if(Z){aa=(X&255)>>>1}else{aa=c[J>>2]|0}if(($|0)!=(aa|0)){U=43;break}if(S){ba=u+1|0}else{ba=c[T+36>>2]|0}u=Z?y:c[I>>2]|0;if(S){if(($|0)!=0){S=$;Z=ba;Y=u;while(1){if((a[Z]|0)!=(a[Y]|0)){U=43;break a}S=S-1|0;if((S|0)==0){break}else{Z=Z+1|0;Y=Y+1|0}}}}else{if(($t(ba,u,$)|0)!=0){U=43;break}}Y=T+40|0;c[Y>>2]=(c[Y>>2]|0)+1}if(!((X&1)==0)){Nt(c[I>>2]|0)}Y=R+4|0;if((Y|0)==(d|0)){U=65;break}else{R=Y}}if((U|0)==5){Dk(j)}else if((U|0)==15){Dk(m)}else if((U|0)==43){Vc(c[r>>2]|0,1896,(m=i,i=i+24|0,c[m>>2]=2016,c[m+8>>2]=31,c[m+16>>2]=1960,m)|0)|0;i=m;Uc()}else if((U|0)==65){U=c[t>>2]|0;m=b;eu(m|0,0,12)|0;if((U|0)==(s|0)){v=h|0;w=c[o>>2]|0;x=w;ii(v,x);i=f;return}s=b+1|0;j=b+4|0;R=b+8|0;d=b|0;I=n;X=n+1|0;$=n+8|0;ba=n+4|0;y=q;q=U;aa=U;while(1){if((q|0)!=(aa|0)){if((c[p>>2]|0)>>>0>2>>>0){Pk(b,44)}Pk(b,32);U=c[q+4>>2]|0;if((U|0)==0){J=q|0;while(1){L=c[J+8>>2]|0;if((c[L>>2]|0)==(J|0)){ca=L;break}else{J=L}}}else{J=U;while(1){T=c[J>>2]|0;if((T|0)==0){ca=J;break}else{J=T}}}if((ca|0)==(y|0)){Ok(b,1928)|0}}J=c[q+40>>2]|0;do{if((J|0)==1){U=q+16|0;T=a[U]|0;if((T&1)==0){da=(T&255)>>>1;ea=U+1|0}else{da=c[q+20>>2]|0;ea=c[q+24>>2]|0}U=a[m]|0;if((U&1)==0){fa=10;ga=U}else{U=c[d>>2]|0;fa=(U&-2)-1|0;ga=U&255}U=(ga&1)==0;if(U){ha=(ga&255)>>>1}else{ha=c[j>>2]|0}if((fa-ha|0)>>>0<da>>>0){Qk(b,fa,da-fa+ha|0,ha,ha,0,da,ea);break}if((da|0)!=0){if(U){ia=s}else{ia=c[R>>2]|0}du(ia+ha|0,ea|0,da)|0;U=ha+da|0;if((a[m]&1)==0){a[m]=U<<1}else{c[j>>2]=U}a[ia+U|0]=0}}else{al(n,J);U=a[I]|0;if((U&1)==0){ja=(U&255)>>>1;ka=X}else{ja=c[ba>>2]|0;ka=c[$>>2]|0}U=a[m]|0;if((U&1)==0){la=10;ma=U}else{U=c[d>>2]|0;la=(U&-2)-1|0;ma=U&255}U=(ma&1)==0;if(U){na=(ma&255)>>>1}else{na=c[j>>2]|0}if(!((la-na|0)>>>0<ja>>>0)){if((ja|0)!=0){if(U){oa=s}else{oa=c[R>>2]|0}du(oa+na|0,ka|0,ja)|0;U=na+ja|0;if((a[m]&1)==0){a[m]=U<<1}else{c[j>>2]=U}a[oa+U|0]=0}}else{Qk(b,la,ja-la+na|0,na,na,0,ja,ka)}if(!((a[I]&1)==0)){Nt(c[$>>2]|0)}Pk(b,32);U=q+28|0;T=a[U]|0;if((T&1)==0){pa=(T&255)>>>1;qa=U+1|0}else{pa=c[q+32>>2]|0;qa=c[q+36>>2]|0}U=a[m]|0;if((U&1)==0){ra=10;sa=U}else{U=c[d>>2]|0;ra=(U&-2)-1|0;sa=U&255}U=(sa&1)==0;if(U){ta=(sa&255)>>>1}else{ta=c[j>>2]|0}if((ra-ta|0)>>>0<pa>>>0){Qk(b,ra,pa-ra+ta|0,ta,ta,0,pa,qa);break}if((pa|0)!=0){if(U){ua=s}else{ua=c[R>>2]|0}du(ua+ta|0,qa|0,pa)|0;U=ta+pa|0;if((a[m]&1)==0){a[m]=U<<1}else{c[j>>2]=U}a[ua+U|0]=0}}}while(0);J=c[q+4>>2]|0;if((J|0)==0){U=q|0;while(1){T=c[U+8>>2]|0;if((c[T>>2]|0)==(U|0)){va=T;break}else{U=T}}}else{U=J;while(1){T=c[U>>2]|0;if((T|0)==0){va=U;break}else{U=T}}}if((va|0)==(y|0)){break}q=va;aa=c[t>>2]|0}v=h|0;w=c[o>>2]|0;x=w;ii(v,x);i=f;return}}function Ph(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=g|0;a[k]=0;c[g+4>>2]=b;l=b;m=c[(c[l>>2]|0)-12>>2]|0;n=b;if((c[n+(m+16)>>2]|0)==0){o=c[n+(m+72)>>2]|0;if((o|0)!=0){Nl(o)|0}a[k]=1;k=a[d]|0;o=(k&1)==0;if(o){p=(k&255)>>>1}else{p=c[d+4>>2]|0}k=c[(c[l>>2]|0)-12>>2]|0;c[h>>2]=c[n+(k+24)>>2];if(o){o=d;if((c[n+(k+4)>>2]&176|0)==32){q=o+1+p|0}else{q=o+1|0}r=d+1|0;s=d+1|0;t=q}else{q=c[d+8>>2]|0;if((c[n+(k+4)>>2]&176|0)==32){u=q+p|0}else{u=q}r=c[d+8>>2]|0;s=c[d+8>>2]|0;t=u}u=n+k|0;d=n+(k+76)|0;k=c[d>>2]|0;if((k|0)==-1){q=u;dl(f,q);o=Pp(f,26144)|0;m=Bd[c[(c[o>>2]|0)+28>>2]&127](o,32)|0;Np(f);c[d>>2]=m<<24>>24;v=m;w=q}else{v=k&255;w=u}re(j,h,s,t,r+p|0,w,v);if((c[j>>2]|0)==0){j=c[(c[l>>2]|0)-12>>2]|0;bl(n+j|0,c[n+(j+16)>>2]|5)}}Yl(g);i=e;return b|0}function Qh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0.0,D=0.0,E=0,F=0,G=0,H=0;f=i;i=i+16|0;h=f|0;j=f+8|0;k=e+8|0;l=c[k>>2]|0;m=e+4|0;c[m>>2]=l;n=d+4|0;o=c[n>>2]|0;p=(o|0)==0;a:do{if(!p){q=o-1|0;r=(q&o|0)==0;if(r){s=q&l}else{s=(l>>>0)%(o>>>0)|0}t=c[(c[d>>2]|0)+(s<<2)>>2]|0;if((t|0)!=0){u=h|0;v=j|0;if(r){r=t;while(1){w=c[r>>2]|0;if((w|0)==0){x=s;break a}if((c[w+4>>2]&q|0)!=(s|0)){x=s;break a}c[u>>2]=c[w+8>>2];c[v>>2]=c[k>>2];if(zi(h,j)|0){y=w;z=0;break}else{r=w}}A=b|0;c[A>>2]=y;B=b+4|0;a[B]=z;i=f;return}else{r=t;while(1){q=c[r>>2]|0;if((q|0)==0){x=s;break a}if((((c[q+4>>2]|0)>>>0)%(o>>>0)|0|0)!=(s|0)){x=s;break a}c[u>>2]=c[q+8>>2];c[v>>2]=c[k>>2];if(zi(h,j)|0){y=q;z=0;break}else{r=q}}A=b|0;c[A>>2]=y;B=b+4|0;a[B]=z;i=f;return}}else{x=s}}else{x=0}}while(0);s=d+12|0;C=+(((c[s>>2]|0)+1|0)>>>0>>>0);D=+g[d+16>>2];do{if(C>+(o>>>0>>>0)*D|p){if(o>>>0>2>>>0){E=(o-1&o|0)==0|0}else{E=0}j=(E|o<<1)^1;h=~~+ga(C/D);ji(d,j>>>0<h>>>0?h:j);j=c[n>>2]|0;h=c[m>>2]|0;k=j-1|0;if((k&j|0)==0){F=k&h;G=j;break}else{F=(h>>>0)%(j>>>0)|0;G=j;break}}else{F=x;G=o}}while(0);o=d|0;x=c[(c[o>>2]|0)+(F<<2)>>2]|0;if((x|0)==0){m=d+8|0;d=m|0;n=e|0;c[n>>2]=c[d>>2];c[d>>2]=e;c[(c[o>>2]|0)+(F<<2)>>2]=m;m=c[n>>2]|0;if((m|0)!=0){n=c[m+4>>2]|0;m=G-1|0;if((m&G|0)==0){H=n&m}else{H=(n>>>0)%(G>>>0)|0}c[(c[o>>2]|0)+(H<<2)>>2]=e}}else{H=x|0;c[e>>2]=c[H>>2];c[H>>2]=e}c[s>>2]=(c[s>>2]|0)+1;y=e;z=1;A=b|0;c[A>>2]=y;B=b+4|0;a[B]=z;i=f;return}function Rh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=b+4|0;f=b|0;g=c[f>>2]|0;h=((c[e>>2]|0)-g|0)/12|0;i=h+1|0;if(i>>>0>357913941>>>0){Ep(b)}j=b+8|0;b=((c[j>>2]|0)-g|0)/12|0;if(b>>>0<178956970>>>0){g=b<<1;b=g>>>0<i>>>0?i:g;if((b|0)==0){k=0;l=0}else{m=b;n=5}}else{m=357913941;n=5}if((n|0)==5){k=Lt(m*12|0)|0;l=m}m=k+(h*12|0)|0;n=k+(l*12|0)|0;if((m|0)!=0){l=c[d>>2]|0;b=m|0;c[b>>2]=l;g=k+(h*12|0)+4|0;a[g]=0;if((a[d+4|0]|0)!=0){c[k+(h*12|0)+8>>2]=c[d+8>>2];a[g]=1}c[b>>2]=l}l=k+(i*12|0)|0;i=c[f>>2]|0;b=c[e>>2]|0;if((b|0)!=(i|0)){g=h-1-(((b-12-i|0)>>>0)/12|0)|0;h=b;b=m;while(1){d=h;h=h-12|0;o=h|0;p=b-12|0;c[p>>2]=c[o>>2];q=b-12+4|0;a[q]=0;if((a[d-12+4|0]|0)!=0){c[b-12+8>>2]=c[d-12+8>>2];a[q]=1}c[p>>2]=c[o>>2];if((h|0)==(i|0)){break}else{b=b-12|0}}b=c[f>>2]|0;h=c[e>>2]|0;c[f>>2]=k+(g*12|0);c[e>>2]=l;c[j>>2]=n;if((h|0)==(b|0)){r=b}else{g=h;while(1){h=g-12|0;k=g-12+4|0;if((a[k]|0)!=0){a[k]=0}if((h|0)==(b|0)){r=b;break}else{g=h}}}}else{c[f>>2]=m;c[e>>2]=l;c[j>>2]=n;r=i}if((r|0)==0){return}Nt(r);return}function Sh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e|0;ki(f,d);li(b-4680+8|0,f);b=c[f>>2]|0;if((b|0)==0){i=e;return}d=f+4|0;f=c[d>>2]|0;if((f|0)!=(b|0)){g=f-12|0;h=f;do{j=h;h=h-12|0;k=j-12+4|0;if((a[k]|0)!=0){a[k]=0}}while((h|0)!=(b|0));c[d>>2]=f+(~(((g-b|0)>>>0)/12|0)*12|0)}Nt(b);i=e;return}function Th(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=a+8|0;e=c[d>>2]|0;f=a+12|0;do{if((e|0)==(c[f>>2]|0)){g=a+4|0;h=c[g>>2]|0;i=a|0;j=c[i>>2]|0;if(h>>>0>j>>>0){k=h;l=((k-j>>2)+1|0)/-2|0;m=e-k|0;gu(h+(l<<2)|0,h|0,m|0)|0;k=h+(l+(m>>2)<<2)|0;c[d>>2]=k;c[g>>2]=(c[g>>2]|0)+(l<<2);n=k;break}k=e-j>>1;j=(k|0)==0?1:k;k=Lt(j<<2)|0;l=k+(j>>>2<<2)|0;m=k+(j<<2)|0;j=c[g>>2]|0;h=c[d>>2]|0;if((j|0)==(h|0)){o=l}else{p=j;j=l;while(1){if((j|0)==0){q=0}else{c[j>>2]=c[p>>2];q=j}r=q+4|0;s=p+4|0;if((s|0)==(h|0)){o=r;break}else{p=s;j=r}}}j=c[i>>2]|0;c[i>>2]=k;c[g>>2]=l;c[d>>2]=o;c[f>>2]=m;if((j|0)==0){n=o}else{Nt(j);n=c[d>>2]|0}}else{n=e}}while(0);if((n|0)==0){t=0;u=t+4|0;c[d>>2]=u;return}c[n>>2]=c[b>>2];t=c[d>>2]|0;u=t+4|0;c[d>>2]=u;return}function Uh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=a+4|0;e=c[d>>2]|0;f=a|0;do{if((e|0)==(c[f>>2]|0)){g=a+8|0;h=c[g>>2]|0;i=a+12|0;j=c[i>>2]|0;k=j;if(h>>>0<j>>>0){j=h;l=((k-j>>2)+1|0)/2|0;m=j-e|0;j=h+(l-(m>>2)<<2)|0;gu(j|0,e|0,m|0)|0;c[d>>2]=j;c[g>>2]=(c[g>>2]|0)+(l<<2);n=j;break}j=k-e>>1;k=(j|0)==0?1:j;j=Lt(k<<2)|0;l=j+((k+3|0)>>>2<<2)|0;m=j+(k<<2)|0;k=c[d>>2]|0;h=c[g>>2]|0;if((k|0)==(h|0)){o=l}else{p=k;k=l;while(1){if((k|0)==0){q=0}else{c[k>>2]=c[p>>2];q=k}r=q+4|0;s=p+4|0;if((s|0)==(h|0)){o=r;break}else{p=s;k=r}}}k=c[f>>2]|0;c[f>>2]=j;c[d>>2]=l;c[g>>2]=o;c[i>>2]=m;if((k|0)==0){n=l}else{Nt(k);n=c[d>>2]|0}}else{n=e}}while(0);c[n-4>>2]=c[b>>2];c[d>>2]=(c[d>>2]|0)-4;return}function Vh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=a+8|0;e=c[d>>2]|0;f=a+12|0;do{if((e|0)==(c[f>>2]|0)){g=a+4|0;h=c[g>>2]|0;i=a|0;j=c[i>>2]|0;if(h>>>0>j>>>0){k=h;l=((k-j>>2)+1|0)/-2|0;m=e-k|0;gu(h+(l<<2)|0,h|0,m|0)|0;k=h+(l+(m>>2)<<2)|0;c[d>>2]=k;c[g>>2]=(c[g>>2]|0)+(l<<2);n=k;break}k=e-j>>1;j=(k|0)==0?1:k;k=Lt(j<<2)|0;l=k+(j>>>2<<2)|0;m=k+(j<<2)|0;j=c[g>>2]|0;h=c[d>>2]|0;if((j|0)==(h|0)){o=l}else{p=j;j=l;while(1){if((j|0)==0){q=0}else{c[j>>2]=c[p>>2];q=j}r=q+4|0;s=p+4|0;if((s|0)==(h|0)){o=r;break}else{p=s;j=r}}}j=c[i>>2]|0;c[i>>2]=k;c[g>>2]=l;c[d>>2]=o;c[f>>2]=m;if((j|0)==0){n=o}else{Nt(j);n=c[d>>2]|0}}else{n=e}}while(0);if((n|0)==0){t=0;u=t+4|0;c[d>>2]=u;return}c[n>>2]=c[b>>2];t=c[d>>2]|0;u=t+4|0;c[d>>2]=u;return}function Wh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=a+4|0;e=c[d>>2]|0;f=a|0;do{if((e|0)==(c[f>>2]|0)){g=a+8|0;h=c[g>>2]|0;i=a+12|0;j=c[i>>2]|0;k=j;if(h>>>0<j>>>0){j=h;l=((k-j>>2)+1|0)/2|0;m=j-e|0;j=h+(l-(m>>2)<<2)|0;gu(j|0,e|0,m|0)|0;c[d>>2]=j;c[g>>2]=(c[g>>2]|0)+(l<<2);n=j;break}j=k-e>>1;k=(j|0)==0?1:j;j=Lt(k<<2)|0;l=j+((k+3|0)>>>2<<2)|0;m=j+(k<<2)|0;k=c[d>>2]|0;h=c[g>>2]|0;if((k|0)==(h|0)){o=l}else{p=k;k=l;while(1){if((k|0)==0){q=0}else{c[k>>2]=c[p>>2];q=k}r=q+4|0;s=p+4|0;if((s|0)==(h|0)){o=r;break}else{p=s;k=r}}}k=c[f>>2]|0;c[f>>2]=j;c[d>>2]=l;c[g>>2]=o;c[i>>2]=m;if((k|0)==0){n=l}else{Nt(k);n=c[d>>2]|0}}else{n=e}}while(0);c[n-4>>2]=c[b>>2];c[d>>2]=(c[d>>2]|0)-4;return}function Xh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;g=e;e=i;i=i+8|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];if((d|0)==0){i=f;return}g=c[a>>2]|0;h=a+4|0;a=c[h>>2]|0;j=g+(a<<3)|0;k=j-b>>3;if((k|0)==0){if((d|0)!=1){Pc(2200,2128,193,4328)}l=c[e+4>>2]|0;if((j|0)==0){m=a}else{c[j>>2]=c[l>>2];n=l+4|0;l=c[n>>2]|0;c[n>>2]=0;c[g+(a<<3)+4>>2]=l;m=c[h>>2]|0}c[h>>2]=m+1;i=f;return}if(!(k>>>0<d>>>0)){m=g+(a-d<<3)|0;l=m;n=j;while(1){if((n|0)!=0){c[n>>2]=c[l>>2];o=l+4|0;p=c[o>>2]|0;c[o>>2]=0;c[n+4>>2]=p}l=l+8|0;if((l|0)==(j|0)){break}else{n=n+8|0}}c[h>>2]=(c[h>>2]|0)+d;if((m|0)!=(b|0)){n=m;m=j;do{n=n-8|0;m=m-8|0;gh(m,n)|0}while((n|0)!=(b|0))}if((d|0)!=1){Pc(2200,2128,202,4360)}gh(b,c[e+4>>2]|0)|0;i=f;return}if((j|0)!=(b|0)){n=b;m=b+(d<<3)|0;while(1){if((m|0)!=0){c[m>>2]=c[n>>2];l=n+4|0;p=c[l>>2]|0;c[l>>2]=0;c[m+4>>2]=p}n=n+8|0;if((n|0)==(j|0)){break}else{m=m+8|0}}}if((k|0)!=1){Pc(2200,2128,202,4360)}k=c[e+4>>2]|0;gh(b,k)|0;if((d|0)!=2){Pc(2200,2128,193,4328)}if((j|0)!=0){c[j>>2]=c[k>>2];j=k+4|0;k=c[j>>2]|0;c[j>>2]=0;c[g+(a<<3)+4>>2]=k}c[h>>2]=(c[h>>2]|0)+d;i=f;return}function Yh(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;h=i;j=g;g=i;i=i+8|0;c[g>>2]=c[j>>2];c[g+4>>2]=c[j+4>>2];j=a|0;k=c[j>>2]|0;l=(k|0)!=0;if(l){if((k|0)==(e|0)){m=b}else{n=(e-8-k|0)>>>3;o=k;p=b;while(1){if((p|0)!=0){c[p>>2]=c[o>>2];q=o+4|0;r=c[q>>2]|0;c[q>>2]=0;c[p+4>>2]=r}o=o+8|0;if((o|0)==(e|0)){break}else{p=p+8|0}}m=b+(n+1<<3)|0}s=m;t=m-b>>3}else{s=b;t=0}if((f|0)!=1){Pc(2200,2128,193,4328)}f=c[g+4>>2]|0;if((s|0)!=0){c[s>>2]=c[f>>2];g=f+4|0;f=c[g>>2]|0;c[g>>2]=0;c[s+4>>2]=f}f=s+8|0;g=a+4|0;if(!l){u=f;c[j>>2]=b;v=u;w=b;x=v-w|0;y=x>>3;c[g>>2]=y;z=a+8|0;c[z>>2]=d;i=h;return}l=c[g>>2]|0;t=k+(l<<3)|0;if((t|0)==(e|0)){A=f;B=l}else{m=k+(l-1<<3)-e|0;l=e;e=f;while(1){c[e>>2]=c[l>>2];f=l+4|0;n=c[f>>2]|0;c[f>>2]=0;c[e+4>>2]=n;l=l+8|0;if((l|0)==(t|0)){break}else{e=e+8|0}}A=s+((m>>>3)+2<<3)|0;B=c[g>>2]|0}if((B|0)!=0){m=B;B=k;while(1){m=m-1|0;$g(B);if((m|0)==0){break}else{B=B+8|0}}}Nt(c[j>>2]|0);u=A;c[j>>2]=b;v=u;w=b;x=v-w|0;y=x>>3;c[g>>2]=y;z=a+8|0;c[z>>2]=d;i=h;return}function Zh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+256|0;f=e|0;g=e+8|0;h=e+16|0;j=e+32|0;k=e+64|0;l=e+80|0;m=e+96|0;n=e+112|0;o=e+144|0;p=e+160|0;q=e+192|0;r=e+208|0;s=e+224|0;t=h;eu(t|0,0,12)|0;c[g>>2]=h;mi(j,g);g=l;a[g]=6;u=l+1|0;a[u]=a[2320]|0;a[u+1|0]=a[2321]|0;a[u+2|0]=a[2322]|0;a[l+4|0]=0;gf(k,l);u=j+24|0;Ph((c[u>>2]|0)+8|0,k)|0;v=me((c[u>>2]|0)+8|0,3280)|0;u=m;a[u]=6;w=m+1|0;a[w]=a[2320]|0;a[w+1|0]=a[2321]|0;a[w+2|0]=a[2322]|0;a[m+4|0]=0;me(Ph(v,m)|0,3160)|0;if(!((a[u]&1)==0)){Nt(c[m+8>>2]|0)}if(!((a[k]&1)==0)){Nt(c[k+8>>2]|0)}if(!((a[g]&1)==0)){Nt(c[l+8>>2]|0)}oh(j);j=n;l=21940+((c[b+8>>2]|0)*44|0)|0;c[j>>2]=c[l>>2];c[j+4>>2]=c[l+4>>2];c[j+8>>2]=c[l+8>>2];c[j+12>>2]=c[l+12>>2];c[j+16>>2]=c[l+16>>2];l=n+4|0;n=o;c[n>>2]=c[l>>2];c[n+4>>2]=c[l+4>>2];c[n+8>>2]=c[l+8>>2];l=d+20|0;d=l|0;n=c[d>>2]|0;ni(e+136|0,l,o);o=((n-(c[d>>2]|0)|0)*100|0|0)/97|0;c[f>>2]=h;oi(p,f);f=p+24|0;me((c[f>>2]|0)+8|0,3096)|0;d=c[f>>2]|0;f=r;a[f]=6;n=r+1|0;a[n]=a[2320]|0;a[n+1|0]=a[2321]|0;a[n+2|0]=a[2322]|0;a[r+4|0]=0;gf(q,r);me(Zl(me(Ph(d+8|0,q)|0,3024)|0,o)|0,2952)|0;if(!((a[q]&1)==0)){Nt(c[q+8>>2]|0)}if(!((a[f]&1)==0)){Nt(c[r+8>>2]|0)}oh(p);_f(s,c[b>>2]|0);Ph((c[s+24>>2]|0)+8|0,h)|0;oh(s);if((a[t]&1)==0){i=e;return}Nt(c[h+8>>2]|0);i=e;return}function _h(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+256|0;f=e|0;g=e+8|0;h=e+16|0;j=e+32|0;k=e+64|0;l=e+80|0;m=e+96|0;n=e+112|0;o=e+144|0;p=e+160|0;q=e+192|0;r=e+208|0;s=e+224|0;t=h;eu(t|0,0,12)|0;c[g>>2]=h;mi(j,g);g=l;a[g]=6;u=l+1|0;a[u]=a[2320]|0;a[u+1|0]=a[2321]|0;a[u+2|0]=a[2322]|0;a[l+4|0]=0;gf(k,l);u=j+24|0;Ph((c[u>>2]|0)+8|0,k)|0;v=me((c[u>>2]|0)+8|0,3280)|0;u=d;gi(m,u,2);me(Ph(v,m)|0,3160)|0;if(!((a[m]&1)==0)){Nt(c[m+8>>2]|0)}if(!((a[k]&1)==0)){Nt(c[k+8>>2]|0)}if(!((a[g]&1)==0)){Nt(c[l+8>>2]|0)}oh(j);j=n;l=21940+((c[b+8>>2]|0)*44|0)|0;c[j>>2]=c[l>>2];c[j+4>>2]=c[l+4>>2];c[j+8>>2]=c[l+8>>2];c[j+12>>2]=c[l+12>>2];c[j+16>>2]=c[l+16>>2];l=n+4|0;n=o;c[n>>2]=c[l>>2];c[n+4>>2]=c[l+4>>2];c[n+8>>2]=c[l+8>>2];l=d+20|0;d=l|0;n=c[d>>2]|0;pi(e+136|0,l,o);o=((n-(c[d>>2]|0)|0)*100|0|0)/97|0;c[f>>2]=h;oi(p,f);f=p+24|0;me((c[f>>2]|0)+8|0,3096)|0;d=(c[f>>2]|0)+8|0;gi(r,u,2);gf(q,r);me(Zl(me(Ph(d,q)|0,3024)|0,o)|0,2952)|0;if(!((a[q]&1)==0)){Nt(c[q+8>>2]|0)}if(!((a[r]&1)==0)){Nt(c[r+8>>2]|0)}oh(p);_f(s,c[b>>2]|0);Ph((c[s+24>>2]|0)+8|0,h)|0;oh(s);if((a[t]&1)==0){i=e;return}Nt(c[h+8>>2]|0);i=e;return}function $h(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=a+8|0;e=c[d>>2]|0;f=a+12|0;do{if((e|0)==(c[f>>2]|0)){g=a+4|0;h=c[g>>2]|0;i=a|0;j=c[i>>2]|0;if(h>>>0>j>>>0){k=h;l=((k-j>>2)+1|0)/-2|0;m=e-k|0;gu(h+(l<<2)|0,h|0,m|0)|0;k=h+(l+(m>>2)<<2)|0;c[d>>2]=k;c[g>>2]=(c[g>>2]|0)+(l<<2);n=k;break}k=e-j>>1;j=(k|0)==0?1:k;k=Lt(j<<2)|0;l=k+(j>>>2<<2)|0;m=k+(j<<2)|0;j=c[g>>2]|0;h=c[d>>2]|0;if((j|0)==(h|0)){o=l}else{p=j;j=l;while(1){if((j|0)==0){q=0}else{c[j>>2]=c[p>>2];q=j}r=q+4|0;s=p+4|0;if((s|0)==(h|0)){o=r;break}else{p=s;j=r}}}j=c[i>>2]|0;c[i>>2]=k;c[g>>2]=l;c[d>>2]=o;c[f>>2]=m;if((j|0)==0){n=o}else{Nt(j);n=c[d>>2]|0}}else{n=e}}while(0);if((n|0)==0){t=0;u=t+4|0;c[d>>2]=u;return}c[n>>2]=c[b>>2];t=c[d>>2]|0;u=t+4|0;c[d>>2]=u;return}function ai(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=a+4|0;e=c[d>>2]|0;f=a|0;do{if((e|0)==(c[f>>2]|0)){g=a+8|0;h=c[g>>2]|0;i=a+12|0;j=c[i>>2]|0;k=j;if(h>>>0<j>>>0){j=h;l=((k-j>>2)+1|0)/2|0;m=j-e|0;j=h+(l-(m>>2)<<2)|0;gu(j|0,e|0,m|0)|0;c[d>>2]=j;c[g>>2]=(c[g>>2]|0)+(l<<2);n=j;break}j=k-e>>1;k=(j|0)==0?1:j;j=Lt(k<<2)|0;l=j+((k+3|0)>>>2<<2)|0;m=j+(k<<2)|0;k=c[d>>2]|0;h=c[g>>2]|0;if((k|0)==(h|0)){o=l}else{p=k;k=l;while(1){if((k|0)==0){q=0}else{c[k>>2]=c[p>>2];q=k}r=q+4|0;s=p+4|0;if((s|0)==(h|0)){o=r;break}else{p=s;k=r}}}k=c[f>>2]|0;c[f>>2]=j;c[d>>2]=l;c[g>>2]=o;c[i>>2]=m;if((k|0)==0){n=l}else{Nt(k);n=c[d>>2]|0}}else{n=e}}while(0);c[n-4>>2]=c[b>>2];c[d>>2]=(c[d>>2]|0)-4;return}function bi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=a+8|0;e=c[d>>2]|0;f=a+12|0;do{if((e|0)==(c[f>>2]|0)){g=a+4|0;h=c[g>>2]|0;i=a|0;j=c[i>>2]|0;if(h>>>0>j>>>0){k=h;l=((k-j>>2)+1|0)/-2|0;m=e-k|0;gu(h+(l<<2)|0,h|0,m|0)|0;k=h+(l+(m>>2)<<2)|0;c[d>>2]=k;c[g>>2]=(c[g>>2]|0)+(l<<2);n=k;break}k=e-j>>1;j=(k|0)==0?1:k;k=Lt(j<<2)|0;l=k+(j>>>2<<2)|0;m=k+(j<<2)|0;j=c[g>>2]|0;h=c[d>>2]|0;if((j|0)==(h|0)){o=l}else{p=j;j=l;while(1){if((j|0)==0){q=0}else{c[j>>2]=c[p>>2];q=j}r=q+4|0;s=p+4|0;if((s|0)==(h|0)){o=r;break}else{p=s;j=r}}}j=c[i>>2]|0;c[i>>2]=k;c[g>>2]=l;c[d>>2]=o;c[f>>2]=m;if((j|0)==0){n=o}else{Nt(j);n=c[d>>2]|0}}else{n=e}}while(0);if((n|0)==0){t=0;u=t+4|0;c[d>>2]=u;return}c[n>>2]=c[b>>2];t=c[d>>2]|0;u=t+4|0;c[d>>2]=u;return}function ci(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=a+4|0;e=c[d>>2]|0;f=a|0;do{if((e|0)==(c[f>>2]|0)){g=a+8|0;h=c[g>>2]|0;i=a+12|0;j=c[i>>2]|0;k=j;if(h>>>0<j>>>0){j=h;l=((k-j>>2)+1|0)/2|0;m=j-e|0;j=h+(l-(m>>2)<<2)|0;gu(j|0,e|0,m|0)|0;c[d>>2]=j;c[g>>2]=(c[g>>2]|0)+(l<<2);n=j;break}j=k-e>>1;k=(j|0)==0?1:j;j=Lt(k<<2)|0;l=j+((k+3|0)>>>2<<2)|0;m=j+(k<<2)|0;k=c[d>>2]|0;h=c[g>>2]|0;if((k|0)==(h|0)){o=l}else{p=k;k=l;while(1){if((k|0)==0){q=0}else{c[k>>2]=c[p>>2];q=k}r=q+4|0;s=p+4|0;if((s|0)==(h|0)){o=r;break}else{p=s;k=r}}}k=c[f>>2]|0;c[f>>2]=j;c[d>>2]=l;c[g>>2]=o;c[i>>2]=m;if((k|0)==0){n=l}else{Nt(k);n=c[d>>2]|0}}else{n=e}}while(0);c[n-4>>2]=c[b>>2];c[d>>2]=(c[d>>2]|0)-4;return}function di(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+16|0;e=b;b=i;i=i+8|0;c[b>>2]=c[e>>2];c[b+4>>2]=c[e+4>>2];e=d|0;f=c[c[a>>2]>>2]|0;a=b;b=c[a>>2]|0;g=f+12|0;h=b;j=c[a+4>>2]|0;a=c[g>>2]|0;if(!((j|b|0)>-1&(h|0)<(a|0))){k=0;i=d;return k|0}b=j;if((b|0)>=(c[g+4>>2]|0)){k=0;i=d;return k|0}j=(ha(b,a)|0)+h|0;$i(e,c[(c[f>>2]|0)+(j<<2)>>2]|0);if((c[e+12>>2]&1|0)!=0){k=0;i=d;return k|0}e=c[f+60>>2]|0;if((e|0)!=0?(j=c[e+4712>>2]|0,(h|0)==(c[j>>2]|0)&(b|0)==(c[j+4>>2]|0)):0){k=8;i=d;return k|0}if((h|0)>=(c[g>>2]|0)){k=1;i=d;return k|0}if((b|0)>=(c[g+4>>2]|0)){k=1;i=d;return k|0}g=f+36|0;j=(ha(c[f+48>>2]|0,b)|0)+h|0;h=c[g>>2]|0;if(!((c[f+40>>2]|0)-h>>2>>>0>j>>>0)){Fp(g);return 0}k=(c[h+(j<<2)>>2]|0)!=0?8:1;i=d;return k|0}function ei(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=(c[d>>2]|0)-f>>4;h=g+1|0;if(h>>>0>268435455>>>0){Ep(a)}i=a+8|0;a=(c[i>>2]|0)-f|0;if(a>>4>>>0<134217727>>>0){f=a>>3;a=f>>>0<h>>>0?h:f;if((a|0)==0){j=0;k=0}else{l=a;m=5}}else{l=268435455;m=5}if((m|0)==5){j=Lt(l<<4)|0;k=l}l=j+(g<<4)|0;if((l|0)!=0){m=l;l=b;c[m>>2]=c[l>>2];c[m+4>>2]=c[l+4>>2];c[m+8>>2]=c[l+8>>2];c[m+12>>2]=c[l+12>>2]}l=c[e>>2]|0;m=(c[d>>2]|0)-l|0;b=j+(g-(m>>4)<<4)|0;g=l;du(b|0,g|0,m)|0;c[e>>2]=b;c[d>>2]=j+(h<<4);c[i>>2]=j+(k<<4);if((l|0)==0){return}Nt(g);return}function fi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;d=i;i=i+8|0;f=a;a=i;i=i+4|0;i=i+7&-8;c[a>>2]=c[f>>2];f=b;b=i;i=i+4|0;i=i+7&-8;c[b>>2]=c[f>>2];f=d|0;if((e|0)<=1){i=d;return}b=c[a>>2]|0;a=b+32|0;do{if((e|0)!=2){g=c[a>>2]|0;h=c[b+16>>2]|0;if((g|0)==(h|0)){if((c[b+36>>2]|0)<(c[b+20>>2]|0)){j=g;k=7;break}else{l=4;m=a;n=g;break}}else{if(g>>>0>h>>>0){j=h;k=7;break}else{l=4;m=a;n=g;break}}}else{j=c[b+16>>2]|0;k=7}}while(0);if((k|0)==7){l=2;m=b+16|0;n=j}j=c[b>>2]|0;do{if((j|0)==(n|0)){a=c[b+4>>2]|0;if((a|0)<(c[m+4>>2]|0)){o=a}else{i=d;return}}else{if(j>>>0>n>>>0){o=c[b+4>>2]|0;break}else{i=d;return}}}while(0);n=b+8|0;a=c[n+4>>2]|0;c[f>>2]=c[n>>2];c[f+4>>2]=a;a=b;n=m;c[a>>2]=c[n>>2];c[a+4>>2]=c[n+4>>2];c[a+8>>2]=c[n+8>>2];c[a+12>>2]=c[n+12>>2];n=l+2|0;a:do{if((n|0)>(e|0)){p=m}else{a=m;g=l;h=n;while(1){q=b+(h<<4)|0;r=g|1;do{if((h|0)!=(e|0)){s=c[q>>2]|0;t=c[b+(r<<4)>>2]|0;if((s|0)==(t|0)){if((c[b+(h<<4)+4>>2]|0)<(c[b+(r<<4)+4>>2]|0)){k=17;break}else{u=h;v=q;w=s;break}}else{if(s>>>0>t>>>0){k=17;break}else{u=h;v=q;w=s;break}}}else{k=17}}while(0);if((k|0)==17){k=0;q=b+(r<<4)|0;u=r;v=q;w=c[q>>2]|0}if((j|0)==(w|0)){if((o|0)>=(c[v+4>>2]|0)){p=a;break a}}else{if(!(j>>>0>w>>>0)){p=a;break a}}q=a;s=v;c[q>>2]=c[s>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];c[q+12>>2]=c[s+12>>2];s=u<<1;q=s+2|0;if((q|0)>(e|0)){p=v;break}else{a=v;g=s;h=q}}}}while(0);c[p>>2]=j;c[p+4>>2]=o;o=p+8|0;p=c[f+4>>2]|0;c[o>>2]=c[f>>2];c[o+4>>2]=p;i=d;return}function gi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=i;i=i+64|0;g=f|0;h=f+16|0;j=f+32|0;k=f+48|0;if((e|0)==3){l=d+12|0;m=c[(c[l>>2]|0)+4>>2]|0;n=fu(m|0)|0;if(n>>>0>4294967279>>>0){Dk(h)}if(n>>>0<11>>>0){a[h]=n<<1;o=h+1|0}else{p=n+16&-16;q=Lt(p)|0;c[h+8>>2]=q;c[h>>2]=p|1;c[h+4>>2]=n;o=q}du(o|0,m|0,n)|0;a[o+n|0]=0;n=ff(h)|0;o=c[(c[l>>2]|0)+4>>2]|0;l=fu(o|0)|0;if(l>>>0>4294967279>>>0){Dk(j)}if(l>>>0<11>>>0){a[j]=l<<1;r=j+1|0}else{m=l+16&-16;q=Lt(m)|0;c[j+8>>2]=q;c[j>>2]=m|1;c[j+4>>2]=l;r=q}du(r|0,o|0,l)|0;a[r+l|0]=0;l=n?2584:2480;n=b;r=Sk(j,0,l,fu(l|0)|0)|0;c[n>>2]=c[r>>2];c[n+4>>2]=c[r+4>>2];c[n+8>>2]=c[r+8>>2];eu(r|0,0,12)|0;if(!((a[j]&1)==0)){Nt(c[j+8>>2]|0)}if((a[h]&1)==0){i=f;return}Nt(c[h+8>>2]|0);i=f;return}else if((e|0)==2){h=c[(c[d+12>>2]|0)+4>>2]|0;j=fu(h|0)|0;if(j>>>0>4294967279>>>0){Dk(g)}if(j>>>0<11>>>0){a[g]=j<<1;s=g+1|0}else{r=j+16&-16;n=Lt(r)|0;c[g+8>>2]=n;c[g>>2]=r|1;c[g+4>>2]=j;s=n}du(s|0,h|0,j)|0;a[s+j|0]=0;j=b;s=Sk(g,0,2592,4)|0;c[j>>2]=c[s>>2];c[j+4>>2]=c[s+4>>2];c[j+8>>2]=c[s+8>>2];eu(s|0,0,12)|0;if((a[g]&1)==0){i=f;return}Nt(c[g+8>>2]|0);i=f;return}else if((e|0)==1){g=c[(c[d+12>>2]|0)+8>>2]|0;s=fu(g|0)|0;if(s>>>0>4294967279>>>0){Dk(b)}if(s>>>0<11>>>0){a[b]=s<<1;t=b+1|0}else{j=s+16&-16;h=Lt(j)|0;c[b+8>>2]=h;c[b>>2]=j|1;c[b+4>>2]=s;t=h}du(t|0,g|0,s)|0;a[t+s|0]=0;i=f;return}else if((e|0)==4){gi(k,d,2);e=b;s=Ok(k,2400)|0;c[e>>2]=c[s>>2];c[e+4>>2]=c[s+4>>2];c[e+8>>2]=c[s+8>>2];eu(s|0,0,12)|0;if((a[k]&1)==0){i=f;return}Nt(c[k+8>>2]|0);i=f;return}else{k=c[(c[d+12>>2]|0)+4>>2]|0;d=fu(k|0)|0;if(d>>>0>4294967279>>>0){Dk(b)}if(d>>>0<11>>>0){a[b]=d<<1;u=b+1|0}else{s=d+16&-16;e=Lt(s)|0;c[b+8>>2]=e;c[b>>2]=s|1;c[b+4>>2]=d;u=e}du(u|0,k|0,d)|0;a[u+d|0]=0;i=f;return}}function hi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+8|0;g=f|0;h=Lt(44)|0;j=h;k=h+16|0;l=e;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2];c[k+8>>2]=c[l+8>>2];eu(l|0,0,12)|0;l=h+28|0;m=e+12|0;c[l>>2]=c[m>>2];c[l+4>>2]=c[m+4>>2];c[l+8>>2]=c[m+8>>2];eu(m|0,0,12)|0;c[h+40>>2]=c[e+24>>2];e=qi(d,g,k)|0;m=c[e>>2]|0;n=m;if((m|0)==0){m=c[g>>2]|0;g=h;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=m;c[e>>2]=g;m=d|0;o=c[c[m>>2]>>2]|0;if((o|0)==0){p=g}else{c[m>>2]=o;p=c[e>>2]|0}ri(c[d+4>>2]|0,p);p=d+8|0;c[p>>2]=(c[p>>2]|0)+1;q=j;r=1}else{q=n;r=0}c[b>>2]=q;a[b+4|0]=r;if(r<<24>>24!=0|(h|0)==0){i=f;return}if(!((a[l]&1)==0)){Nt(c[h+36>>2]|0)}if(!((a[k]&1)==0)){Nt(c[h+24>>2]|0)}Nt(h);i=f;return}function ii(b,d){b=b|0;d=d|0;if((d|0)==0){return}ii(b,c[d>>2]|0);ii(b,c[d+4>>2]|0);if(!((a[d+28|0]&1)==0)){Nt(c[d+36>>2]|0)}if(!((a[d+16|0]&1)==0)){Nt(c[d+24>>2]|0)}Nt(d);return}function ji(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0;if((b|0)!=1){if((b-1&b|0)==0){d=b}else{d=Bk(b)|0}}else{d=2}b=c[a+4>>2]|0;if(d>>>0>b>>>0){si(a,d);return}if(!(d>>>0<b>>>0)){return}if(b>>>0>2>>>0){e=(b-1&b|0)==0}else{e=0}f=~~+ga(+((c[a+12>>2]|0)>>>0>>>0)/+g[a+16>>2]);if(e){h=1<<32-(hu(f-1|0)|0)}else{h=Bk(f)|0}f=d>>>0<h>>>0?h:d;if(!(f>>>0<b>>>0)){return}si(a,f);return}function ki(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=b|0;c[e>>2]=0;f=b+4|0;c[f>>2]=0;g=b+8|0;c[g>>2]=0;h=d+4|0;i=c[h>>2]|0;j=d|0;d=c[j>>2]|0;k=i-d|0;l=(k|0)/12|0;if((i|0)==(d|0)){return}if(l>>>0>357913941>>>0){Ep(b)}b=Lt(k)|0;c[f>>2]=b;c[e>>2]=b;c[g>>2]=b+(l*12|0);l=c[j>>2]|0;j=c[h>>2]|0;if((l|0)==(j|0)){return}else{m=l;n=b}do{if((n|0)==0){o=0}else{b=m|0;l=n|0;c[l>>2]=c[b>>2];h=n+4|0;a[h]=0;if((a[m+4|0]|0)!=0){c[n+8>>2]=c[m+8>>2];a[h]=1}c[l>>2]=c[b>>2];o=c[f>>2]|0}n=o+12|0;c[f>>2]=n;m=m+12|0}while((m|0)!=(j|0));return}function li(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=b+4740|0;if((a[e]|0)!=0){f=Lt(20)|0;c[f>>2]=8984;c[f+4>>2]=b;g=d|0;c[f+8>>2]=c[g>>2];h=d+4|0;c[f+12>>2]=c[h>>2];i=d+8|0;c[f+16>>2]=c[i>>2];c[i>>2]=0;c[h>>2]=0;c[g>>2]=0;g=b+4724|0;h=c[g>>2]|0;i=b+4720|0;j=c[i>>2]|0;if((h|0)==(j|0)){k=0}else{k=(h-j<<8)-1|0}l=b+4732|0;m=c[l>>2]|0;n=b+4736|0;o=c[n>>2]|0;if((k-m|0)==(o|0)){Dh(b+4716|0);p=c[n>>2]|0;q=c[l>>2]|0;r=c[i>>2]|0;s=c[g>>2]|0}else{p=o;q=m;r=j;s=h}h=p+q|0;if((s|0)!=(r|0)?(s=(c[r+(h>>>10<<2)>>2]|0)+((h&1023)<<2)|0,(s|0)!=0):0){c[s>>2]=f}c[n>>2]=p+1;return}a[e]=1;xh(b,d);d=b+4736|0;if((c[d>>2]|0)!=0){p=b+4720|0;n=b+4732|0;b=c[n>>2]|0;while(1){f=c[(c[(c[p>>2]|0)+(b>>>10<<2)>>2]|0)+((b&1023)<<2)>>2]|0;zd[c[c[f>>2]>>2]&511](f);f=c[n>>2]|0;s=(c[(c[p>>2]|0)+(f>>>10<<2)>>2]|0)+((f&1023)<<2)|0;h=c[s>>2]|0;c[s>>2]=0;if((h|0)==0){t=f}else{pe(h,4);t=c[n>>2]|0}h=(c[d>>2]|0)-1|0;c[d>>2]=h;f=t+1|0;c[n>>2]=f;if(f>>>0>2047>>>0){Nt(c[c[p>>2]>>2]|0);c[p>>2]=(c[p>>2]|0)+4;s=(c[n>>2]|0)-1024|0;c[n>>2]=s;u=s;v=c[d>>2]|0}else{u=f;v=h}if((v|0)==0){break}else{b=u}}}a[e]=0;return}function mi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+16|0;f=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[f>>2];f=e|0;g=c[d>>2]|0;c[b+16>>2]=b;if((b|0)!=0){c[b>>2]=8592;c[b+4>>2]=g}g=Lt(144)|0;d=g;h=g+64|0;j=h;k=g;l=g+8|0;c[l>>2]=7296;m=g+12|0;c[k>>2]=20708;c[j>>2]=20728;c[g+4>>2]=0;el(h,m);c[g+136>>2]=0;c[g+140>>2]=-1;c[k>>2]=7276;c[j>>2]=7316;c[l>>2]=7296;l=f;j=m;c[j>>2]=7632;Lp(g+16|0);eu(g+20|0,0,24)|0;c[j>>2]=7488;eu(g+44|0,0,16)|0;c[g+60>>2]=24;eu(l|0,0,12)|0;th(m,f);if((a[l]&1)==0){n=12;o=0;p=b+24|0;c[p>>2]=d;i=e;return}Nt(c[f+8>>2]|0);n=12;o=0;p=b+24|0;c[p>>2]=d;i=e;return}function ni(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;g=e;e=i;i=i+12|0;i=i+7&-8;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];eu(b|0,0,6)|0;g=0;h=0;j=1;while(1){if(!j){k=3;break}l=b+(g<<1)+1|0;if((a[l]|0)!=0){k=5;break}m=c[e+(g<<2)>>2]|0;if((m|0)>0){a[b+(g<<1)|0]=1;a[l]=0;n=m+h|0}else{n=h}m=g+1|0;if((m|0)==3){k=10;break}g=m;h=n;j=(a[b+(m<<1)|0]|0)==0}if((k|0)==3){Vc(c[r>>2]|0,1896,(o=i,i=i+24|0,c[o>>2]=2808,c[o+8>>2]=37,c[o+16>>2]=2776,o)|0)|0;i=o;Uc()}else if((k|0)==5){Vc(c[r>>2]|0,1896,(o=i,i=i+24|0,c[o>>2]=2808,c[o+8>>2]=38,c[o+16>>2]=2656,o)|0)|0;i=o;Uc()}else if((k|0)==10){if((n|0)==0){i=f;return}k=d|0;o=(c[k>>2]|0)-n|0;b=(o|0)>97?97:o;c[k>>2]=(b|0)<0?0:b;Bh(d-20|0,n,n);i=f;return}}function oi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+16|0;f=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[f>>2];f=e|0;g=c[d>>2]|0;c[b+16>>2]=b;if((b|0)!=0){c[b>>2]=8648;c[b+4>>2]=g}g=Lt(144)|0;d=g;h=g+64|0;j=h;k=g;l=g+8|0;c[l>>2]=7296;m=g+12|0;c[k>>2]=20708;c[j>>2]=20728;c[g+4>>2]=0;el(h,m);c[g+136>>2]=0;c[g+140>>2]=-1;c[k>>2]=7276;c[j>>2]=7316;c[l>>2]=7296;l=f;j=m;c[j>>2]=7632;Lp(g+16|0);eu(g+20|0,0,24)|0;c[j>>2]=7488;eu(g+44|0,0,16)|0;c[g+60>>2]=24;eu(l|0,0,12)|0;th(m,f);if((a[l]&1)==0){n=12;o=0;p=b+24|0;c[p>>2]=d;i=e;return}Nt(c[f+8>>2]|0);n=12;o=0;p=b+24|0;c[p>>2]=d;i=e;return}function pi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;g=e;e=i;i=i+12|0;i=i+7&-8;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];eu(b|0,0,6)|0;g=0;h=0;j=1;while(1){if(!j){k=3;break}l=b+(g<<1)+1|0;if((a[l]|0)!=0){k=5;break}m=c[e+(g<<2)>>2]|0;if((m|0)>0){a[b+(g<<1)|0]=1;a[l]=0;n=m+h|0}else{n=h}m=g+1|0;if((m|0)==3){k=10;break}g=m;h=n;j=(a[b+(m<<1)|0]|0)==0}if((k|0)==3){Vc(c[r>>2]|0,1896,(o=i,i=i+24|0,c[o>>2]=2808,c[o+8>>2]=37,c[o+16>>2]=2776,o)|0)|0;i=o;Uc()}else if((k|0)==5){Vc(c[r>>2]|0,1896,(o=i,i=i+24|0,c[o>>2]=2808,c[o+8>>2]=38,c[o+16>>2]=2656,o)|0)|0;i=o;Uc()}else if((k|0)==10){if((n|0)==0){i=f;return}k=d|0;o=(c[k>>2]|0)-n|0;b=(o|0)>97?97:o;c[k>>2]=(b|0)<0?0:b;Fh(d-20|0,n,n);i=f;return}}function qi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=c[b+4>>2]|0;if((f|0)==0){g=b+4|0;c[d>>2]=g;h=g|0;return h|0}g=a[e]|0;b=(g&1)==0;i=(g&255)>>>1;g=e+1|0;j=e+8|0;k=e+4|0;e=f;while(1){f=e+16|0;if(b){l=i}else{l=c[k>>2]|0}m=a[f]|0;n=(m&1)==0;if(n){o=(m&255)>>>1}else{o=c[e+20>>2]|0}if(b){p=g}else{p=c[j>>2]|0}if(n){q=f+1|0}else{q=c[e+24>>2]|0}r=$t(p,q,o>>>0<l>>>0?o:l)|0;if((r|0)==0){if(l>>>0<o>>>0){s=16}}else{if((r|0)<0){s=16}}if((s|0)==16){s=0;t=e|0;r=c[t>>2]|0;if((r|0)==0){s=17;break}else{e=r;continue}}if(n){u=(m&255)>>>1}else{u=c[e+20>>2]|0}if(b){v=i}else{v=c[k>>2]|0}if(n){w=f+1|0}else{w=c[e+24>>2]|0}if(b){x=g}else{x=c[j>>2]|0}f=$t(w,x,v>>>0<u>>>0?v:u)|0;if((f|0)==0){if(!(u>>>0<v>>>0)){s=33;break}}else{if((f|0)>=0){s=33;break}}y=e+4|0;f=c[y>>2]|0;if((f|0)==0){s=32;break}else{e=f}}if((s|0)==17){c[d>>2]=e;h=t;return h|0}else if((s|0)==32){c[d>>2]=e;h=y;return h|0}else if((s|0)==33){c[d>>2]=e;h=d;return h|0}return 0}function ri(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=(d|0)==(b|0);a[d+12|0]=e&1;if(e){return}else{f=d}while(1){g=f+8|0;h=c[g>>2]|0;d=h+12|0;if((a[d]|0)!=0){i=37;break}j=h+8|0;k=c[j>>2]|0;e=c[k>>2]|0;if((e|0)==(h|0)){l=c[k+4>>2]|0;if((l|0)==0){i=7;break}m=l+12|0;if((a[m]|0)!=0){i=7;break}a[d]=1;a[k+12|0]=(k|0)==(b|0)|0;a[m]=1}else{if((e|0)==0){i=24;break}m=e+12|0;if((a[m]|0)!=0){i=24;break}a[d]=1;a[k+12|0]=(k|0)==(b|0)|0;a[m]=1}if((k|0)==(b|0)){i=37;break}else{f=k}}if((i|0)==7){if((c[h>>2]|0)==(f|0)){n=h;o=k;p=h}else{b=h+4|0;m=c[b>>2]|0;d=m|0;e=c[d>>2]|0;c[b>>2]=e;if((e|0)==0){q=k}else{c[e+8>>2]=h;q=c[j>>2]|0}e=m+8|0;c[e>>2]=q;q=c[j>>2]|0;b=q|0;if((c[b>>2]|0)==(h|0)){c[b>>2]=m}else{c[q+4>>2]=m}c[d>>2]=h;c[j>>2]=m;d=c[e>>2]|0;n=m;o=d;p=c[d>>2]|0}a[n+12|0]=1;a[o+12|0]=0;n=p+4|0;d=c[n>>2]|0;c[o>>2]=d;if((d|0)!=0){c[d+8>>2]=o}d=o+8|0;c[p+8>>2]=c[d>>2];m=c[d>>2]|0;e=m|0;if((c[e>>2]|0)==(o|0)){c[e>>2]=p}else{c[m+4>>2]=p}c[n>>2]=o;c[d>>2]=p;return}else if((i|0)==24){p=h|0;if((c[p>>2]|0)==(f|0)){d=f+4|0;o=c[d>>2]|0;c[p>>2]=o;if((o|0)==0){r=k}else{c[o+8>>2]=h;r=c[j>>2]|0}c[g>>2]=r;r=c[j>>2]|0;o=r|0;if((c[o>>2]|0)==(h|0)){c[o>>2]=f}else{c[r+4>>2]=f}c[d>>2]=h;c[j>>2]=f;s=f;t=c[g>>2]|0}else{s=h;t=k}a[s+12|0]=1;a[t+12|0]=0;s=t+4|0;k=c[s>>2]|0;h=k|0;g=c[h>>2]|0;c[s>>2]=g;if((g|0)!=0){c[g+8>>2]=t}g=t+8|0;c[k+8>>2]=c[g>>2];s=c[g>>2]|0;f=s|0;if((c[f>>2]|0)==(t|0)){c[f>>2]=k}else{c[s+4>>2]=k}c[h>>2]=t;c[g>>2]=k;return}else if((i|0)==37){return}}function si(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+16|0;e=d|0;f=d+8|0;g=a+4|0;if((b|0)==0){h=a|0;j=c[h>>2]|0;c[h>>2]=0;if((j|0)!=0){Nt(j)}c[g>>2]=0;i=d;return}j=Lt(b<<2)|0;h=a|0;k=c[h>>2]|0;c[h>>2]=j;if((k|0)!=0){Nt(k)}c[g>>2]=b;g=0;do{c[(c[h>>2]|0)+(g<<2)>>2]=0;g=g+1|0}while(g>>>0<b>>>0);g=a+8|0;a=c[g>>2]|0;if((a|0)==0){i=d;return}k=c[a+4>>2]|0;j=b-1|0;l=(j&b|0)==0;if(l){m=k&j}else{m=(k>>>0)%(b>>>0)|0}c[(c[h>>2]|0)+(m<<2)>>2]=g;g=a|0;k=c[g>>2]|0;if((k|0)==0){i=d;return}n=e|0;o=f|0;p=a;a=m;m=g;g=k;a:while(1){k=p;q=m;r=g;b:while(1){s=r;while(1){t=c[s+4>>2]|0;if(l){u=t&j}else{u=(t>>>0)%(b>>>0)|0}if((u|0)==(a|0)){break}v=(c[h>>2]|0)+(u<<2)|0;if((c[v>>2]|0)==0){break b}t=s|0;w=c[t>>2]|0;c:do{if((w|0)==0){x=t;y=0}else{z=s+8|0;A=t;B=w;while(1){c[n>>2]=c[z>>2];c[o>>2]=c[B+8>>2];C=zi(e,f)|0;D=c[A>>2]|0;if(!C){x=A;y=D;break c}C=D|0;D=c[C>>2]|0;if((D|0)==0){x=C;y=0;break}else{A=C;B=D}}}}while(0);c[q>>2]=y;c[x>>2]=c[c[(c[h>>2]|0)+(u<<2)>>2]>>2];c[c[(c[h>>2]|0)+(u<<2)>>2]>>2]=s;w=c[q>>2]|0;if((w|0)==0){E=29;break a}else{s=w}}w=s|0;t=c[w>>2]|0;if((t|0)==0){E=29;break a}else{k=s;q=w;r=t}}c[v>>2]=k;r=s|0;q=c[r>>2]|0;if((q|0)==0){E=29;break}else{p=s;a=u;m=r;g=q}}if((E|0)==29){i=d;return}}function ti(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+8|0;f=b;b=i;i=i+8|0;c[b>>2]=c[f>>2];c[b+4>>2]=c[f+4>>2];f=e|0;g=b;b=c[g+4>>2]|0;c[f>>2]=c[g>>2];c[f+4>>2]=b;ui(a,f,d);i=e;return}function ui(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0;e=i;i=i+40|0;f=b;b=i;i=i+8|0;c[b>>2]=c[f>>2];c[b+4>>2]=c[f+4>>2];f=e|0;g=e+16|0;h=e+32|0;j=i;i=i+16|0;k=i;i=i+4|0;i=i+7&-8;l=i;i=i+4|0;i=i+7&-8;m=i;i=i+16|0;n=i;i=i+16|0;o=b;b=a;p=c[o>>2]|0;q=c[o+4>>2]|0;c[b>>2]=p;c[b+4>>2]=q;o=d+12|0;s=c[o+4>>2]|0;t=p;u=q;if(!((u|p|0)>-1&(t|0)<(c[o>>2]|0))){v=c[r>>2]|0;w=Vc(v|0,440,(x=i,i=i+24|0,c[x>>2]=312,c[x+8>>2]=20,c[x+16>>2]=3208,x)|0)|0;i=x;Uc()}y=u;if((y|0)>=(s|0)){v=c[r>>2]|0;w=Vc(v|0,440,(x=i,i=i+24|0,c[x>>2]=312,c[x+8>>2]=20,c[x+16>>2]=3208,x)|0)|0;i=x;Uc()}c[h>>2]=p;c[h+4>>2]=q;Xe(g,h,8);h=c[o>>2]|0;q=c[o+4>>2]|0;c[j>>2]=0;c[j+4>>2]=0;p=j+8|0;c[p>>2]=h;c[p+4>>2]=q;We(f,g,j);j=a+8|0;g=f;c[j>>2]=c[g>>2];c[j+4>>2]=c[g+4>>2];c[j+8>>2]=c[g+8>>2];c[j+12>>2]=c[g+12>>2];g=a+16|0;j=c[g+4>>2]|0;if((c[g>>2]|0)>17){z=c[r>>2]|0;A=Vc(z|0,440,(x=i,i=i+24|0,c[x>>2]=312,c[x+8>>2]=23,c[x+16>>2]=2408,x)|0)|0;i=x;Uc()}if((j|0)>=18){z=c[r>>2]|0;A=Vc(z|0,440,(x=i,i=i+24|0,c[x>>2]=312,c[x+8>>2]=23,c[x+16>>2]=2408,x)|0)|0;i=x;Uc()}z=m|0;A=m+8|0;j=m;g=d|0;d=n+12|0;f=l;q=k;a:while(1){p=-1;while(1){h=-1;while(1){c[k>>2]=0;v=-1;w=-1;s=-1;u=-1;B=0;while(1){c[l>>2]=0;C=B+1|0;if((B|0)<0){D=v;E=w;F=s;G=u;H=C}else{I=v;J=w;K=s;L=u;M=0;N=B;O=C;while(1){C=((ha(O,N)|0)/2|0)+M|0;P=21200+(C<<4)|0;Q=21208+(C<<4)|0;C=c[P>>2]&J;R=c[P+4>>2]&I;P=c[Q>>2]&L;S=c[Q+4>>2]&K;c[z>>2]=C;c[z+4>>2]=R;c[A>>2]=P;c[A+4>>2]=S;S=ha(c[q>>2]|0,h)|0;P=S+t|0;S=(ha(c[f>>2]|0,p)|0)+y|0;Q=c[o>>2]|0;if((S|P|0)>-1&(P|0)<(Q|0)){T=(S|0)<(c[o+4>>2]|0)}else{T=0}U=1;V=R;R=C;while(1){if(!((R|0)==0&(V|0)==0)){W=18;break}if(!(U>>>0<2>>>0)){X=K;Y=L;Z=I;_=J;$=M;aa=N;W=22;break}C=m+(U<<3)|0;U=U+1|0;V=c[C+4>>2]|0;R=c[C>>2]|0}do{if((W|0)==18){W=0;if(T){R=(ha(Q,S)|0)+P|0;$i(n,c[(c[g>>2]|0)+(R<<2)>>2]|0);if((c[d>>2]&2|0)!=0){ba=I;ca=J;da=K;ea=L;W=23;break}fa=c[k>>2]|0;ga=c[l>>2]|0}else{fa=N;ga=M}R=((ha(fa+1|0,fa)|0)/2|0)+ga|0;V=21200+(R<<4)|0;U=21208+(R<<4)|0;X=K&~c[U+4>>2];Y=L&~c[U>>2];Z=I&~c[V+4>>2];_=J&~c[V>>2];$=ga;aa=fa;W=22}}while(0);if((W|0)==22){W=0;if(T){ba=Z;ca=_;da=X;ea=Y;W=23}else{ia=Z;ja=_;ka=X;la=Y;ma=$;na=aa}}if((W|0)==23){W=0;Q=P+8-(c[b>>2]|0)|0;V=S+8-(c[b+4>>2]|0)|0;if(!((V|Q|0)>-1&(Q|0)<17&(V|0)<17)){W=24;break a}U=a+24+((V*17|0)+Q<<4)|0;c[U>>2]=c[j>>2];c[U+4>>2]=c[j+4>>2];c[U+8>>2]=c[j+8>>2];c[U+12>>2]=c[j+12>>2];ia=ba;ja=ca;ka=da;la=ea;ma=c[l>>2]|0;na=c[k>>2]|0}U=ma+1|0;c[l>>2]=U;Q=na+1|0;if((ma|0)<(na|0)){I=ia;J=ja;K=ka;L=la;M=U;N=na;O=Q}else{D=ia;E=ja;F=ka;G=la;H=Q;break}}}c[k>>2]=H;if((H|0)<9){v=D;w=E;s=F;u=G;B=H}else{break}}if((h|0)<0){h=h+2|0}else{break}}if((p|0)<0){p=p+2|0}else{break}}if((f|0)==(l|0)){f=q;q=l}else{W=31;break}}if((W|0)==24){Vc(c[r>>2]|0,440,(x=i,i=i+24|0,c[x>>2]=1328,c[x+8>>2]=50,c[x+16>>2]=984,x)|0)|0;i=x;Uc()}else if((W|0)==31){i=e;return}}function vi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;e=b;b=i;i=i+8|0;c[b>>2]=c[e>>2];c[b+4>>2]=c[e+4>>2];e=b;b=c[e>>2]|0;f=c[e+4>>2]|0;e=c[a+8>>2]|0;g=c[a+12>>2]|0;if(!((f|0)>=(g|0)&(b|0)>=(e|0)&(b|0)<((c[a+16>>2]|0)+e|0)&(f|0)<((c[a+20>>2]|0)+g|0))){h=0;i=d;return h|0}g=a;e=b+8-(c[g>>2]|0)|0;b=f+8-(c[g+4>>2]|0)|0;if(!((b|e|0)>-1&(e|0)<17&(b|0)<17)){Vc(c[r>>2]|0,440,(g=i,i=i+24|0,c[g>>2]=1328,c[g+8>>2]=50,c[g+16>>2]=984,g)|0)|0;i=g;Uc();return 0}g=(b*17|0)+e|0;e=0;while(1){b=a+24+(g<<4)+(e<<3)|0;f=e+1|0;if(!((c[b>>2]|0)==0&(c[b+4>>2]|0)==0)){h=1;j=7;break}if(f>>>0<2>>>0){e=f}else{h=0;j=7;break}}if((j|0)==7){i=d;return h|0}return 0}function wi(b){b=b|0;var c=0;c=b|0;a[c]=(a[c]|0)+1;return b|0}function xi(b,c){b=b|0;c=c|0;var d=0,e=0;d=i;e=b;b=i;i=i+1|0;i=i+7&-8;a[b]=a[e]|0;e=c;c=i;i=i+1|0;i=i+7&-8;a[c]=a[e]|0;i=d;return(a[b|0]|0)!=(a[c|0]|0)|0}function yi(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=a;a=i;i=i+4|0;i=i+7&-8;c[a>>2]=c[e>>2];e=b;b=i;i=i+4|0;i=i+7&-8;c[b>>2]=c[e>>2];i=d;return(c[a>>2]|0)==(c[b>>2]|0)|0}function zi(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=a;a=i;i=i+4|0;i=i+7&-8;c[a>>2]=c[e>>2];e=b;b=i;i=i+4|0;i=i+7&-8;c[b>>2]=c[e>>2];i=d;return(c[a>>2]|0)==(c[b>>2]|0)|0}function Ai(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=a;a=i;i=i+4|0;i=i+7&-8;c[a>>2]=c[e>>2];e=b;b=i;i=i+4|0;i=i+7&-8;c[b>>2]=c[e>>2];i=d;return(c[a>>2]|0)>>>0<(c[b>>2]|0)>>>0|0}function Bi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0;d=i;i=i+112|0;e=d|0;f=d+8|0;g=d+88|0;h=d+104|0;j=i;i=i+8|0;k=j;l=i;i=i+8|0;m=l;n=i;i=i+16|0;o=i;i=i+12|0;i=i+7&-8;p=i;i=i+12|0;i=i+7&-8;q=i;i=i+8|0;r=q;s=i;i=i+8|0;t=s;u=i;i=i+12|0;i=i+7&-8;v=i;i=i+8|0;w=v;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+8|0;z=a+4|0;a=c[(c[(c[z>>2]|0)+60>>2]|0)+4712>>2]|0;A=c[a+4>>2]|0;c[h>>2]=c[a>>2];c[h+4>>2]=A;Xe(g,h,8);af(f,g);g=f+72|0;h=c[g>>2]|0;A=c[g+4>>2]|0;g=e;a=f|0;f=n+4|0;B=n+8|0;C=p|0;D=p+4|0;E=p+8|0;F=o|0;G=o+4|0;H=o+8|0;I=u|0;J=u+4|0;K=u+8|0;L=0;M=0;while(1){N=M;O=L;if(!((O|0)!=(A|0)|(N|0)!=0)){break}c[e>>2]=M;c[e+4>>2]=L;_e(k,a,g);P=c[j>>2]|0;Q=c[j+4>>2]|0;R=c[z>>2]|0;S=R+12|0;T=Q;a:do{if((T|P|0)>-1&(P|0)<(c[S>>2]|0)?(T|0)<(c[S+4>>2]|0):0){U=(c[R+60>>2]|0)+24|0;c[l>>2]=P;c[l+4>>2]=Q;V=vi(U,m)|0;U=c[z>>2]|0;W=(ha(c[j+4>>2]|0,c[U+12>>2]|0)|0)+(c[j>>2]|0)|0;$i(n,c[(c[U>>2]|0)+(W<<2)>>2]|0);W=c[f>>2]|0;U=c[B>>2]|0;X=c[(c[z>>2]|0)+60>>2]|0;Y=c[j>>2]|0;Z=X+4684|0;_=Y;$=c[j+4>>2]|0;aa=c[Z>>2]|0;do{if((($|Y|0)>-1&(_|0)<(aa|0)?(ba=$,(ba|0)<(c[Z+4>>2]|0)):0)?(ca=(ha(ba,aa)|0)+_|0,(c[(c[X+4672>>2]|0)+(ca<<2)>>2]|0)!=0):0){c[C>>2]=W;if(V){c[D>>2]=U;c[E>>2]=0;c[q>>2]=M;c[q+4>>2]=L;zf(b,p,r);break}else{c[D>>2]=8;c[E>>2]=0;c[q>>2]=M;c[q+4>>2]=L;zf(b,p,r);break a}}else{da=10}}while(0);if((da|0)==10?(da=0,xf(o,0),U=c[G>>2]|0,W=c[H>>2]|0,c[C>>2]=c[F>>2],c[D>>2]=U,c[E>>2]=W,c[q>>2]=M,c[q+4>>2]=L,zf(b,p,r),!V):0){break}W=c[z>>2]|0;U=c[j+4>>2]|0;c[s>>2]=c[j>>2];c[s+4>>2]=U;U=Yf(W,t)|0;if((U|0)!=0){W=c[U+12>>2]|0;c[I>>2]=c[W+12>>2];c[J>>2]=c[W+16>>2];c[K>>2]=0;c[v>>2]=M;c[v+4>>2]=L;zf(b,u,w)}}}while(0);Q=N+1|0;if((Q|0)!=(h|0)){L=L|0|0;M=Q|M&0;continue}L=O+1|0;M=0}c[x>>2]=64;c[x+4>>2]=0;c[x+8>>2]=15;c[y>>2]=8;c[y+4>>2]=8;zf(b,x,y);i=d;return}function Ci(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+184|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+40|0;l=e+56|0;m=e+64|0;n=e+96|0;o=e+104|0;p=e+136|0;q=e+144|0;r=e+176|0;s=b+4|0;b=c[(c[s>>2]|0)+60>>2]|0;t=j;eu(t|0,0,12)|0;u=k;a[u]=8;v=k;w=v+1|0;D=1868853108;a[w]=D;D=D>>8;a[w+1|0]=D;D=D>>8;a[w+2|0]=D;D=D>>8;a[w+3|0]=D;a[v+5|0]=0;c[l>>2]=0;c[l+4>>2]=0;Af(d,k,l,14);if(!((a[u]&1)==0)){Nt(c[k+8>>2]|0)}c[h>>2]=j;mi(m,h);h=m+24|0;me((c[h>>2]|0)+8|0,3912)|0;Zl(me(Zl((c[h>>2]|0)+8|0,c[b+20>>2]|0)|0,3904)|0,97)|0;oh(m);c[n>>2]=0;c[n+4>>2]=1;Af(d,j,n,14);c[g>>2]=j;mi(o,g);g=o+24|0;me((c[g>>2]|0)+8|0,3072)|0;me((c[g>>2]|0)+8|0,c[21932+((c[b+8>>2]|0)*44|0)>>2]|0)|0;oh(o);c[p>>2]=0;c[p+4>>2]=2;Af(d,j,p,14);c[f>>2]=j;mi(q,f);f=q+24|0;me((c[f>>2]|0)+8|0,2312)|0;Zl((c[f>>2]|0)+8|0,c[(c[s>>2]|0)+64>>2]|0)|0;oh(q);c[r>>2]=0;c[r+4>>2]=3;Af(d,j,r,14);if((a[t]&1)==0){i=e;return}Nt(c[j+8>>2]|0);i=e;return}function Di(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+24|0;e=d|0;f=d+8|0;g=d+16|0;h=(c[a+4>>2]|0)+68|0;Bf(e,b);a=Yi(h,c[e>>2]|0)|0;Bf(f,b);e=(c[f+4>>2]|0)-2|0;f=a|0;h=c[f>>2]|0;j=(((c[a+4>>2]|0)-h|0)/12|0)-1|0;if(!((j|e|0)>-1)){i=d;return}a=g|0;k=g+4|0;l=e;e=j;j=h;while(1){c[a>>2]=0;c[k>>2]=l;Af(b,j+(e*12|0)|0,g,7);h=l-1|0;m=e-1|0;if(!((m|h|0)>-1)){break}l=h;e=m;j=c[f>>2]|0}i=d;return}function Ei(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0;c=i;i=i+720|0;d=c|0;e=c+160|0;f=c+240|0;g=c+400|0;h=c+480|0;j=c+560|0;Ef(b);Df(d,b,17);du(e|0,d+80|0,80)|0;Cf(f,d|0,17);du(g|0,f|0,80)|0;Cf(j,f+80|0,4);du(h|0,j+80|0,80)|0;Bi(a,g);Ci(a,h);Di(a,e);i=c;return}function Fi(a,b){a=a|0;b=b|0;var c=0;if((b|0)==57361){c=13}else if((b|0)==57378){c=18}else if((b|0)==113){c=1}else if((b|0)==57376){c=17}else if((b|0)==57379){c=20}else if((b|0)==57363){c=15}else if((b|0)==57377){c=19}else if((b|0)==57362){c=14}else if((b|0)==57364){c=16}else{c=0}return c|0}function Gi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+32|0;f=d;d=i;i=i+8|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];f=e|0;g=e+24|0;if((a[b+8|0]|0)!=0){h=1;i=e;return h|0}j=c[b+4>>2]|0;k=d;d=c[k+4>>2]|0;c[g>>2]=c[k>>2];c[g+4>>2]=d;Hi(f,b,g);Zf(j,f)|0;j=f|0;if((a[j]|0)==0){h=0;i=e;return h|0}a[j]=0;h=0;i=e;return h|0}function Hi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;f=i;i=i+96|0;g=e;e=i;i=i+8|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;l=f+32|0;m=f+40|0;n=f+48|0;o=f+56|0;p=f+80|0;q=f+88|0;r=d+4|0;s=c[r>>2]|0;t=c[(c[s+60>>2]|0)+4712>>2]|0;u=c[t>>2]|0;v=c[t+4>>2]|0;switch(c[e>>2]|0){case 15:{e=u-1|u&0;t=v|0|0;c[k>>2]=e;c[k+4>>2]=t;w=Yf(s,k)|0;k=c[(c[r>>2]|0)+60>>2]|0;if((w|0)==0){c[b+4>>2]=k;c[b+8>>2]=1;x=b+12|0;c[x>>2]=e;c[x+4>>2]=t;a[b|0]=1;i=f;return}else{t=c[w+8>>2]|0;c[b+4>>2]=k;c[b+8>>2]=2;c[b+12>>2]=t;a[b|0]=1;i=f;return}break};case 1:{t=Lt(40)|0;k=t;w=Lt(16)|0;du(w|0,1944,12)|0;a[w+12|0]=0;x=o+16|0;e=o;c[x>>2]=e;c[o>>2]=4608;c[o+4>>2]=d;c[t>>2]=9400;d=Lt(16)|0;c[t+12>>2]=d;c[t+4>>2]=17;c[t+8>>2]=12;y=c[x>>2]|0;du(d|0,w|0,12)|0;a[d+12|0]=0;do{if((y|0)!=0){if((y|0)==(e|0)){d=c[o>>2]|0;z=t+16|0;c[t+32>>2]=z;Ad[c[d+12>>2]&127](e,z);break}else{c[t+32>>2]=y;c[x>>2]=0;break}}else{c[t+32>>2]=0}}while(0);c[n>>2]=k;k=c[6659]|0;if(k>>>0<(c[6660]|0)>>>0){if((k|0)!=0){c[k>>2]=t}c[6659]=k+4}else{Ui(26632,n)}n=c[x>>2]|0;if((n|0)!=(e|0)){if((n|0)!=0){zd[c[(c[n>>2]|0)+20>>2]&511](n)}}else{zd[c[(c[o>>2]|0)+16>>2]&511](e)}Nt(w);break};case 14:{w=u|0|0;e=v+1|v&0;c[l>>2]=w;c[l+4>>2]=e;o=Yf(s,l)|0;l=c[(c[r>>2]|0)+60>>2]|0;if((o|0)==0){c[b+4>>2]=l;c[b+8>>2]=1;n=b+12|0;c[n>>2]=w;c[n+4>>2]=e;a[b|0]=1;i=f;return}else{e=c[o+8>>2]|0;c[b+4>>2]=l;c[b+8>>2]=2;c[b+12>>2]=e;a[b|0]=1;i=f;return}break};case 13:{e=u|0|0;l=v-1|v&0;c[m>>2]=e;c[m+4>>2]=l;o=Yf(s,m)|0;m=c[(c[r>>2]|0)+60>>2]|0;if((o|0)==0){c[b+4>>2]=m;c[b+8>>2]=1;n=b+12|0;c[n>>2]=e;c[n+4>>2]=l;a[b|0]=1;i=f;return}else{l=c[o+8>>2]|0;c[b+4>>2]=m;c[b+8>>2]=2;c[b+12>>2]=l;a[b|0]=1;i=f;return}break};case 16:{l=u+1|u&0;m=v|0|0;c[j>>2]=l;c[j+4>>2]=m;o=Yf(s,j)|0;j=c[(c[r>>2]|0)+60>>2]|0;if((o|0)==0){c[b+4>>2]=j;c[b+8>>2]=1;n=b+12|0;c[n>>2]=l;c[n+4>>2]=m;a[b|0]=1;i=f;return}else{m=c[o+8>>2]|0;c[b+4>>2]=j;c[b+8>>2]=2;c[b+12>>2]=m;a[b|0]=1;i=f;return}break};case 17:{m=u-1|0;j=v-1|0;c[h>>2]=m;c[h+4>>2]=j;o=Yf(s,h)|0;h=c[(c[r>>2]|0)+60>>2]|0;if((o|0)==0){c[b+4>>2]=h;c[b+8>>2]=1;n=b+12|0;c[n>>2]=m;c[n+4>>2]=j;a[b|0]=1;i=f;return}else{j=c[o+8>>2]|0;c[b+4>>2]=h;c[b+8>>2]=2;c[b+12>>2]=j;a[b|0]=1;i=f;return}break};case 18:{j=u+1|0;h=v-1|0;c[g>>2]=j;c[g+4>>2]=h;o=Yf(s,g)|0;g=c[(c[r>>2]|0)+60>>2]|0;if((o|0)==0){c[b+4>>2]=g;c[b+8>>2]=1;n=b+12|0;c[n>>2]=j;c[n+4>>2]=h;a[b|0]=1;i=f;return}else{h=c[o+8>>2]|0;c[b+4>>2]=g;c[b+8>>2]=2;c[b+12>>2]=h;a[b|0]=1;i=f;return}break};case 19:{h=u-1|0;g=v+1|0;c[p>>2]=h;c[p+4>>2]=g;o=Yf(s,p)|0;p=c[(c[r>>2]|0)+60>>2]|0;if((o|0)==0){c[b+4>>2]=p;c[b+8>>2]=1;n=b+12|0;c[n>>2]=h;c[n+4>>2]=g;a[b|0]=1;i=f;return}else{g=c[o+8>>2]|0;c[b+4>>2]=p;c[b+8>>2]=2;c[b+12>>2]=g;a[b|0]=1;i=f;return}break};case 20:{g=u+1|0;u=v+1|0;c[q>>2]=g;c[q+4>>2]=u;v=Yf(s,q)|0;q=c[(c[r>>2]|0)+60>>2]|0;if((v|0)==0){c[b+4>>2]=q;c[b+8>>2]=1;r=b+12|0;c[r>>2]=g;c[r+4>>2]=u;a[b|0]=1;i=f;return}else{u=c[v+8>>2]|0;c[b+4>>2]=q;c[b+8>>2]=2;c[b+12>>2]=u;a[b|0]=1;i=f;return}break};default:{}}a[b|0]=0;i=f;return}function Ii(a){a=a|0;return}function Ji(a){a=a|0;pe(a,12);return}function Ki(a){a=a|0;return 0}function Li(a){a=a|0;return}function Mi(a){a=a|0;pe(a,8);return}function Ni(a){a=a|0;var b=0,d=0;b=Lt(8)|0;if((b|0)==0){d=b;return d|0}c[b>>2]=4608;c[b+4>>2]=c[a+4>>2];d=b;return d|0}function Oi(a,b){a=a|0;b=b|0;if((b|0)==0){return}c[b>>2]=4608;c[b+4>>2]=c[a+4>>2];return}function Pi(a){a=a|0;return}function Qi(a){a=a|0;Nt(a);return}function Ri(b,d){b=b|0;d=d|0;a[(c[b+4>>2]|0)+8|0]=(a[d]|0)!=0|0;return}function Si(a,b){a=a|0;b=b|0;var d=0;if((c[b+4>>2]|0)!=4744){d=0;return d|0}d=a+4|0;return d|0}function Ti(a){a=a|0;return 5184}function Ui(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=(c[d>>2]|0)-f>>2;h=g+1|0;if(h>>>0>1073741823>>>0){Ep(a)}i=a+8|0;a=(c[i>>2]|0)-f|0;if(a>>2>>>0<536870911>>>0){f=a>>1;a=f>>>0<h>>>0?h:f;if((a|0)==0){j=0;k=0}else{l=a;m=5}}else{l=1073741823;m=5}if((m|0)==5){j=Lt(l<<2)|0;k=l}l=j+(g<<2)|0;m=j+(k<<2)|0;if((l|0)!=0){c[l>>2]=c[b>>2]}b=j+(h<<2)|0;h=c[e>>2]|0;k=c[d>>2]|0;if((k|0)!=(h|0)){a=g-1-((k-4-h|0)>>>2)|0;g=k;k=l;while(1){g=g-4|0;f=g|0;n=c[f>>2]|0;c[f>>2]=0;c[k-4>>2]=n;if((g|0)==(h|0)){break}else{k=k-4|0}}k=c[e>>2]|0;g=c[d>>2]|0;c[e>>2]=j+(a<<2);c[d>>2]=b;c[i>>2]=m;if((g|0)==(k|0)){o=k}else{a=g;while(1){g=a-4|0;j=g|0;n=c[j>>2]|0;c[j>>2]=0;if((n|0)!=0){zd[c[(c[n>>2]|0)+4>>2]&511](n)}if((g|0)==(k|0)){o=k;break}else{a=g}}}}else{c[e>>2]=l;c[d>>2]=b;c[i>>2]=m;o=h}if((o|0)==0){return}Nt(o);return}function Vi(a,b){a=a|0;b=b|0;eu(a|0,0,24)|0;c[a+24>>2]=b;return}function Wi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+8|0;f=e|0;g=c[b+24>>2]|0;h=b+4|0;j=c[h>>2]|0;if((c[b>>2]|0)==(j|0)){c[f>>2]=0}else{c[f>>2]=c[j-20>>2]}Xi(b,d,g,f);f=c[h>>2]|0;if((f|0)==(c[b+8>>2]|0)){Zi(b|0,d);i=e;return}if((f|0)==0){k=0}else{c[f>>2]=c[d>>2];b=f+4|0;g=d+4|0;if((a[g]&1)==0){j=b;c[j>>2]=c[g>>2];c[j+4>>2]=c[g+4>>2];c[j+8>>2]=c[g+8>>2]}else{g=c[d+12>>2]|0;j=c[d+8>>2]|0;if(j>>>0>4294967279>>>0){Dk(b)}if(j>>>0<11>>>0){a[b]=j<<1;l=b+1|0}else{m=j+16&-16;n=Lt(m)|0;c[f+12>>2]=n;c[b>>2]=m|1;c[f+8>>2]=j;l=n}du(l|0,g|0,j)|0;a[l+j|0]=0}c[f+16>>2]=c[d+16>>2];k=c[h>>2]|0}c[h>>2]=k+20;i=e;return}function Xi(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;g=i;i=i+80|0;h=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[h>>2];h=g|0;j=g+16|0;k=g+32|0;l=g+48|0;m=g+56|0;n=g+64|0;o=g+72|0;p=e-2|0;e=d+4|0;if((a[e]&1)==0){q=j;c[q>>2]=c[e>>2];c[q+4>>2]=c[e+4>>2];c[q+8>>2]=c[e+8>>2]}else{e=c[d+12>>2]|0;q=c[d+8>>2]|0;if(q>>>0>4294967279>>>0){Dk(j)}if(q>>>0<11>>>0){a[j]=q<<1;r=j+1|0}else{s=q+16&-16;t=Lt(s)|0;c[j+8>>2]=t;c[j>>2]=s|1;c[j+4>>2]=q;r=t}du(r|0,e|0,q)|0;a[r+q|0]=0}jf(h,j,p);if(!((a[j]&1)==0)){Nt(c[j+8>>2]|0)}j=h|0;p=c[j>>2]|0;q=h+4|0;h=c[q>>2]|0;if((p|0)==(h|0)){u=p}else{r=k;e=p;do{$k(k,3064,e);p=e;if((a[p]&1)==0){a[e+1|0]=0;a[p]=0}else{a[c[e+8>>2]|0]=0;c[e+4>>2]=0}Nk(e,0);c[p>>2]=c[r>>2];c[p+4>>2]=c[r+4>>2];c[p+8>>2]=c[r+8>>2];eu(r|0,0,12)|0;e=e+12|0}while((e|0)!=(h|0));if((c[d>>2]|0)!=(c[f>>2]|0)){f=c[j>>2]|0;if((a[f]&1)==0){v=f+1|0}else{v=c[f+8>>2]|0}a[v]=95}c[l>>2]=c[b+16>>2];c[m>>2]=c[j>>2];c[n>>2]=c[q>>2];_i(o,b+12|0,l,m,n);u=c[j>>2]|0}if((u|0)==0){i=g;return}n=c[q>>2]|0;if((n|0)==(u|0)){w=u}else{m=n;while(1){n=m-12|0;c[q>>2]=n;if((a[n]&1)==0){x=n}else{Nt(c[m-12+8>>2]|0);x=c[q>>2]|0}if((x|0)==(u|0)){break}else{m=x}}w=c[j>>2]|0}Nt(w);i=g;return}function Yi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+8|0;f=e|0;g=b+24|0;if((c[g>>2]|0)==(d|0)){h=b+12|0;i=e;return h|0}j=c[b+12>>2]|0;k=b+16|0;l=c[k>>2]|0;if((l|0)!=(j|0)){m=l;while(1){l=m-12|0;c[k>>2]=l;if((a[l]&1)==0){n=l}else{Nt(c[m-12+8>>2]|0);n=c[k>>2]|0}if((n|0)==(j|0)){break}else{m=n}}}c[g>>2]=d;n=c[b>>2]|0;m=c[b+4>>2]|0;if((n|0)==(m|0)){h=b+12|0;i=e;return h|0}j=f|0;c[j>>2]=0;Xi(b,n,d,f);k=n+20|0;if((k|0)!=(m|0)){l=n;n=k;while(1){k=c[g>>2]|0;c[j>>2]=c[l>>2];Xi(b,n,k,f);k=n+20|0;if((k|0)==(m|0)){break}else{l=n;n=k}}}if((c[g>>2]|0)==(d|0)){h=b+12|0;i=e;return h|0}else{Vc(c[r>>2]|0,1656,(h=i,i=i+24|0,c[h>>2]=3704,c[h+8>>2]=21,c[h+16>>2]=3856,h)|0)|0;i=h;Uc();return 0}return 0}function Zi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=b+4|0;f=b|0;g=c[f>>2]|0;h=((c[e>>2]|0)-g|0)/20|0;i=h+1|0;if(i>>>0>214748364>>>0){Ep(b)}j=b+8|0;b=((c[j>>2]|0)-g|0)/20|0;if(b>>>0<107374182>>>0){g=b<<1;b=g>>>0<i>>>0?i:g;if((b|0)==0){k=0;l=0}else{m=b;n=5}}else{m=214748364;n=5}if((n|0)==5){k=Lt(m*20|0)|0;l=m}m=k+(h*20|0)|0;n=k+(l*20|0)|0;if((m|0)!=0){c[m>>2]=c[d>>2];l=k+(h*20|0)+4|0;b=d+4|0;if((a[b]&1)==0){g=l;c[g>>2]=c[b>>2];c[g+4>>2]=c[b+4>>2];c[g+8>>2]=c[b+8>>2]}else{b=c[d+12>>2]|0;g=c[d+8>>2]|0;if(g>>>0>4294967279>>>0){Dk(l)}if(g>>>0<11>>>0){a[l]=g<<1;o=l+1|0}else{p=g+16&-16;q=Lt(p)|0;c[k+(h*20|0)+12>>2]=q;c[l>>2]=p|1;c[k+(h*20|0)+8>>2]=g;o=q}du(o|0,b|0,g)|0;a[o+g|0]=0}c[k+(h*20|0)+16>>2]=c[d+16>>2]}d=k+(i*20|0)|0;i=c[f>>2]|0;g=c[e>>2]|0;if((g|0)!=(i|0)){o=h-1-(((g-20-i|0)>>>0)/20|0)|0;h=g;g=m;while(1){b=h;h=h-20|0;c[g-20>>2]=c[h>>2];q=g-20+4|0;p=b-20+4|0;c[q>>2]=c[p>>2];c[q+4>>2]=c[p+4>>2];c[q+8>>2]=c[p+8>>2];eu(p|0,0,12)|0;c[g-20+16>>2]=c[b-20+16>>2];if((h|0)==(i|0)){break}else{g=g-20|0}}g=c[f>>2]|0;h=c[e>>2]|0;c[f>>2]=k+(o*20|0);c[e>>2]=d;c[j>>2]=n;if((h|0)==(g|0)){r=g}else{o=h;while(1){h=o-20|0;if(!((a[o-20+4|0]&1)==0)){Nt(c[o-20+12>>2]|0)}if((h|0)==(g|0)){r=g;break}else{o=h}}}}else{c[f>>2]=m;c[e>>2]=d;c[j>>2]=n;r=i}if((r|0)==0){return}Nt(r);return}function _i(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;h=i;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[j>>2];j=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[j>>2];j=d|0;k=c[j>>2]|0;l=k;m=(c[e>>2]|0)-l|0;e=(m|0)/12|0;n=k+(e*12|0)|0;o=f|0;f=c[o>>2]|0;p=c[g>>2]|0;g=p-f|0;q=(g|0)/12|0;if((g|0)<=0){r=n;s=b|0;c[s>>2]=r;i=h;return}g=d+8|0;t=d+4|0;u=c[t>>2]|0;v=c[g>>2]|0;w=u;if((q|0)<=((v-w|0)/12|0|0)){x=(w-n|0)/12|0;a:do{if((q|0)>(x|0)){y=f+(x*12|0)|0;if((y|0)==(p|0)){z=x;A=p;B=u}else{C=y;D=u;b:while(1){do{if((D|0)!=0){E=C;if((a[E]&1)==0){F=D;c[F>>2]=c[E>>2];c[F+4>>2]=c[E+4>>2];c[F+8>>2]=c[E+8>>2];break}E=c[C+8>>2]|0;F=c[C+4>>2]|0;if(F>>>0>4294967279>>>0){break b}if(F>>>0<11>>>0){a[D]=F<<1;G=D+1|0}else{H=F+16&-16;I=Lt(H)|0;c[D+8>>2]=I;c[D>>2]=H|1;c[D+4>>2]=F;G=I}du(G|0,E|0,F)|0;a[G+F|0]=0}}while(0);F=(c[t>>2]|0)+12|0;c[t>>2]=F;E=C+12|0;if((E|0)==(p|0)){z=x;A=y;B=F;break a}else{C=E;D=F}}Dk(D)}}else{z=q;A=p;B=u}}while(0);if((z|0)<=0){r=n;s=b|0;c[s>>2]=r;i=h;return}z=k+((q+e|0)*12|0)|0;x=k+((((B-z|0)/12|0)+e|0)*12|0)|0;if(x>>>0<u>>>0){G=x;C=B;do{if((C|0)==0){J=0}else{y=C;F=G;c[y>>2]=c[F>>2];c[y+4>>2]=c[F+4>>2];c[y+8>>2]=c[F+8>>2];eu(F|0,0,12)|0;J=c[t>>2]|0}G=G+12|0;C=J+12|0;c[t>>2]=C}while(G>>>0<u>>>0)}if((B|0)==(z|0)){K=f}else{z=x;x=B;do{B=x;x=x-12|0;z=z-12|0;u=x;if((a[u]&1)==0){a[x+1|0]=0;a[u]=0}else{a[c[B-12+8>>2]|0]=0;c[B-12+4>>2]=0}Nk(x,0);B=z;c[u>>2]=c[B>>2];c[u+4>>2]=c[B+4>>2];c[u+8>>2]=c[B+8>>2];eu(B|0,0,12)|0}while((z|0)!=(n|0));K=c[o>>2]|0}if((K|0)==(A|0)){r=n;s=b|0;c[s>>2]=r;i=h;return}else{L=n;M=K}while(1){if((L|0)!=(M|0)){K=a[M]|0;if((K&1)==0){N=(K&255)>>>1;O=M+1|0}else{N=c[M+4>>2]|0;O=c[M+8>>2]|0}Kk(L,O,N)|0}K=M+12|0;if((K|0)==(A|0)){r=n;break}else{L=L+12|0;M=K}}s=b|0;c[s>>2]=r;i=h;return}M=((w-l|0)/12|0)+q|0;if(M>>>0>357913941>>>0){Ep(d)}d=(v-l|0)/12|0;if(d>>>0<178956970>>>0){l=d<<1;d=l>>>0<M>>>0?M:l;l=(m|0)/12|0;if((d|0)==0){P=0;Q=0;R=l}else{S=d;T=l;U=40}}else{S=357913941;T=(m|0)/12|0;U=40}if((U|0)==40){P=Lt(S*12|0)|0;Q=S;R=T}T=P+(R*12|0)|0;S=P+(Q*12|0)|0;c:do{if((f|0)==(p|0)){V=T}else{Q=f;U=T;d:while(1){do{if((U|0)!=0){m=Q;if((a[m]&1)==0){l=U;c[l>>2]=c[m>>2];c[l+4>>2]=c[m+4>>2];c[l+8>>2]=c[m+8>>2];break}m=c[Q+8>>2]|0;l=c[Q+4>>2]|0;if(l>>>0>4294967279>>>0){break d}if(l>>>0<11>>>0){a[U]=l<<1;W=U+1|0}else{d=l+16&-16;M=Lt(d)|0;c[U+8>>2]=M;c[U>>2]=d|1;c[U+4>>2]=l;W=M}du(W|0,m|0,l)|0;a[W+l|0]=0}}while(0);l=U+12|0;m=Q+12|0;if((m|0)==(p|0)){V=l;break c}else{Q=m;U=l}}Dk(U)}}while(0);p=c[j>>2]|0;if((p|0)==(n|0)){X=T}else{W=R-1-(((k+((e-1|0)*12|0)-p|0)>>>0)/12|0)|0;e=n;k=T;do{k=k-12|0;e=e-12|0;R=k;f=e;c[R>>2]=c[f>>2];c[R+4>>2]=c[f+4>>2];c[R+8>>2]=c[f+8>>2];eu(f|0,0,12)|0}while((e|0)!=(p|0));X=P+(W*12|0)|0}W=c[t>>2]|0;if((W|0)==(n|0)){Y=V;Z=n}else{P=n;n=V;do{if((n|0)==0){_=0}else{V=n;p=P;c[V>>2]=c[p>>2];c[V+4>>2]=c[p+4>>2];c[V+8>>2]=c[p+8>>2];eu(p|0,0,12)|0;_=n}P=P+12|0;n=_+12|0}while((P|0)!=(W|0));Y=n;Z=c[t>>2]|0}n=c[j>>2]|0;c[j>>2]=X;c[t>>2]=Y;c[g>>2]=S;if((Z|0)!=(n|0)){S=Z;do{Z=S;S=S-12|0;if(!((a[S]&1)==0)){Nt(c[Z-12+8>>2]|0)}}while((S|0)!=(n|0))}if((n|0)==0){r=T;s=b|0;c[s>>2]=r;i=h;return}Nt(n);r=T;s=b|0;c[s>>2]=r;i=h;return}function $i(a,b){a=a|0;b=b|0;var d=0;d=a;a=22184+(b<<4)|0;c[d>>2]=c[a>>2];c[d+4>>2]=c[a+4>>2];c[d+8>>2]=c[a+8>>2];c[d+12>>2]=c[a+12>>2];return}function aj(){var a=0;eu(22184|0,0|0,16|0)|0;c[5550]=1;c[5551]=57856;c[5552]=7;c[5553]=1;c[5554]=2;c[5555]=57857;c[5556]=14;c[5557]=1;c[5558]=3;c[5559]=61;c[5560]=7;c[5561]=1;c[5562]=4;c[5563]=57872;c[5564]=7;c[5565]=2;c[5566]=5;c[5567]=46;c[5568]=7;c[5569]=2;c[5570]=6;c[5571]=43;c[5572]=7;c[5573]=1;a;return}function bj(){var a=0,b=0;c[5482]=0;c[5483]=3488;c[5484]=1;c[5485]=1;c[5486]=5;a=21948;c[a>>2]=0;c[a+4>>2]=0;c[5489]=5;c[5490]=0;c[5491]=0;c[5492]=10;c[5493]=1;c[5494]=3784;c[5495]=1;c[5496]=1;c[5497]=10;a=21992;c[a>>2]=0;c[a+4>>2]=0;c[5500]=5;c[5501]=10;c[5502]=0;c[5503]=10;c[5504]=2;c[5505]=3032;c[5506]=1;c[5507]=1;c[5508]=20;a=22036;c[a>>2]=0;c[a+4>>2]=0;c[5511]=5;c[5512]=15;c[5513]=0;c[5514]=15;b;return}function cj(){if((a[27104]|0)!=0){return 25120}if((Lb(27104)|0)==0){return 25120}if((a[27112]|0)==0?(Lb(27112)|0)!=0:0){Qe(25144)}df(25120,25144);qb(252,25120,v|0)|0;return 25120}function dj(){var b=0,d=0,e=0,f=0,g=0;b=i;i=i+24|0;d=b|0;if((a[27120]|0)!=0){i=b;return 25168}if((Lb(27120)|0)==0){i=b;return 25168}cj()|0;Zg(d|0,25120);e=d+12|0;f=25132;g=c[f+4>>2]|0;c[e>>2]=c[f>>2];c[e+4>>2]=g;Uf(25168,d);g=c[d>>2]|0;if((g|0)!=0){e=d+4|0;d=c[e>>2]|0;if((d|0)!=(g|0)){c[e>>2]=d+(~((d-4-g|0)>>>2)<<2)}Nt(g)}qb(358,25168,v|0)|0;i=b;return 25168}function ej(){var a=0,b=0;a=i;i=i+80|0;b=a|0;yf(b);du(22104,b|0,80)|0;i=a;return}function fj(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;a=i;i=i+48|0;b=a|0;d=a+24|0;e=b+16|0;f=b;c[e>>2]=f;c[b>>2]=8704;c[b+4>>2]=2;g=d+16|0;h=d;c[g>>2]=h;c[d>>2]=8760;c[d+4>>2]=46;j=ne(b,d)|0;k=c[g>>2]|0;if((k|0)!=(h|0)){if((k|0)!=0){zd[c[(c[k>>2]|0)+20>>2]&511](k)}}else{zd[c[(c[d>>2]|0)+16>>2]&511](h)}h=c[e>>2]|0;if((h|0)==(f|0)){zd[c[(c[b>>2]|0)+16>>2]&511](f);i=a;return j|0}if((h|0)==0){i=a;return j|0}zd[c[(c[h>>2]|0)+20>>2]&511](h);i=a;return j|0}function gj(){fj()|0;return}function hj(){var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;b=i;i=i+80|0;d=b+16|0;e=b+24|0;f=b+32|0;g=b+56|0;h=b+72|0;j=h;k=i;i=i+16|0;l=i;i=i+8|0;m=l;n=i;i=i+8|0;o=n;p=i;i=i+16|0;q=i;i=i+8|0;r=q;s=i;i=i+8|0;t=s;u=i;i=i+16|0;c[6710]=2;fe();v=g+12|0;w=k|0;x=k+4|0;y=k+8|0;z=5;A=5;while(1){cj()|0;B=(ha(c[6283]|0,z)|0)+A|0;$i(g,c[(c[6280]|0)+(B<<2)>>2]|0);if((c[v>>2]&1|0)==0){break}if((a[27112]|0)==0?(Lb(27112)|0)!=0:0){Qe(25144)}cj()|0;B=25132;C=c[B>>2]|0;D=c[B+4>>2]|0;c[w>>2]=0;c[x>>2]=0;c[y>>2]=C;c[y+4>>2]=D;Pe(j,25144,k);z=c[h+4>>2]|0;A=c[h>>2]|0}dj()|0;c[l>>2]=A;c[l+4>>2]=z;Vf(25168,m)|0;m=p|0;z=p+4|0;l=p+8|0;A=u|0;h=u+4|0;k=u+8|0;j=0;do{if((a[27112]|0)==0?(Lb(27112)|0)!=0:0){Qe(25144)}cj()|0;y=25132;x=c[y>>2]|0;w=c[y+4>>2]|0;c[m>>2]=0;c[z>>2]=0;c[l>>2]=x;c[l+4>>2]=w;Pe(o,25144,p);while(1){dj()|0;if((a[27112]|0)==0?(Lb(27112)|0)!=0:0){Qe(25144)}w=(Oe(25144)|0)&1^1;x=c[n+4>>2]|0;c[q>>2]=c[n>>2];c[q+4>>2]=x;if((Wf(25168,w,r)|0)!=0){break}if((a[27112]|0)==0?(Lb(27112)|0)!=0:0){Qe(25144)}cj()|0;w=25132;x=c[w>>2]|0;y=c[w+4>>2]|0;c[A>>2]=0;c[h>>2]=0;c[k>>2]=x;c[k+4>>2]=y;Pe(t,25144,u);y=c[s+4>>2]|0;c[n>>2]=c[s>>2];c[n+4>>2]=y}j=j+1|0}while((j|0)!=50);j=Lt(48)|0;n=j;s=f+16|0;u=f;c[s>>2]=u;c[f>>2]=4704;Xj(n,e,f);c[d>>2]=n;n=c[6659]|0;if(n>>>0<(c[6660]|0)>>>0){if((n|0)!=0){c[n>>2]=j}c[6659]=n+4}else{Yj(26632,d)}d=c[s>>2]|0;if((d|0)!=(u|0)){if((d|0)!=0){zd[c[(c[d>>2]|0)+20>>2]&511](d)}}else{zd[c[(c[f>>2]|0)+16>>2]&511](u)}jd(4,0,1);he();i=b;return 0}function ij(a){a=a|0;return}function jj(a){a=a|0;pe(a,8);return}function kj(a){a=a|0;var b=0,d=0;b=Lt(8)|0;if((b|0)==0){d=b;return d|0}c[b>>2]=8760;c[b+4>>2]=c[a+4>>2];d=b;return d|0}function lj(a,b){a=a|0;b=b|0;if((b|0)==0){return}c[b>>2]=8760;c[b+4>>2]=c[a+4>>2];return}function mj(a){a=a|0;return}function nj(a){a=a|0;Nt(a);return}function oj(a,b){a=a|0;b=b|0;return Ed[c[a+4>>2]&255](c[b>>2]|0)|0}function pj(a,b){a=a|0;b=b|0;var d=0;if((c[b+4>>2]|0)!=9832){d=0;return d|0}d=a+4|0;return d|0}function qj(a){a=a|0;return 18584}function rj(a){a=a|0;return}function sj(a){a=a|0;pe(a,8);return}function tj(a){a=a|0;var b=0,d=0;b=Lt(8)|0;if((b|0)==0){d=b;return d|0}c[b>>2]=8704;c[b+4>>2]=c[a+4>>2];d=b;return d|0}function uj(a,b){a=a|0;b=b|0;if((b|0)==0){return}c[b>>2]=8704;c[b+4>>2]=c[a+4>>2];return}function vj(a){a=a|0;return}function wj(a){a=a|0;Nt(a);return}function xj(a){a=a|0;return yd[c[a+4>>2]&3]()|0}function yj(a,b){a=a|0;b=b|0;var d=0;if((c[b+4>>2]|0)!=9824){d=0;return d|0}d=a+4|0;return d|0}function zj(a){a=a|0;return 18568}function Aj(a){a=a|0;return}function Bj(a){a=a|0;pe(a,8);return}function Cj(a){a=a|0;a=Lt(8)|0;if((a|0)!=0){c[a>>2]=4704}return a|0}function Dj(a,b){a=a|0;b=b|0;if((b|0)==0){return}c[b>>2]=4704;return}function Ej(a){a=a|0;return}function Fj(a){a=a|0;Nt(a);return}function Gj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;b=i;i=i+8|0;e=b|0;f=d+4|0;g=a[f]|0;h=c[d+12>>2]|0;eu(f|0,0,12)|0;do{if((c[d+16>>2]|0)!=2){dj()|0;f=Lt(12)|0;c[f>>2]=9360;c[f+4>>2]=25168;a[f+8|0]=0;c[e>>2]=f;j=c[6659]|0;if(!(j>>>0<(c[6660]|0)>>>0)){Zj(26632,e);break}if((j|0)!=0){c[j>>2]=f}c[6659]=j+4}}while(0);if((g&1)==0){i=b;return}Nt(h);i=b;return}function Hj(a,b){a=a|0;b=b|0;return((c[b+4>>2]|0)==4824?a+4|0:0)|0}function Ij(a){a=a|0;return 5200}function Jj(a){a=a|0;var b=0;c[a>>2]=9280;c[a+8>>2]=9320;b=c[a+40>>2]|0;if((b|0)!=(a+24|0)){if((b|0)!=0){zd[c[(c[b>>2]|0)+20>>2]&511](b)}}else{zd[c[(c[b>>2]|0)+16>>2]&511](b)}_j(a+12|0,c[a+16>>2]|0);return}function Kj(a){a=a|0;var b=0;c[a>>2]=9280;c[a+8>>2]=9320;b=c[a+40>>2]|0;if((b|0)!=(a+24|0)){if((b|0)!=0){zd[c[(c[b>>2]|0)+20>>2]&511](b)}}else{zd[c[(c[b>>2]|0)+16>>2]&511](b)}_j(a+12|0,c[a+16>>2]|0);pe(a,48);return}function Lj(a){a=a|0;return 0}function Mj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+208|0;f=e|0;g=e+160|0;h=e+176|0;j=e+184|0;k=e+200|0;Df(f,d,10);l=f|0;Ef(l);m=Lt(384)|0;n=g+8|0;c[n>>2]=m;c[g>>2]=385;c[g+4>>2]=371;du(m|0,568,371)|0;a[m+371|0]=0;c[h>>2]=1;c[h+4>>2]=1;Af(l,g,h,17);if(!((a[g]&1)==0)){Nt(c[n>>2]|0)}n=j|0;g=j+4|0;h=j+8|0;l=k|0;m=k+4|0;o=0;do{c[n>>2]=87;c[g>>2]=o;c[h>>2]=0;c[l>>2]=o;c[m>>2]=0;zf(d,j,k);o=o+1|0}while((o|0)!=16);Sj(b+8|0,f+80|0);i=e;return}function Nj(a,b){a=a|0;b=b|0;var d=0;d=a+8|0;return Bd[c[(c[d>>2]|0)+16>>2]&127](d,b)|0}function Oj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+8|0;e=b;b=i;i=i+8|0;c[b>>2]=c[e>>2];c[b+4>>2]=c[e+4>>2];e=d|0;f=b;b=c[f+4>>2]|0;c[e>>2]=c[f>>2];c[e+4>>2]=b;b=Uj(a+8|0,e)|0;i=d;return b|0}function Pj(a){a=a|0;var b=0;c[a>>2]=9320;b=c[a+32>>2]|0;if((b|0)!=(a+16|0)){if((b|0)!=0){zd[c[(c[b>>2]|0)+20>>2]&511](b)}}else{zd[c[(c[b>>2]|0)+16>>2]&511](b)}_j(a+4|0,c[a+8>>2]|0);return}function Qj(a){a=a|0;var b=0;c[a>>2]=9320;b=c[a+32>>2]|0;if((b|0)!=(a+16|0)){if((b|0)!=0){zd[c[(c[b>>2]|0)+20>>2]&511](b)}}else{zd[c[(c[b>>2]|0)+16>>2]&511](b)}_j(a+4|0,c[a+8>>2]|0);pe(a,40);return}function Rj(a){a=a|0;return 0}function Sj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;e=i;i=i+24|0;f=e|0;g=e+16|0;Ef(d);h=c[b+4>>2]|0;j=b+8|0;if((h|0)==(j|0)){i=e;return}b=f;k=f;l=k+1|0;m=k+2|0;k=g|0;n=g+4|0;o=f+8|0;p=f+4|0;q=f|0;r=h;h=0;while(1){a[b]=2;a[l]=32;a[m]=0;Pk(f,c[r+16>>2]&255);Ok(f,224)|0;s=r+20|0;t=a[s]|0;if((t&1)==0){u=(t&255)>>>1;v=s+1|0}else{u=c[r+24>>2]|0;v=c[r+28>>2]|0}s=a[b]|0;if((s&1)==0){w=10;x=s}else{s=c[q>>2]|0;w=(s&-2)-1|0;x=s&255}s=(x&1)==0;if(s){y=(x&255)>>>1}else{y=c[p>>2]|0}if(!((w-y|0)>>>0<u>>>0)){if((u|0)!=0){t=s?l:c[o>>2]|0;du(t+y|0,v|0,u)|0;s=y+u|0;if((a[b]&1)==0){a[b]=s<<1}else{c[p>>2]=s}a[t+s|0]=0}}else{Qk(f,w,u-w+y|0,y,y,0,u,v)}c[k>>2]=0;c[n>>2]=h;Af(d,f,g,7);h=h+1|0;if(!((a[b]&1)==0)){Nt(c[o>>2]|0)}s=c[r+4>>2]|0;if((s|0)==0){t=r|0;while(1){z=c[t+8>>2]|0;if((c[z>>2]|0)==(t|0)){A=z;break}else{t=z}}}else{t=s;while(1){z=c[t>>2]|0;if((z|0)==0){A=t;break}else{t=z}}}if((A|0)==(j|0)){break}else{r=A}}i=e;return}function Tj(a,b){a=a|0;b=b|0;return 0}function Uj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+24|0;f=d;d=i;i=i+8|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];f=e|0;g=c[b+8>>2]|0;h=b+8|0;if((g|0)==0){j=0;i=e;return j|0}k=c[d+4>>2]|0;d=g;g=h;a:while(1){l=d;while(1){m=l;if(!((c[l+16>>2]|0)>>>0<k>>>0)){break}n=c[l+4>>2]|0;if((n|0)==0){o=g;break a}else{l=n}}n=c[l>>2]|0;if((n|0)==0){o=m;break}else{d=n;g=m}}if((o|0)==(h|0)){j=0;i=e;return j|0}h=c[o+16>>2]|0;if(k>>>0<h>>>0){j=0;i=e;return j|0}c[f>>2]=h;h=f+4|0;k=o+20|0;if((a[k]&1)==0){m=h;c[m>>2]=c[k>>2];c[m+4>>2]=c[k+4>>2];c[m+8>>2]=c[k+8>>2]}else{k=c[o+28>>2]|0;m=c[o+24>>2]|0;if(m>>>0>4294967279>>>0){Dk(h);return 0}if(m>>>0<11>>>0){a[h]=m<<1;p=h+1|0}else{g=m+16&-16;d=Lt(g)|0;c[f+12>>2]=d;c[h>>2]=g|1;c[f+8>>2]=m;p=d}du(p|0,k|0,m)|0;a[p+m|0]=0}c[f+16>>2]=c[o+32>>2];o=c[b+32>>2]|0;if((o|0)==0){b=dd(4)|0;c[b>>2]=7344;ac(b|0,19560,246);return 0}Ad[c[(c[o>>2]|0)+24>>2]&127](o,f);if((a[h]&1)==0){j=1;i=e;return j|0}Nt(c[f+12>>2]|0);j=1;i=e;return j|0}function Vj(a){a=a|0;var b=0,d=0;b=c[a>>2]|0;if((b|0)==0){return}d=a+4|0;a=c[d>>2]|0;if((a|0)!=(b|0)){c[d>>2]=a+(~((a-4-b|0)>>>2)<<2)}Nt(b);return}function Wj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=b+80|0;e=c[d>>2]|0;if((e|0)!=0){f=b+84|0;g=c[f>>2]|0;if((g|0)==(e|0)){h=e}else{i=g;while(1){g=i-12|0;c[f>>2]=g;if((a[g]&1)==0){j=g}else{Nt(c[i-12+8>>2]|0);j=c[f>>2]|0}if((j|0)==(e|0)){break}else{i=j}}h=c[d>>2]|0}Nt(h)}h=b+68|0;d=c[h>>2]|0;if((d|0)!=0){j=b+72|0;i=c[j>>2]|0;if((i|0)==(d|0)){k=d}else{e=i;while(1){i=e-20|0;c[j>>2]=i;if((a[e-20+4|0]&1)==0){l=i}else{Nt(c[e-20+12>>2]|0);l=c[j>>2]|0}if((l|0)==(d|0)){break}else{e=l}}k=c[h>>2]|0}Nt(k)}k=b+60|0;h=c[k>>2]|0;c[k>>2]=0;if((h|0)!=0){_g(h|0);pe(h,4744)}h=b+56|0;k=c[h>>2]|0;c[h>>2]=0;if((k|0)!=0){pe(k,8)}k=c[b+36>>2]|0;if((k|0)!=0){h=b+40|0;l=c[h>>2]|0;if((l|0)!=(k|0)){c[h>>2]=l+(~((l-4-k|0)>>>2)<<2)}Nt(k)}k=b+24|0;l=c[b+28>>2]|0;if((l|0)!=0){h=l;l=c[k>>2]|0;while(1){h=h-1|0;$g(l);if((h|0)==0){break}else{l=l+8|0}}}if((c[b+32>>2]|0)!=0){Nt(c[k>>2]|0)}k=c[b>>2]|0;if((k|0)==0){return}l=b+4|0;b=c[l>>2]|0;if((b|0)!=(k|0)){c[l>>2]=b+(~((b-4-k|0)>>>2)<<2)}Nt(k);return}function Xj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;i=i+96|0;f=d|0;g=d+24|0;h=d+40|0;j=d+48|0;k=d+64|0;l=d+72|0;m=d+88|0;c[b>>2]=9280;n=c[e+16>>2]|0;do{if((n|0)!=0){if((n|0)==(e|0)){o=f;p=f+16|0;c[p>>2]=o;Ad[c[(c[n>>2]|0)+12>>2]&127](n,o);q=c[p>>2]|0;break}else{p=Ed[c[(c[n>>2]|0)+8>>2]&255](n)|0;c[f+16>>2]=p;q=p;break}}else{c[f+16>>2]=0;q=0}}while(0);c[b+8>>2]=9320;c[b+16>>2]=0;c[b+20>>2]=0;c[b+12>>2]=b+16;n=b+24|0;e=f+16|0;do{if((q|0)!=0){p=f;if((q|0)!=(p|0)){c[b+40>>2]=q;c[e>>2]=0;break}o=n;c[b+40>>2]=o;Ad[c[(c[q>>2]|0)+12>>2]&127](q,o);o=c[e>>2]|0;if((o|0)==(p|0)){zd[c[(c[o>>2]|0)+16>>2]&511](o);break}if((o|0)!=0){zd[c[(c[o>>2]|0)+20>>2]&511](o)}}else{c[b+40>>2]=0}}while(0);e=b+12|0;a[g]=8;b=g;q=b+1|0;D=2036427856;a[q]=D;D=D>>8;a[q+1|0]=D;D=D>>8;a[q+2|0]=D;D=D>>8;a[q+3|0]=D;a[b+5|0]=0;c[h>>2]=0;$j(e,112,g,h);a[j]=8;h=j;g=h+1|0;D=1886152008;a[g]=D;D=D>>8;a[g+1|0]=D;D=D>>8;a[g+2|0]=D;D=D>>8;a[g+3|0]=D;a[h+5|0]=0;c[k>>2]=1;$j(e,104,j,k);a[l]=8;k=l;j=k+1|0;D=1953068369;a[j]=D;D=D>>8;a[j+1|0]=D;D=D>>8;a[j+2|0]=D;D=D>>8;a[j+3|0]=D;a[k+5|0]=0;c[m>>2]=2;$j(e,113,l,m);i=d;return}function Yj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=(c[d>>2]|0)-f>>2;h=g+1|0;if(h>>>0>1073741823>>>0){Ep(a)}i=a+8|0;a=(c[i>>2]|0)-f|0;if(a>>2>>>0<536870911>>>0){f=a>>1;a=f>>>0<h>>>0?h:f;if((a|0)==0){j=0;k=0}else{l=a;m=5}}else{l=1073741823;m=5}if((m|0)==5){j=Lt(l<<2)|0;k=l}l=j+(g<<2)|0;m=j+(k<<2)|0;if((l|0)!=0){c[l>>2]=c[b>>2]}b=j+(h<<2)|0;h=c[e>>2]|0;k=c[d>>2]|0;if((k|0)!=(h|0)){a=g-1-((k-4-h|0)>>>2)|0;g=k;k=l;while(1){g=g-4|0;f=g|0;n=c[f>>2]|0;c[f>>2]=0;c[k-4>>2]=n;if((g|0)==(h|0)){break}else{k=k-4|0}}k=c[e>>2]|0;g=c[d>>2]|0;c[e>>2]=j+(a<<2);c[d>>2]=b;c[i>>2]=m;if((g|0)==(k|0)){o=k}else{a=g;while(1){g=a-4|0;j=g|0;n=c[j>>2]|0;c[j>>2]=0;if((n|0)!=0){zd[c[(c[n>>2]|0)+4>>2]&511](n)}if((g|0)==(k|0)){o=k;break}else{a=g}}}}else{c[e>>2]=l;c[d>>2]=b;c[i>>2]=m;o=h}if((o|0)==0){return}Nt(o);return}function Zj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=(c[d>>2]|0)-f>>2;h=g+1|0;if(h>>>0>1073741823>>>0){Ep(a)}i=a+8|0;a=(c[i>>2]|0)-f|0;if(a>>2>>>0<536870911>>>0){f=a>>1;a=f>>>0<h>>>0?h:f;if((a|0)==0){j=0;k=0}else{l=a;m=5}}else{l=1073741823;m=5}if((m|0)==5){j=Lt(l<<2)|0;k=l}l=j+(g<<2)|0;m=j+(k<<2)|0;if((l|0)!=0){c[l>>2]=c[b>>2]}b=j+(h<<2)|0;h=c[e>>2]|0;k=c[d>>2]|0;if((k|0)!=(h|0)){a=g-1-((k-4-h|0)>>>2)|0;g=k;k=l;while(1){g=g-4|0;f=g|0;n=c[f>>2]|0;c[f>>2]=0;c[k-4>>2]=n;if((g|0)==(h|0)){break}else{k=k-4|0}}k=c[e>>2]|0;g=c[d>>2]|0;c[e>>2]=j+(a<<2);c[d>>2]=b;c[i>>2]=m;if((g|0)==(k|0)){o=k}else{a=g;while(1){g=a-4|0;j=g|0;n=c[j>>2]|0;c[j>>2]=0;if((n|0)!=0){zd[c[(c[n>>2]|0)+4>>2]&511](n)}if((g|0)==(k|0)){o=k;break}else{a=g}}}}else{c[e>>2]=l;c[d>>2]=b;c[i>>2]=m;o=h}if((o|0)==0){return}Nt(o);return}function _j(b,d){b=b|0;d=d|0;if((d|0)==0){return}_j(b,c[d>>2]|0);_j(b,c[d+4>>2]|0);if(!((a[d+20|0]&1)==0)){Nt(c[d+28>>2]|0)}Nt(d);return}function $j(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+48|0;h=g|0;j=g+8|0;k=g+32|0;l=e;if((a[l]&1)==0){m=k;c[m>>2]=c[l>>2];c[m+4>>2]=c[l+4>>2];c[m+8>>2]=c[l+8>>2];n=m}else{m=c[e+8>>2]|0;l=c[e+4>>2]|0;if(l>>>0>4294967279>>>0){Dk(k)}if(l>>>0<11>>>0){e=k;a[e]=l<<1;o=k+1|0;p=e}else{e=l+16&-16;q=Lt(e)|0;c[k+8>>2]=q;c[k>>2]=e|1;c[k+4>>2]=l;o=q;p=k}du(o|0,m|0,l)|0;a[o+l|0]=0;n=p}p=c[f>>2]|0;c[k+12>>2]=p;c[j>>2]=d;d=j+4|0;c[d>>2]=c[n>>2];c[d+4>>2]=c[n+4>>2];c[d+8>>2]=c[n+8>>2];eu(n|0,0,12)|0;c[j+16>>2]=p;ak(h,b|0,j);if((a[d]&1)==0){i=g;return}Nt(c[j+12>>2]|0);i=g;return}function ak(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;f=i;i=i+8|0;g=f|0;h=Lt(36)|0;j=h;k=c[e>>2]|0;c[h+16>>2]=k;l=h+20|0;m=e+4|0;c[l>>2]=c[m>>2];c[l+4>>2]=c[m+4>>2];c[l+8>>2]=c[m+8>>2];eu(m|0,0,12)|0;c[h+32>>2]=c[e+16>>2];e=d+4|0;m=c[e>>2]|0;do{if((m|0)!=0){n=m;while(1){o=c[n+16>>2]|0;if(k>>>0<o>>>0){p=n|0;q=c[p>>2]|0;if((q|0)==0){r=4;break}else{n=q;continue}}if(!(o>>>0<k>>>0)){r=8;break}s=n+4|0;o=c[s>>2]|0;if((o|0)==0){r=7;break}else{n=o}}if((r|0)==4){c[g>>2]=n;t=p;u=n;break}else if((r|0)==7){c[g>>2]=n;t=s;u=n;break}else if((r|0)==8){c[g>>2]=n;t=g;u=n;break}}else{o=d+4|0;q=o;c[g>>2]=q;t=o|0;u=q}}while(0);g=c[t>>2]|0;r=g;if((g|0)==0){g=h;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=u;c[t>>2]=g;u=d|0;s=c[c[u>>2]>>2]|0;if((s|0)==0){v=g}else{c[u>>2]=s;v=c[t>>2]|0}ri(c[e>>2]|0,v);v=d+8|0;c[v>>2]=(c[v>>2]|0)+1;w=j;x=1}else{w=r;x=0}c[b>>2]=w;a[b+4|0]=x;if(x<<24>>24!=0|(h|0)==0){i=f;return}if(!((a[l]&1)==0)){Nt(c[h+28>>2]|0)}Nt(h);i=f;return}function bk(a){a=a|0;var b=0,d=0,e=0;a=c[o>>2]|0;Tr(25512,a,25640);c[6626]=7900;c[6628]=7920;c[6627]=0;el(26512,25512);c[6646]=0;c[6647]=-1;b=c[s>>2]|0;Ur(25416,b,25648);c[6560]=7804;c[6561]=7824;el(26244,25416);c[6579]=0;c[6580]=-1;d=c[r>>2]|0;Ur(25464,d,25656);c[6604]=7804;c[6605]=7824;el(26420,25464);c[6623]=0;c[6624]=-1;e=c[(c[(c[6604]|0)-12>>2]|0)+26440>>2]|0;c[6582]=7804;c[6583]=7824;el(26332,e);c[6601]=0;c[6602]=-1;c[(c[(c[6626]|0)-12>>2]|0)+26576>>2]=26240;e=(c[(c[6604]|0)-12>>2]|0)+26420|0;c[e>>2]=c[e>>2]|8192;c[(c[(c[6604]|0)-12>>2]|0)+26488>>2]=26240;Vr(25360,a,25664);c[6538]=7852;c[6540]=7872;c[6539]=0;el(26160,25360);c[6558]=0;c[6559]=-1;Wr(25264,b,25672);c[6468]=7756;c[6469]=7776;el(25876,25264);c[6487]=0;c[6488]=-1;Wr(25312,d,25680);c[6512]=7756;c[6513]=7776;el(26052,25312);c[6531]=0;c[6532]=-1;d=c[(c[(c[6512]|0)-12>>2]|0)+26072>>2]|0;c[6490]=7756;c[6491]=7776;el(25964,d);c[6509]=0;c[6510]=-1;c[(c[(c[6538]|0)-12>>2]|0)+26224>>2]=25872;d=(c[(c[6512]|0)-12>>2]|0)+26052|0;c[d>>2]=c[d>>2]|8192;c[(c[(c[6512]|0)-12>>2]|0)+26120>>2]=25872;return}function ck(a){a=a|0;Nl(26240)|0;Nl(26328)|0;Tl(25872)|0;Tl(25960)|0;return}function dk(a){a=a|0;return}function ek(a){a=a|0;var b=0;b=a+4|0;J=c[b>>2]|0,c[b>>2]=J+1,J;return}function fk(a){a=a|0;var b=0,d=0;b=a+4|0;if(((J=c[b>>2]|0,c[b>>2]=J+ -1,J)|0)!=0){d=0;return d|0}zd[c[(c[a>>2]|0)+8>>2]&511](a);d=1;return d|0}function gk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a>>2]=5760;d=fu(b|0)|0;e=Mt(d+13|0)|0;c[e+4>>2]=d;c[e>>2]=d;f=e+12|0;c[a+4>>2]=f;c[e+8>>2]=0;du(f|0,b|0,d+1|0)|0;return}function hk(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=5760;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((J=c[d>>2]|0,c[d>>2]=J+ -1,J)-1|0)>=0){e=a|0;f=a;Nt(f);return}Ot((c[b>>2]|0)-12|0);e=a|0;f=a;Nt(f);return}function ik(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=5760;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((J=c[d>>2]|0,c[d>>2]=J+ -1,J)-1|0)>=0){e=a|0;return}Ot((c[b>>2]|0)-12|0);e=a|0;return}function jk(a){a=a|0;return c[a+4>>2]|0}function kk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;c[b>>2]=5664;if((a[d]&1)==0){e=d+1|0}else{e=c[d+8>>2]|0}d=fu(e|0)|0;f=Mt(d+13|0)|0;c[f+4>>2]=d;c[f>>2]=d;g=f+12|0;c[b+4>>2]=g;c[f+8>>2]=0;du(g|0,e|0,d+1|0)|0;return}function lk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a>>2]=5664;d=fu(b|0)|0;e=Mt(d+13|0)|0;c[e+4>>2]=d;c[e>>2]=d;f=e+12|0;c[a+4>>2]=f;c[e+8>>2]=0;du(f|0,b|0,d+1|0)|0;return}function mk(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=5664;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((J=c[d>>2]|0,c[d>>2]=J+ -1,J)-1|0)>=0){e=a|0;f=a;Nt(f);return}Ot((c[b>>2]|0)-12|0);e=a|0;f=a;Nt(f);return}function nk(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=5664;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((J=c[d>>2]|0,c[d>>2]=J+ -1,J)-1|0)>=0){e=a|0;return}Ot((c[b>>2]|0)-12|0);e=a|0;return}function ok(a){a=a|0;return c[a+4>>2]|0}function pk(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=5760;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((J=c[d>>2]|0,c[d>>2]=J+ -1,J)-1|0)>=0){e=a|0;f=a;Nt(f);return}Ot((c[b>>2]|0)-12|0);e=a|0;f=a;Nt(f);return}function qk(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=5760;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((J=c[d>>2]|0,c[d>>2]=J+ -1,J)-1|0)>=0){e=a|0;f=a;Nt(f);return}Ot((c[b>>2]|0)-12|0);e=a|0;f=a;Nt(f);return}function rk(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=5664;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((J=c[d>>2]|0,c[d>>2]=J+ -1,J)-1|0)>=0){e=a|0;f=a;Nt(f);return}Ot((c[b>>2]|0)-12|0);e=a|0;f=a;Nt(f);return}function sk(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=d;c[a+4>>2]=b;return}function tk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+8|0;f=e|0;Fd[c[(c[a>>2]|0)+12>>2]&15](f,a,b);if((c[f+4>>2]|0)!=(c[d+4>>2]|0)){g=0;i=e;return g|0}g=(c[f>>2]|0)==(c[d>>2]|0);i=e;return g|0}function uk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((c[b+4>>2]|0)!=(a|0)){e=0;return e|0}e=(c[b>>2]|0)==(d|0);return e|0}function vk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;d=Cc(e|0)|0;e=fu(d|0)|0;if(e>>>0>4294967279>>>0){Dk(b)}if(e>>>0<11>>>0){a[b]=e<<1;f=b+1|0;du(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}else{h=e+16&-16;i=Lt(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=e;f=i;du(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}}function wk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+16|0;g=f|0;h=d|0;j=c[h>>2]|0;k=e;if((j|0)!=0){l=a[k]|0;if((l&1)==0){m=(l&255)>>>1}else{m=c[e+4>>2]|0}if((m|0)==0){n=j}else{Ok(e,2768)|0;n=c[h>>2]|0}h=c[d+4>>2]|0;Fd[c[(c[h>>2]|0)+24>>2]&15](g,h,n);n=g;h=a[n]|0;if((h&1)==0){o=(h&255)>>>1;p=g+1|0}else{o=c[g+4>>2]|0;p=c[g+8>>2]|0}h=a[k]|0;if((h&1)==0){q=10;r=h}else{h=c[e>>2]|0;q=(h&-2)-1|0;r=h&255}h=(r&1)==0;if(h){s=(r&255)>>>1}else{s=c[e+4>>2]|0}if(!((q-s|0)>>>0<o>>>0)){if((o|0)!=0){if(h){t=e+1|0}else{t=c[e+8>>2]|0}du(t+s|0,p|0,o)|0;h=s+o|0;if((a[k]&1)==0){a[k]=h<<1}else{c[e+4>>2]=h}a[t+h|0]=0}}else{Qk(e,q,o-q+s|0,s,s,0,o,p)}if(!((a[n]&1)==0)){Nt(c[g+8>>2]|0)}}g=b;c[g>>2]=c[k>>2];c[g+4>>2]=c[k+4>>2];c[g+8>>2]=c[k+8>>2];eu(k|0,0,12)|0;i=f;return}function xk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=d;d=i;i=i+8|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];g=f|0;h=f+16|0;j=fu(e|0)|0;if(j>>>0>4294967279>>>0){Dk(h)}if(j>>>0<11>>>0){a[h]=j<<1;k=h+1|0}else{l=j+16&-16;m=Lt(l)|0;c[h+8>>2]=m;c[h>>2]=l|1;c[h+4>>2]=j;k=m}du(k|0,e|0,j)|0;a[k+j|0]=0;wk(g,d,h);kk(b|0,g);if(!((a[g]&1)==0)){Nt(c[g+8>>2]|0)}if(!((a[h]&1)==0)){Nt(c[h+8>>2]|0)}c[b>>2]=8016;h=d;d=b+8|0;b=c[h+4>>2]|0;c[d>>2]=c[h>>2];c[d+4>>2]=b;i=f;return}function yk(a){a=a|0;nk(a|0);Nt(a);return}function zk(a){a=a|0;nk(a|0);return}function Ak(a){a=a|0;return}function Bk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;if(a>>>0<212>>>0){b=21008;d=48;a:while(1){e=d;while(1){if((e|0)==0){break a}f=(e|0)/2|0;if((c[b+(f<<2)>>2]|0)>>>0<a>>>0){break}else{e=f}}b=b+(f+1<<2)|0;d=e-1-f|0}g=c[b>>2]|0;return g|0}if(a>>>0>4294967291>>>0){b=dd(8)|0;lk(b,1200);c[b>>2]=5632;ac(b|0,18488,66);return 0}b=(a>>>0)/210|0;f=b*210|0;d=a-f|0;a=20816;h=48;b:while(1){i=h;while(1){if((i|0)==0){break b}j=(i|0)/2|0;if((c[a+(j<<2)>>2]|0)>>>0<d>>>0){break}else{i=j}}a=a+(j+1<<2)|0;h=i-1-j|0}j=a-20816>>2;a=b;b=j;h=(c[20816+(j<<2)>>2]|0)+f|0;c:while(1){f=5;while(1){j=c[21008+(f<<2)>>2]|0;d=(h>>>0)/(j>>>0)|0;if(d>>>0<j>>>0){g=h;k=120;break c}e=f+1|0;if((h|0)==(ha(d,j)|0)){break}if(e>>>0<47>>>0){f=e}else{k=21;break}}d:do{if((k|0)==21){k=0;if(h>>>0<44521>>>0){g=h;k=120;break c}f=211;i=(h>>>0)/211|0;while(1){if((h|0)==(ha(i,f)|0)){break d}e=f+10|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+12|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+16|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+18|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+22|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+28|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+30|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+36|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+40|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+42|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+46|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+52|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+58|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+60|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+66|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+70|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+72|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+78|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+82|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+88|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+96|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+100|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+102|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+106|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+108|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+112|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+120|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+126|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+130|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+136|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+138|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+142|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+148|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+150|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+156|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+162|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+166|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+168|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+172|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+178|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+180|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+186|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+190|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+192|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+196|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+198|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}if((h|0)==(ha(j,e)|0)){break d}e=f+208|0;j=(h>>>0)/(e>>>0)|0;if(j>>>0<e>>>0){g=h;k=120;break c}d=f+210|0;if((h|0)==(ha(j,e)|0)){break d}e=(h>>>0)/(d>>>0)|0;if(e>>>0<d>>>0){g=h;k=120;break c}else{f=d;i=e}}}}while(0);i=b+1|0;f=(i|0)==48;e=f?0:i;i=(f&1)+a|0;a=i;b=e;h=(c[20816+(e<<2)>>2]|0)+(i*210|0)|0}if((k|0)==120){return g|0}return 0}function Ck(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e;if((c[a>>2]|0)==1){do{cb(25592,25568)|0}while((c[a>>2]|0)==1)}if((c[a>>2]|0)!=0){f;return}c[a>>2]=1;g;zd[d&511](b);h;c[a>>2]=-1;i;wc(25592)|0;return}function Dk(a){a=a|0;a=dd(8)|0;gk(a,408);c[a>>2]=5728;ac(a|0,18536,60)}function Ek(a){a=a|0;a=dd(8)|0;gk(a,408);c[a>>2]=5696;ac(a|0,18520,12)}function Fk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=d;if((a[e]&1)==0){f=b;c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];return}e=c[d+8>>2]|0;f=c[d+4>>2]|0;if(f>>>0>4294967279>>>0){Dk(b)}if(f>>>0<11>>>0){a[b]=f<<1;g=b+1|0}else{d=f+16&-16;h=Lt(d)|0;c[b+8>>2]=h;c[b>>2]=d|1;c[b+4>>2]=f;g=h}du(g|0,e|0,f)|0;a[g+f|0]=0;return}function Gk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if(e>>>0>4294967279>>>0){Dk(b)}if(e>>>0<11>>>0){a[b]=e<<1;f=b+1|0;du(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}else{h=e+16&-16;i=Lt(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=e;f=i;du(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}}function Hk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(d>>>0>4294967279>>>0){Dk(b)}if(d>>>0<11>>>0){a[b]=d<<1;f=b+1|0}else{g=d+16&-16;h=Lt(g)|0;c[b+8>>2]=h;c[b>>2]=g|1;c[b+4>>2]=d;f=h}eu(f|0,e|0,d|0)|0;a[f+d|0]=0;return}function Ik(b){b=b|0;if((a[b]&1)==0){return}Nt(c[b+8>>2]|0);return}function Jk(a,b){a=a|0;b=b|0;return Kk(a,b,fu(b|0)|0)|0}function Kk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}if(!(h>>>0<e>>>0)){if((i&1)==0){j=b+1|0}else{j=c[b+8>>2]|0}gu(j|0,d|0,e|0)|0;a[j+e|0]=0;if((a[f]&1)==0){a[f]=e<<1;return b|0}else{c[b+4>>2]=e;return b|0}}if((-18-h|0)>>>0<(e-h|0)>>>0){Dk(b);return 0}if((i&1)==0){k=b+1|0}else{k=c[b+8>>2]|0}if(h>>>0<2147483623>>>0){i=h<<1;f=i>>>0>e>>>0?i:e;if(f>>>0<11>>>0){l=11}else{l=f+16&-16}}else{l=-17}f=Lt(l)|0;if((e|0)!=0){du(f|0,d|0,e)|0}if((h|0)!=10){Nt(k)}c[b+8>>2]=f;c[b>>2]=l|1;c[b+4>>2]=e;a[f+e|0]=0;return b|0}function Lk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b;g=a[f]|0;h=(g&1)==0;if(h){i=(g&255)>>>1}else{i=c[b+4>>2]|0}if(i>>>0<d>>>0){Mk(b,d-i|0,e)|0;return}if(h){a[b+1+d|0]=0;a[f]=d<<1;return}else{a[(c[b+8>>2]|0)+d|0]=0;c[b+4>>2]=d;return}}function Mk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if((d|0)==0){return b|0}f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}if((i&1)==0){j=(i&255)>>>1}else{j=c[b+4>>2]|0}if((h-j|0)>>>0<d>>>0){g=j+d|0;if((-17-h|0)>>>0<(g-h|0)>>>0){Dk(b);return 0}if((i&1)==0){k=b+1|0}else{k=c[b+8>>2]|0}if(h>>>0<2147483623>>>0){l=h<<1;m=g>>>0<l>>>0?l:g;if(m>>>0<11>>>0){n=11}else{n=m+16&-16}}else{n=-17}m=Lt(n)|0;if((j|0)!=0){du(m|0,k|0,j)|0}if((h|0)!=10){Nt(k)}c[b+8>>2]=m;m=n|1;c[b>>2]=m;o=m&255}else{o=i}if((o&1)==0){p=b+1|0}else{p=c[b+8>>2]|0}eu(p+j|0,e|0,d|0)|0;e=j+d|0;if((a[f]&1)==0){a[f]=e<<1}else{c[b+4>>2]=e}a[p+e|0]=0;return b|0}function Nk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if(d>>>0>4294967279>>>0){Dk(b)}e=b;f=a[e]|0;if((f&1)==0){g=10;h=f}else{f=c[b>>2]|0;g=(f&-2)-1|0;h=f&255}if((h&1)==0){i=(h&255)>>>1}else{i=c[b+4>>2]|0}f=i>>>0>d>>>0?i:d;if(f>>>0<11>>>0){j=10}else{j=(f+16&-16)-1|0}if((j|0)==(g|0)){return}do{if((j|0)!=10){f=j+1|0;if(j>>>0>g>>>0){k=Lt(f)|0}else{k=Lt(f)|0}f=a[e]|0;if((f&1)==0){l=k;m=b+1|0;n=0;o=1;p=f;break}else{l=k;m=c[b+8>>2]|0;n=1;o=1;p=f;break}}else{l=b+1|0;m=c[b+8>>2]|0;n=1;o=0;p=h}}while(0);if((p&1)==0){q=(p&255)>>>1}else{q=c[b+4>>2]|0}du(l|0,m|0,q+1|0)|0;if(n){Nt(m)}if(o){c[b>>2]=j+1|1;c[b+4>>2]=i;c[b+8>>2]=l;return}else{a[e]=i<<1;return}}function Ok(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=fu(d|0)|0;f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=(i&1)==0;if(g){j=(i&255)>>>1}else{j=c[b+4>>2]|0}if((h-j|0)>>>0<e>>>0){Qk(b,h,e-h+j|0,j,j,0,e,d);return b|0}if((e|0)==0){return b|0}if(g){k=b+1|0}else{k=c[b+8>>2]|0}du(k+j|0,d|0,e)|0;d=j+e|0;if((a[f]&1)==0){a[f]=d<<1}else{c[b+4>>2]=d}a[k+d|0]=0;return b|0}function Pk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=b;f=a[e]|0;g=(f&1)!=0;if(g){h=c[b>>2]|0;i=c[b+4>>2]|0;j=(h&-2)-1|0;k=h&255}else{i=(f&255)>>>1;j=10;k=f}do{if((i|0)==(j|0)){if((j|0)==-17){Dk(b)}if((k&1)==0){l=b+1|0}else{l=c[b+8>>2]|0}if(j>>>0<2147483623>>>0){f=j+1|0;h=j<<1;m=f>>>0<h>>>0?h:f;if(m>>>0<11>>>0){n=11}else{n=m+16&-16}}else{n=-17}m=Lt(n)|0;du(m|0,l|0,j)|0;if((j|0)!=10){Nt(l)}c[b+8>>2]=m;c[b>>2]=n|1;o=m}else{if(g){o=c[b+8>>2]|0;break}a[e]=(i<<1)+2;p=b+1|0;q=i+1|0;r=p+i|0;a[r]=d;s=p+q|0;a[s]=0;return}}while(0);e=i+1|0;c[b+4>>2]=e;p=o;q=e;r=p+i|0;a[r]=d;s=p+q|0;a[s]=0;return}function Qk(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;if((-18-d|0)>>>0<e>>>0){Dk(b)}if((a[b]&1)==0){k=b+1|0}else{k=c[b+8>>2]|0}if(d>>>0<2147483623>>>0){l=e+d|0;e=d<<1;m=l>>>0<e>>>0?e:l;if(m>>>0<11>>>0){n=11}else{n=m+16&-16}}else{n=-17}m=Lt(n)|0;if((g|0)!=0){du(m|0,k|0,g)|0}if((i|0)!=0){du(m+g|0,j|0,i)|0}j=f-h|0;if((j|0)!=(g|0)){du(m+(i+g)|0,k+(h+g)|0,j-g|0)|0}if((d|0)==10){o=b+8|0;c[o>>2]=m;p=n|1;q=b|0;c[q>>2]=p;r=j+i|0;s=b+4|0;c[s>>2]=r;t=m+r|0;a[t]=0;return}Nt(k);o=b+8|0;c[o>>2]=m;p=n|1;q=b|0;c[q>>2]=p;r=j+i|0;s=b+4|0;c[s>>2]=r;t=m+r|0;a[t]=0;return}function Rk(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0;if((-17-d|0)>>>0<e>>>0){Dk(b)}if((a[b]&1)==0){j=b+1|0}else{j=c[b+8>>2]|0}if(d>>>0<2147483623>>>0){k=e+d|0;e=d<<1;l=k>>>0<e>>>0?e:k;if(l>>>0<11>>>0){m=11}else{m=l+16&-16}}else{m=-17}l=Lt(m)|0;if((g|0)!=0){du(l|0,j|0,g)|0}k=f-h|0;if((k|0)!=(g|0)){du(l+(i+g)|0,j+(h+g)|0,k-g|0)|0}if((d|0)==10){n=b+8|0;c[n>>2]=l;o=m|1;p=b|0;c[p>>2]=o;return}Nt(j);n=b+8|0;c[n>>2]=l;o=m|1;p=b|0;c[p>>2]=o;return}function Sk(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;g=b;h=a[g]|0;i=(h&1)==0;if(i){j=(h&255)>>>1}else{j=c[b+4>>2]|0}if(j>>>0<d>>>0){Ek(b);return 0}if(i){k=10;l=h}else{h=c[b>>2]|0;k=(h&-2)-1|0;l=h&255}if((k-j|0)>>>0<f>>>0){Qk(b,k,j+f-k|0,j,d,0,f,e);return b|0}if((f|0)==0){return b|0}if((l&1)==0){m=b+1|0}else{m=c[b+8>>2]|0}l=j-d|0;k=m+d|0;if((j|0)==(d|0)){n=e}else{if(k>>>0<=e>>>0&(m+j|0)>>>0>e>>>0){o=e+f|0}else{o=e}gu(m+(f+d)|0,k|0,l|0)|0;n=o}gu(k|0,n|0,f|0)|0;n=j+f|0;if((a[g]&1)==0){a[g]=n<<1}else{c[b+4>>2]=n}a[m+n|0]=0;return b|0}function Tk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(e>>>0>1073741807>>>0){Dk(b)}if(e>>>0<2>>>0){a[b]=e<<1;f=b+4|0;g=dt(f,d,e)|0;h=f+(e<<2)|0;c[h>>2]=0;return}else{i=e+4&-4;j=Lt(i<<2)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=e;f=j;g=dt(f,d,e)|0;h=f+(e<<2)|0;c[h>>2]=0;return}}function Uk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(d>>>0>1073741807>>>0){Dk(b)}if(d>>>0<2>>>0){a[b]=d<<1;f=b+4|0;g=ft(f,e,d)|0;h=f+(d<<2)|0;c[h>>2]=0;return}else{i=d+4&-4;j=Lt(i<<2)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=d;f=j;g=ft(f,e,d)|0;h=f+(d<<2)|0;c[h>>2]=0;return}}function Vk(b){b=b|0;if((a[b]&1)==0){return}Nt(c[b+8>>2]|0);return}function Wk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=ct(d)|0;f=b;g=a[f]|0;if((g&1)==0){h=1;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=(i&1)==0;if(e>>>0>h>>>0){if(g){j=(i&255)>>>1}else{j=c[b+4>>2]|0}Zk(b,h,e-h|0,j,0,j,e,d);return b|0}if(g){k=b+4|0}else{k=c[b+8>>2]|0}et(k,d,e)|0;c[k+(e<<2)>>2]=0;if((a[f]&1)==0){a[f]=e<<1;return b|0}else{c[b+4>>2]=e;return b|0}return 0}function Xk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if(d>>>0>1073741807>>>0){Dk(b)}e=b;f=a[e]|0;if((f&1)==0){g=1;h=f}else{f=c[b>>2]|0;g=(f&-2)-1|0;h=f&255}if((h&1)==0){i=(h&255)>>>1}else{i=c[b+4>>2]|0}f=i>>>0>d>>>0?i:d;if(f>>>0<2>>>0){j=1}else{j=(f+4&-4)-1|0}if((j|0)==(g|0)){return}do{if((j|0)!=1){f=(j<<2)+4|0;if(j>>>0>g>>>0){k=Lt(f)|0}else{k=Lt(f)|0}f=k;d=a[e]|0;if((d&1)==0){l=f;m=b+4|0;n=0;o=1;p=d;break}else{l=f;m=c[b+8>>2]|0;n=1;o=1;p=d;break}}else{l=b+4|0;m=c[b+8>>2]|0;n=1;o=0;p=h}}while(0);if((p&1)==0){q=(p&255)>>>1}else{q=c[b+4>>2]|0}dt(l,m,q+1|0)|0;if(n){Nt(m)}if(o){c[b>>2]=j+1|1;c[b+4>>2]=i;c[b+8>>2]=l;return}else{a[e]=i<<1;return}}function Yk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=b;f=a[e]|0;g=(f&1)!=0;if(g){h=c[b+4>>2]|0;i=(c[b>>2]&-2)-1|0}else{h=(f&255)>>>1;i=1}if((h|0)==(i|0)){_k(b,i,1,i,i,0,0);if((a[e]&1)==0){j=7}else{j=8}}else{if(g){j=8}else{j=7}}if((j|0)==7){a[e]=(h<<1)+2;k=b+4|0;l=h+1|0;m=k+(h<<2)|0;c[m>>2]=d;n=k+(l<<2)|0;c[n>>2]=0;return}else if((j|0)==8){j=c[b+8>>2]|0;e=h+1|0;c[b+4>>2]=e;k=j;l=e;m=k+(h<<2)|0;c[m>>2]=d;n=k+(l<<2)|0;c[n>>2]=0;return}}function Zk(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;if((1073741806-d|0)>>>0<e>>>0){Dk(b)}if((a[b]&1)==0){k=b+4|0}else{k=c[b+8>>2]|0}if(d>>>0<536870887>>>0){l=e+d|0;e=d<<1;m=l>>>0<e>>>0?e:l;if(m>>>0<2>>>0){n=2}else{n=m+4&-4}}else{n=1073741807}m=Lt(n<<2)|0;if((g|0)!=0){dt(m,k,g)|0}if((i|0)!=0){dt(m+(g<<2)|0,j,i)|0}j=f-h|0;if((j|0)!=(g|0)){dt(m+(i+g<<2)|0,k+(h+g<<2)|0,j-g|0)|0}if((d|0)==1){o=b+8|0;c[o>>2]=m;p=n|1;q=b|0;c[q>>2]=p;r=j+i|0;s=b+4|0;c[s>>2]=r;t=m+(r<<2)|0;c[t>>2]=0;return}Nt(k);o=b+8|0;c[o>>2]=m;p=n|1;q=b|0;c[q>>2]=p;r=j+i|0;s=b+4|0;c[s>>2]=r;t=m+(r<<2)|0;c[t>>2]=0;return}function _k(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0;if((1073741807-d|0)>>>0<e>>>0){Dk(b)}if((a[b]&1)==0){j=b+4|0}else{j=c[b+8>>2]|0}if(d>>>0<536870887>>>0){k=e+d|0;e=d<<1;l=k>>>0<e>>>0?e:k;if(l>>>0<2>>>0){m=2}else{m=l+4&-4}}else{m=1073741807}l=Lt(m<<2)|0;if((g|0)!=0){dt(l,j,g)|0}k=f-h|0;if((k|0)!=(g|0)){dt(l+(i+g<<2)|0,j+(h+g<<2)|0,k-g|0)|0}if((d|0)==1){n=b+8|0;c[n>>2]=l;o=m|1;p=b|0;c[p>>2]=o;return}Nt(j);n=b+8|0;c[n>>2]=l;o=m|1;p=b|0;c[p>>2]=o;return}function $k(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=b;eu(f|0,0,12)|0;g=fu(d|0)|0;h=e;i=a[h]|0;if((i&1)==0){j=(i&255)>>>1}else{j=c[e+4>>2]|0}k=j+g|0;if(k>>>0>4294967279>>>0){Dk(b)}if(k>>>0<11>>>0){l=g<<1&255;a[f]=l;m=b+1|0;n=i;o=l}else{l=k+16&-16;k=Lt(l)|0;c[b+8>>2]=k;i=l|1;c[b>>2]=i;c[b+4>>2]=g;m=k;n=a[h]|0;o=i&255}du(m|0,d|0,g)|0;a[m+g|0]=0;if((n&1)==0){p=e+1|0}else{p=c[e+8>>2]|0}if((o&1)==0){q=10;r=o}else{o=c[b>>2]|0;q=(o&-2)-1|0;r=o&255}o=(r&1)==0;if(o){s=(r&255)>>>1}else{s=c[b+4>>2]|0}if((q-s|0)>>>0<j>>>0){Qk(b,q,j-q+s|0,s,s,0,j,p);return}if((j|0)==0){return}if(o){t=b+1|0}else{t=c[b+8>>2]|0}du(t+s|0,p|0,j)|0;p=s+j|0;if((a[f]&1)==0){a[f]=p<<1}else{c[b+4>>2]=p}a[t+p|0]=0;return}function al(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=i;i=i+16|0;f=e|0;g=f;eu(g|0,0,12)|0;Mk(f,10,0)|0;h=a[g]|0;if((h&1)==0){j=(h&255)>>>1;k=f+4|0}else{l=f+4|0;j=c[l>>2]|0;k=l}l=f;m=l+1|0;n=f+8|0;o=j;j=h;while(1){p=kb(((j&1)==0?m:c[n>>2]|0)|0,o+1|0,80,(h=i,i=i+8|0,c[h>>2]=d,h)|0)|0;i=h;if((p|0)>-1){if(p>>>0>o>>>0){q=p}else{break}}else{q=o<<1|1}h=a[g]|0;r=(h&1)==0;if(r){s=(h&255)>>>1}else{s=c[k>>2]|0}do{if(!(q>>>0>s>>>0)){if(r){a[l+1+q|0]=0;a[g]=q<<1;break}else{a[(c[n>>2]|0)+q|0]=0;c[k>>2]=q;break}}else{Mk(f,q-s|0,0)|0}}while(0);o=q;j=a[g]|0}j=a[g]|0;q=(j&1)==0;if(q){t=(j&255)>>>1}else{t=c[k>>2]|0}do{if(!(p>>>0>t>>>0)){if(q){a[l+1+p|0]=0;a[g]=p<<1;break}else{a[(c[n>>2]|0)+p|0]=0;c[k>>2]=p;break}}else{Mk(f,p-t|0,0)|0}}while(0);t=b;c[t>>2]=c[g>>2];c[t+4>>2]=c[g+4>>2];c[t+8>>2]=c[g+8>>2];i=e;return}function bl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+8|0;f=e|0;g=(c[b+24>>2]|0)==0;if(g){c[b+16>>2]=d|1}else{c[b+16>>2]=d}if(((g&1|d)&c[b+20>>2]|0)==0){i=e;return}e=dd(16)|0;if((a[26960]|0)==0?(Lb(26960)|0)!=0:0){c[6074]=7224;qb(170,24296,v|0)|0}b=lu(24296,0,32)|0;c[f>>2]=b|1;c[f+4>>2]=L;xk(e,f,3048);c[e>>2]=6408;ac(e|0,19112,52)}function cl(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=6384;b=c[a+40>>2]|0;d=a+32|0;e=a+36|0;if((b|0)!=0){f=b;do{f=f-1|0;Fd[c[(c[d>>2]|0)+(f<<2)>>2]&15](0,a,c[(c[e>>2]|0)+(f<<2)>>2]|0)}while((f|0)!=0)}Np(a+28|0);Jt(c[d>>2]|0);Jt(c[e>>2]|0);Jt(c[a+48>>2]|0);Jt(c[a+60>>2]|0);return}function dl(a,b){a=a|0;b=b|0;Mp(a,b+28|0);return}function el(a,b){a=a|0;b=b|0;c[a+24>>2]=b;c[a+16>>2]=(b|0)==0;c[a+20>>2]=0;c[a+4>>2]=4098;c[a+12>>2]=0;c[a+8>>2]=6;eu(a+32|0,0,40)|0;Lp(a+28|0);return}function fl(a){a=a|0;c[a>>2]=7632;Np(a+4|0);Nt(a);return}function gl(a){a=a|0;c[a>>2]=7632;Np(a+4|0);return}function hl(a){a=a|0;c[a>>2]=7632;Np(a+4|0);return}function il(a,b){a=a|0;b=b|0;return}function jl(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function kl(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function ll(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=i;b=d;d=i;i=i+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;i=e;return}function ml(a){a=a|0;return 0}function nl(a){a=a|0;return 0}function ol(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=b;if((e|0)<=0){g=0;return g|0}h=b+12|0;i=b+16|0;j=d;d=0;while(1){k=c[h>>2]|0;if(k>>>0<(c[i>>2]|0)>>>0){c[h>>2]=k+1;l=a[k]|0}else{k=Ed[c[(c[f>>2]|0)+40>>2]&255](b)|0;if((k|0)==-1){g=d;m=8;break}l=k&255}a[j]=l;k=d+1|0;if((k|0)<(e|0)){j=j+1|0;d=k}else{g=k;m=8;break}}if((m|0)==8){return g|0}return 0}function pl(a){a=a|0;return-1|0}function ql(a){a=a|0;var b=0,e=0;if((Ed[c[(c[a>>2]|0)+36>>2]&255](a)|0)==-1){b=-1;return b|0}e=a+12|0;a=c[e>>2]|0;c[e>>2]=a+1;b=d[a]|0;return b|0}function rl(a,b){a=a|0;b=b|0;return-1|0}function sl(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=b;if((f|0)<=0){h=0;return h|0}i=b+24|0;j=b+28|0;k=0;l=e;while(1){e=c[i>>2]|0;if(!(e>>>0<(c[j>>2]|0)>>>0)){if((Bd[c[(c[g>>2]|0)+52>>2]&127](b,d[l]|0)|0)==-1){h=k;m=7;break}}else{n=a[l]|0;c[i>>2]=e+1;a[e]=n}n=k+1|0;if((n|0)<(f|0)){k=n;l=l+1|0}else{h=n;m=7;break}}if((m|0)==7){return h|0}return 0}function tl(a,b){a=a|0;b=b|0;return-1|0}function ul(a){a=a|0;c[a>>2]=7560;Np(a+4|0);Nt(a);return}function vl(a){a=a|0;c[a>>2]=7560;Np(a+4|0);return}function wl(a){a=a|0;c[a>>2]=7560;Np(a+4|0);return}function xl(a,b){a=a|0;b=b|0;return}function yl(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function zl(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function Al(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=i;b=d;d=i;i=i+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;i=e;return}function Bl(a){a=a|0;return 0}function Cl(a){a=a|0;return 0}function Dl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=a;if((d|0)<=0){f=0;return f|0}g=a+12|0;h=a+16|0;i=b;b=0;while(1){j=c[g>>2]|0;if(!(j>>>0<(c[h>>2]|0)>>>0)){k=Ed[c[(c[e>>2]|0)+40>>2]&255](a)|0;if((k|0)==-1){f=b;l=7;break}else{m=k}}else{c[g>>2]=j+4;m=c[j>>2]|0}c[i>>2]=m;j=b+1|0;if((j|0)<(d|0)){i=i+4|0;b=j}else{f=j;l=7;break}}if((l|0)==7){return f|0}return 0}function El(a){a=a|0;return-1|0}function Fl(a){a=a|0;var b=0,d=0;if((Ed[c[(c[a>>2]|0)+36>>2]&255](a)|0)==-1){b=-1;return b|0}d=a+12|0;a=c[d>>2]|0;c[d>>2]=a+4;b=c[a>>2]|0;return b|0}function Gl(a,b){a=a|0;b=b|0;return-1|0}function Hl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a;if((d|0)<=0){f=0;return f|0}g=a+24|0;h=a+28|0;i=0;j=b;while(1){b=c[g>>2]|0;if(!(b>>>0<(c[h>>2]|0)>>>0)){if((Bd[c[(c[e>>2]|0)+52>>2]&127](a,c[j>>2]|0)|0)==-1){f=i;k=7;break}}else{l=c[j>>2]|0;c[g>>2]=b+4;c[b>>2]=l}l=i+1|0;if((l|0)<(d|0)){i=l;j=j+4|0}else{f=l;k=7;break}}if((k|0)==7){return f|0}return 0}function Il(a,b){a=a|0;b=b|0;return-1|0}function Jl(a){a=a|0;cl(a+8|0);Nt(a);return}function Kl(a){a=a|0;cl(a+8|0);return}function Ll(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;cl(b+(d+8)|0);Nt(b+d|0);return}function Ml(a){a=a|0;cl(a+((c[(c[a>>2]|0)-12>>2]|0)+8)|0);return}function Nl(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+8|0;e=d|0;f=b;g=c[(c[f>>2]|0)-12>>2]|0;h=b;if((c[h+(g+24)>>2]|0)==0){i=d;return b|0}j=e|0;a[j]=0;c[e+4>>2]=b;if((c[h+(g+16)>>2]|0)==0){k=c[h+(g+72)>>2]|0;if((k|0)==0){l=g}else{Nl(k)|0;l=c[(c[f>>2]|0)-12>>2]|0}a[j]=1;j=c[h+(l+24)>>2]|0;if((Ed[c[(c[j>>2]|0)+24>>2]&255](j)|0)==-1){j=c[(c[f>>2]|0)-12>>2]|0;bl(h+j|0,c[h+(j+16)>>2]|1)}}Yl(e);i=d;return b|0}function Ol(a){a=a|0;var b=0;b=a+16|0;c[b>>2]=c[b>>2]|1;if((c[a+20>>2]&1|0)==0){return}else{db()}}function Pl(a){a=a|0;cl(a+8|0);Nt(a);return}function Ql(a){a=a|0;cl(a+8|0);return}function Rl(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;cl(b+(d+8)|0);Nt(b+d|0);return}function Sl(a){a=a|0;cl(a+((c[(c[a>>2]|0)-12>>2]|0)+8)|0);return}function Tl(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+8|0;e=d|0;f=b;g=c[(c[f>>2]|0)-12>>2]|0;h=b;if((c[h+(g+24)>>2]|0)==0){i=d;return b|0}j=e|0;a[j]=0;c[e+4>>2]=b;if((c[h+(g+16)>>2]|0)==0){k=c[h+(g+72)>>2]|0;if((k|0)==0){l=g}else{Tl(k)|0;l=c[(c[f>>2]|0)-12>>2]|0}a[j]=1;j=c[h+(l+24)>>2]|0;if((Ed[c[(c[j>>2]|0)+24>>2]&255](j)|0)==-1){j=c[(c[f>>2]|0)-12>>2]|0;bl(h+j|0,c[h+(j+16)>>2]|1)}}em(e);i=d;return b|0}function Ul(a){a=a|0;cl(a+4|0);Nt(a);return}function Vl(a){a=a|0;cl(a+4|0);return}function Wl(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;cl(b+(d+4)|0);Nt(b+d|0);return}function Xl(a){a=a|0;cl(a+((c[(c[a>>2]|0)-12>>2]|0)+4)|0);return}function Yl(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)-12>>2]|0;e=a;if((c[e+(d+24)>>2]|0)==0){return}if((c[e+(d+16)>>2]|0)!=0){return}if((c[e+(d+4)>>2]&8192|0)==0){return}if(Ua()|0){return}d=c[b>>2]|0;e=c[d+((c[(c[d>>2]|0)-12>>2]|0)+24)>>2]|0;if(!((Ed[c[(c[e>>2]|0)+24>>2]&255](e)|0)==-1)){return}e=c[b>>2]|0;b=c[(c[e>>2]|0)-12>>2]|0;d=e;bl(d+b|0,c[d+(b+16)>>2]|1);return}function Zl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=i;i=i+40|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=h|0;a[l]=0;c[h+4>>2]=b;m=b;n=c[(c[m>>2]|0)-12>>2]|0;o=b;if((c[o+(n+16)>>2]|0)==0){p=c[o+(n+72)>>2]|0;if((p|0)==0){q=n}else{Nl(p)|0;q=c[(c[m>>2]|0)-12>>2]|0}a[l]=1;Mp(j,o+(q+28)|0);q=Pp(j,25792)|0;Np(j);j=c[(c[m>>2]|0)-12>>2]|0;l=c[o+(j+24)>>2]|0;p=o+(j+76)|0;n=c[p>>2]|0;if((n|0)==-1){Mp(g,o+(j+28)|0);r=Pp(g,26144)|0;s=Bd[c[(c[r>>2]|0)+28>>2]&127](r,32)|0;Np(g);c[p>>2]=s<<24>>24;t=s}else{t=n&255}n=c[(c[q>>2]|0)+16>>2]|0;c[f>>2]=l;Ld[n&63](k,q,f,o+j|0,t,d);if((c[k>>2]|0)==0){k=c[(c[m>>2]|0)-12>>2]|0;bl(o+k|0,c[o+(k+16)>>2]|5)}}Yl(h);i=e;return b|0}function _l(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=i;i=i+40|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=h|0;a[l]=0;c[h+4>>2]=b;m=b;n=c[(c[m>>2]|0)-12>>2]|0;o=b;if((c[o+(n+16)>>2]|0)==0){p=c[o+(n+72)>>2]|0;if((p|0)==0){q=n}else{Nl(p)|0;q=c[(c[m>>2]|0)-12>>2]|0}a[l]=1;Mp(j,o+(q+28)|0);q=Pp(j,25792)|0;Np(j);j=c[(c[m>>2]|0)-12>>2]|0;l=c[o+(j+24)>>2]|0;p=o+(j+76)|0;n=c[p>>2]|0;if((n|0)==-1){Mp(g,o+(j+28)|0);r=Pp(g,26144)|0;s=Bd[c[(c[r>>2]|0)+28>>2]&127](r,32)|0;Np(g);c[p>>2]=s<<24>>24;t=s}else{t=n&255}n=c[(c[q>>2]|0)+24>>2]|0;c[f>>2]=l;Ld[n&63](k,q,f,o+j|0,t,d);if((c[k>>2]|0)==0){k=c[(c[m>>2]|0)-12>>2]|0;bl(o+k|0,c[o+(k+16)>>2]|5)}}Yl(h);i=e;return b|0}function $l(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;i=i+8|0;f=e|0;g=f|0;a[g]=0;c[f+4>>2]=b;h=b;j=c[h>>2]|0;k=c[j-12>>2]|0;l=b;do{if((c[l+(k+16)>>2]|0)==0){m=c[l+(k+72)>>2]|0;if((m|0)==0){n=j;o=k}else{Nl(m)|0;m=c[h>>2]|0;n=m;o=c[m-12>>2]|0}a[g]=1;m=c[l+(o+24)>>2]|0;p=m;if((m|0)==0){q=n}else{r=m+24|0;s=c[r>>2]|0;if((s|0)!=(c[m+28>>2]|0)){c[r>>2]=s+1;a[s]=d;break}if(!((Bd[c[(c[m>>2]|0)+52>>2]&127](p,d&255)|0)==-1)){break}q=c[h>>2]|0}p=c[q-12>>2]|0;bl(l+p|0,c[l+(p+16)>>2]|1)}}while(0);Yl(f);i=e;return b|0}function am(a){a=a|0;cl(a+4|0);Nt(a);return}function bm(a){a=a|0;cl(a+4|0);return}function cm(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;cl(b+(d+4)|0);Nt(b+d|0);return}function dm(a){a=a|0;cl(a+((c[(c[a>>2]|0)-12>>2]|0)+4)|0);return}function em(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)-12>>2]|0;e=a;if((c[e+(d+24)>>2]|0)==0){return}if((c[e+(d+16)>>2]|0)!=0){return}if((c[e+(d+4)>>2]&8192|0)==0){return}if(Ua()|0){return}d=c[b>>2]|0;e=c[d+((c[(c[d>>2]|0)-12>>2]|0)+24)>>2]|0;if(!((Ed[c[(c[e>>2]|0)+24>>2]&255](e)|0)==-1)){return}e=c[b>>2]|0;b=c[(c[e>>2]|0)-12>>2]|0;d=e;bl(d+b|0,c[d+(b+16)>>2]|1);return}function fm(a){a=a|0;return 3528}function gm(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)==1){Gk(a,3808,35);return}else{vk(a,b|0,c);return}}function hm(a){a=a|0;zk(a|0);Nt(a);return}function im(a){a=a|0;zk(a|0);return}function jm(a){a=a|0;cl(a);Nt(a);return}function km(a){a=a|0;dk(a|0);Nt(a);return}function lm(a){a=a|0;dk(a|0);return}function mm(a){a=a|0;dk(a|0);return}function nm(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;a:do{if((e|0)!=(f|0)){b=c;g=e;while(1){if((b|0)==(d|0)){h=-1;i=7;break}j=a[b]|0;k=a[g]|0;if(j<<24>>24<k<<24>>24){h=-1;i=7;break}if(k<<24>>24<j<<24>>24){h=1;i=7;break}j=b+1|0;k=g+1|0;if((k|0)==(f|0)){l=j;break a}else{b=j;g=k}}if((i|0)==7){return h|0}}else{l=c}}while(0);h=(l|0)!=(d|0)|0;return h|0}function om(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;d=f-e|0;if(d>>>0>4294967279>>>0){Dk(b)}if(d>>>0<11>>>0){a[b]=d<<1;g=b+1|0}else{h=d+16&-16;i=Lt(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=d;g=i}if((e|0)==(f|0)){j=g;a[j]=0;return}else{k=g;l=e}while(1){a[k]=a[l]|0;l=l+1|0;if((l|0)==(f|0)){break}else{k=k+1|0}}j=g+d|0;a[j]=0;return}function pm(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;if((c|0)==(d|0)){e=0;return e|0}else{f=c;g=0}while(1){c=(a[f]|0)+(g<<4)|0;b=c&-268435456;h=(b>>>24|b)^c;c=f+1|0;if((c|0)==(d|0)){e=h;break}else{f=c;g=h}}return e|0}function qm(a){a=a|0;dk(a|0);Nt(a);return}function rm(a){a=a|0;dk(a|0);return}function sm(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;a:do{if((e|0)==(f|0)){g=b;h=6}else{a=b;i=e;while(1){if((a|0)==(d|0)){j=-1;break a}k=c[a>>2]|0;l=c[i>>2]|0;if((k|0)<(l|0)){j=-1;break a}if((l|0)<(k|0)){j=1;break a}k=a+4|0;l=i+4|0;if((l|0)==(f|0)){g=k;h=6;break}else{a=k;i=l}}}}while(0);if((h|0)==6){j=(g|0)!=(d|0)|0}return j|0}function tm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;d=e;g=f-d|0;h=g>>2;if(h>>>0>1073741807>>>0){Dk(b)}if(h>>>0<2>>>0){a[b]=g>>>1;i=b+4|0}else{g=h+4&-4;j=Lt(g<<2)|0;c[b+8>>2]=j;c[b>>2]=g|1;c[b+4>>2]=h;i=j}if((e|0)==(f|0)){k=i;c[k>>2]=0;return}j=f-4-d|0;d=i;h=e;while(1){c[d>>2]=c[h>>2];h=h+4|0;if((h|0)==(f|0)){break}else{d=d+4|0}}k=i+((j>>>2)+1<<2)|0;c[k>>2]=0;return}function um(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if((b|0)==(d|0)){e=0;return e|0}else{f=b;g=0}while(1){b=(c[f>>2]|0)+(g<<4)|0;a=b&-268435456;h=(a>>>24|a)^b;b=f+4|0;if((b|0)==(d|0)){e=h;break}else{f=b;g=h}}return e|0}function vm(a){a=a|0;dk(a|0);Nt(a);return}function wm(a){a=a|0;dk(a|0);return}function xm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;k=i;i=i+112|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+16|0;n=k+32|0;o=k+40|0;p=k+48|0;q=k+56|0;r=k+64|0;s=k+72|0;t=k+80|0;u=k+104|0;if((c[g+4>>2]&1|0)==0){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;w=e|0;c[p>>2]=c[w>>2];c[q>>2]=c[f>>2];xd[v&127](o,d,p,q,g,h,n);q=c[o>>2]|0;c[w>>2]=q;w=c[n>>2]|0;if((w|0)==1){a[j]=1}else if((w|0)==0){a[j]=0}else{a[j]=1;c[h>>2]=4}c[b>>2]=q;i=k;return}dl(r,g);q=r|0;r=c[q>>2]|0;if(!((c[6536]|0)==-1)){c[m>>2]=26144;c[m+4>>2]=30;c[m+8>>2]=0;Ck(26144,m,160)}m=(c[6537]|0)-1|0;w=c[r+8>>2]|0;if((c[r+12>>2]|0)-w>>2>>>0>m>>>0?(r=c[w+(m<<2)>>2]|0,(r|0)!=0):0){m=r;fk(c[q>>2]|0)|0;dl(s,g);g=s|0;s=c[g>>2]|0;if(!((c[6440]|0)==-1)){c[l>>2]=25760;c[l+4>>2]=30;c[l+8>>2]=0;Ck(25760,l,160)}l=(c[6441]|0)-1|0;q=c[s+8>>2]|0;if((c[s+12>>2]|0)-q>>2>>>0>l>>>0?(s=c[q+(l<<2)>>2]|0,(s|0)!=0):0){l=s;fk(c[g>>2]|0)|0;g=t|0;q=s;Ad[c[(c[q>>2]|0)+24>>2]&127](g,l);Ad[c[(c[q>>2]|0)+28>>2]&127](t+12|0,l);c[u>>2]=c[f>>2];a[j]=(Yr(e,u,g,t+24|0,m,h,1)|0)==(g|0)|0;c[b>>2]=c[e>>2];Ik(t+12|0);Ik(t|0);i=k;return}k=dd(4)|0;ht(k);ac(k|0,18472,230)}k=dd(4)|0;ht(k);ac(k|0,18472,230)}function ym(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];Zr(a,b,k,l,f,g,h);i=j;return}function zm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];_r(a,b,k,l,f,g,h);i=j;return}function Am(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];$r(a,b,k,l,f,g,h);i=j;return}function Bm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];as(a,b,k,l,f,g,h);i=j;return}function Cm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];bs(a,b,k,l,f,g,h);i=j;return}function Dm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];cs(a,b,k,l,f,g,h);i=j;return}function Em(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];ds(a,b,k,l,f,g,h);i=j;return}function Fm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];es(a,b,k,l,f,g,h);i=j;return}function Gm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];fs(a,b,k,l,f,g,h);i=j;return}function Hm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;d=i;i=i+248|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+16|0;m=d+48|0;n=d+64|0;o=d+72|0;p=d+88|0;q=m;eu(q|0,0,12)|0;dl(n,g);g=n|0;n=c[g>>2]|0;if(!((c[6536]|0)==-1)){c[k>>2]=26144;c[k+4>>2]=30;c[k+8>>2]=0;Ck(26144,k,160)}k=(c[6537]|0)-1|0;r=c[n+8>>2]|0;if((c[n+12>>2]|0)-r>>2>>>0>k>>>0?(n=c[r+(k<<2)>>2]|0,(n|0)!=0):0){k=l|0;Md[c[(c[n>>2]|0)+32>>2]&15](n,20776,20802,k)|0;fk(c[g>>2]|0)|0;g=o;eu(g|0,0,12)|0;Lk(o,10,0);if((a[g]&1)==0){n=o+1|0;s=n;t=n;u=o+8|0}else{n=o+8|0;s=c[n>>2]|0;t=o+1|0;u=n}n=e|0;e=f|0;f=o|0;r=o+4|0;v=l+24|0;w=l+25|0;x=p;y=l+26|0;z=l;l=m+4|0;A=s;B=0;C=p|0;p=s;s=c[n>>2]|0;a:while(1){if((s|0)!=0){if((c[s+12>>2]|0)==(c[s+16>>2]|0)?(Ed[c[(c[s>>2]|0)+36>>2]&255](s)|0)==-1:0){c[n>>2]=0;D=0}else{D=s}}else{D=0}E=(D|0)==0;F=c[e>>2]|0;do{if((F|0)!=0){if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(E){break}else{G=A;break a}}if(!((Ed[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1)){if(E){break}else{G=A;break a}}else{c[e>>2]=0;H=25;break}}else{H=25}}while(0);if((H|0)==25?(H=0,E):0){G=A;break}F=a[g]|0;I=(F&1)==0;if(I){J=(F&255)>>>1}else{J=c[r>>2]|0}if((p-A|0)==(J|0)){if(I){K=(F&255)>>>1;L=(F&255)>>>1}else{F=c[r>>2]|0;K=F;L=F}Lk(o,K<<1,0);if((a[g]&1)==0){M=10}else{M=(c[f>>2]&-2)-1|0}Lk(o,M,0);if((a[g]&1)==0){N=t}else{N=c[u>>2]|0}O=N;P=N+L|0}else{O=A;P=p}F=c[D+12>>2]|0;if((F|0)==(c[D+16>>2]|0)){Q=(Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0)&255}else{Q=a[F]|0}F=(P|0)==(O|0);if(F?(I=(a[v]|0)==Q<<24>>24,I|(a[w]|0)==Q<<24>>24):0){a[P]=I?43:45;R=0;S=C;T=P+1|0}else{H=53}do{if((H|0)==53){H=0;I=a[q]|0;if((I&1)==0){U=(I&255)>>>1}else{U=c[l>>2]|0}if((U|0)!=0&Q<<24>>24==0){if((C-x|0)>=160){R=B;S=C;T=P;break}c[C>>2]=B;R=0;S=C+4|0;T=P;break}else{V=k}while(1){I=V+1|0;if((a[V]|0)==Q<<24>>24){W=V;break}if((I|0)==(y|0)){W=y;break}else{V=I}}I=W-z|0;if((I|0)>23){G=O;break a}if((I|0)<22){a[P]=a[20776+I|0]|0;R=B+1|0;S=C;T=P+1|0;break}if(F){G=P;break a}if((P-O|0)>=3){G=O;break a}if((a[P-1|0]|0)!=48){G=O;break a}a[P]=a[20776+I|0]|0;R=0;S=C;T=P+1|0}}while(0);F=c[n>>2]|0;E=F+12|0;I=c[E>>2]|0;if((I|0)==(c[F+16>>2]|0)){Ed[c[(c[F>>2]|0)+40>>2]&255](F)|0;A=O;B=R;C=S;p=T;s=F;continue}else{c[E>>2]=I+1;A=O;B=R;C=S;p=T;s=F;continue}}a[G+3|0]=0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}s=gs(G,c[6072]|0,2488,(G=i,i=i+8|0,c[G>>2]=j,G)|0)|0;i=G;if((s|0)!=1){c[h>>2]=4}s=c[n>>2]|0;if((s|0)!=0){if((c[s+12>>2]|0)==(c[s+16>>2]|0)?(Ed[c[(c[s>>2]|0)+36>>2]&255](s)|0)==-1:0){c[n>>2]=0;X=0}else{X=s}}else{X=0}s=(X|0)==0;n=c[e>>2]|0;do{if((n|0)!=0){if((c[n+12>>2]|0)!=(c[n+16>>2]|0)){if(!s){break}Y=b|0;c[Y>>2]=X;Z=160;_=0;Ik(o);Ik(m);i=d;return}if((Ed[c[(c[n>>2]|0)+36>>2]&255](n)|0)==-1){c[e>>2]=0;H=90;break}if(s^(n|0)==0){Y=b|0;c[Y>>2]=X;Z=160;_=0;Ik(o);Ik(m);i=d;return}}else{H=90}}while(0);if((H|0)==90?!s:0){Y=b|0;c[Y>>2]=X;Z=160;_=0;Ik(o);Ik(m);i=d;return}c[h>>2]=c[h>>2]|2;Y=b|0;c[Y>>2]=X;Z=160;_=0;Ik(o);Ik(m);i=d;return}d=dd(4)|0;ht(d);ac(d|0,18472,230)}function Im(a){a=a|0;dk(a|0);Nt(a);return}function Jm(a){a=a|0;dk(a|0);return}function Km(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;k=i;i=i+112|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+16|0;n=k+32|0;o=k+40|0;p=k+48|0;q=k+56|0;r=k+64|0;s=k+72|0;t=k+80|0;u=k+104|0;if((c[g+4>>2]&1|0)==0){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;w=e|0;c[p>>2]=c[w>>2];c[q>>2]=c[f>>2];xd[v&127](o,d,p,q,g,h,n);q=c[o>>2]|0;c[w>>2]=q;w=c[n>>2]|0;if((w|0)==1){a[j]=1}else if((w|0)==0){a[j]=0}else{a[j]=1;c[h>>2]=4}c[b>>2]=q;i=k;return}dl(r,g);q=r|0;r=c[q>>2]|0;if(!((c[6534]|0)==-1)){c[m>>2]=26136;c[m+4>>2]=30;c[m+8>>2]=0;Ck(26136,m,160)}m=(c[6535]|0)-1|0;w=c[r+8>>2]|0;if((c[r+12>>2]|0)-w>>2>>>0>m>>>0?(r=c[w+(m<<2)>>2]|0,(r|0)!=0):0){m=r;fk(c[q>>2]|0)|0;dl(s,g);g=s|0;s=c[g>>2]|0;if(!((c[6438]|0)==-1)){c[l>>2]=25752;c[l+4>>2]=30;c[l+8>>2]=0;Ck(25752,l,160)}l=(c[6439]|0)-1|0;q=c[s+8>>2]|0;if((c[s+12>>2]|0)-q>>2>>>0>l>>>0?(s=c[q+(l<<2)>>2]|0,(s|0)!=0):0){l=s;fk(c[g>>2]|0)|0;g=t|0;q=s;Ad[c[(c[q>>2]|0)+24>>2]&127](g,l);Ad[c[(c[q>>2]|0)+28>>2]&127](t+12|0,l);c[u>>2]=c[f>>2];a[j]=(hs(e,u,g,t+24|0,m,h,1)|0)==(g|0)|0;c[b>>2]=c[e>>2];Vk(t+12|0);Vk(t|0);i=k;return}k=dd(4)|0;ht(k);ac(k|0,18472,230)}k=dd(4)|0;ht(k);ac(k|0,18472,230)}function Lm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];is(a,b,k,l,f,g,h);i=j;return}function Mm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];js(a,b,k,l,f,g,h);i=j;return}function Nm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];ks(a,b,k,l,f,g,h);i=j;return}function Om(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];ls(a,b,k,l,f,g,h);i=j;return}



function kp(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=+k;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;d=i;i=i+248|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=d|0;m=d+120|0;n=d+232|0;o=d+240|0;p=o;q=i;i=i+1|0;i=i+7&-8;r=i;i=i+1|0;i=i+7&-8;s=i;i=i+12|0;i=i+7&-8;t=i;i=i+12|0;i=i+7&-8;u=i;i=i+12|0;i=i+7&-8;v=i;i=i+4|0;i=i+7&-8;w=i;i=i+100|0;i=i+7&-8;x=i;i=i+4|0;i=i+7&-8;y=i;i=i+4|0;i=i+7&-8;z=i;i=i+4|0;i=i+7&-8;A=d+16|0;c[m>>2]=A;B=d+128|0;C=kb(A|0,100,544,(A=i,i=i+8|0,h[A>>3]=k,A)|0)|0;i=A;if(C>>>0>99>>>0){if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}D=ss(m,c[6072]|0,544,(A=i,i=i+8|0,h[A>>3]=k,A)|0)|0;i=A;A=c[m>>2]|0;if((A|0)==0){St();E=c[m>>2]|0}else{E=A}A=It(D)|0;if((A|0)==0){St();F=0;G=D;H=0;I=E}else{F=A;G=D;H=A;I=E}}else{F=B;G=C;H=0;I=0}dl(n,g);C=n|0;B=c[C>>2]|0;if(!((c[6536]|0)==-1)){c[l>>2]=26144;c[l+4>>2]=30;c[l+8>>2]=0;Ck(26144,l,160)}l=(c[6537]|0)-1|0;E=c[B+8>>2]|0;if((c[B+12>>2]|0)-E>>2>>>0>l>>>0?(B=c[E+(l<<2)>>2]|0,(B|0)!=0):0){l=B;E=c[m>>2]|0;Md[c[(c[B>>2]|0)+32>>2]&15](l,E,E+G|0,F)|0;if((G|0)==0){J=0}else{J=(a[c[m>>2]|0]|0)==45}c[o>>2]=0;eu(s|0,0,12)|0;o=t;eu(o|0,0,12)|0;m=u;eu(m|0,0,12)|0;lp(f,J,n,p,q,r,s,t,u,v);n=w|0;w=c[v>>2]|0;if((G|0)>(w|0)){v=a[m]|0;if((v&1)==0){K=(v&255)>>>1}else{K=c[u+4>>2]|0}v=a[o]|0;if((v&1)==0){L=(v&255)>>>1}else{L=c[t+4>>2]|0}M=K+(G-w<<1|1)+L|0}else{L=a[m]|0;if((L&1)==0){N=(L&255)>>>1}else{N=c[u+4>>2]|0}L=a[o]|0;if((L&1)==0){O=(L&255)>>>1}else{O=c[t+4>>2]|0}M=N+2+O|0}O=M+w|0;if(O>>>0>100>>>0){M=It(O)|0;if((M|0)==0){St();P=0;Q=0}else{P=M;Q=M}}else{P=n;Q=0}mp(P,x,y,c[g+4>>2]|0,F,F+G|0,l,J,p,a[q]|0,a[r]|0,s,t,u,w);c[z>>2]=c[e>>2];re(b,z,P,c[x>>2]|0,c[y>>2]|0,g,j);if((Q|0)!=0){Jt(Q)}Ik(u);Ik(t);Ik(s);fk(c[C>>2]|0)|0;if((H|0)!=0){Jt(H)}if((I|0)==0){R=100;S=0;T=100;U=0;i=d;return}Jt(I);R=100;S=0;T=100;U=0;i=d;return}d=dd(4)|0;ht(d);ac(d|0,18472,230)}function lp(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;n=i;i=i+40|0;o=n|0;p=n+16|0;q=n+32|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=t;v=i;i=i+12|0;i=i+7&-8;w=i;i=i+12|0;i=i+7&-8;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+4|0;i=i+7&-8;z=y;A=i;i=i+12|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;C=B;E=i;i=i+12|0;i=i+7&-8;F=i;i=i+12|0;i=i+7&-8;G=i;i=i+12|0;i=i+7&-8;H=c[e>>2]|0;if(b){if(!((c[6654]|0)==-1)){c[p>>2]=26616;c[p+4>>2]=30;c[p+8>>2]=0;Ck(26616,p,160)}p=(c[6655]|0)-1|0;b=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-b>>2>>>0>p>>>0)){I=dd(4)|0;J=I;ht(J);ac(I|0,18472,230)}e=c[b+(p<<2)>>2]|0;if((e|0)==0){I=dd(4)|0;J=I;ht(J);ac(I|0,18472,230)}I=e;J=c[e>>2]|0;if(d){Ad[c[J+44>>2]&127](r,I);r=f;D=c[q>>2]|0;a[r]=D;D=D>>8;a[r+1|0]=D;D=D>>8;a[r+2|0]=D;D=D>>8;a[r+3|0]=D;Ad[c[(c[e>>2]|0)+32>>2]&127](s,I);r=l;if((a[r]&1)==0){a[l+1|0]=0;a[r]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Nk(l,0);q=s;c[r>>2]=c[q>>2];c[r+4>>2]=c[q+4>>2];c[r+8>>2]=c[q+8>>2];eu(q|0,0,12)|0;Ik(s)}else{Ad[c[J+40>>2]&127](u,I);u=f;D=c[t>>2]|0;a[u]=D;D=D>>8;a[u+1|0]=D;D=D>>8;a[u+2|0]=D;D=D>>8;a[u+3|0]=D;Ad[c[(c[e>>2]|0)+28>>2]&127](v,I);u=l;if((a[u]&1)==0){a[l+1|0]=0;a[u]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Nk(l,0);t=v;c[u>>2]=c[t>>2];c[u+4>>2]=c[t+4>>2];c[u+8>>2]=c[t+8>>2];eu(t|0,0,12)|0;Ik(v)}v=e;a[g]=Ed[c[(c[v>>2]|0)+12>>2]&255](I)|0;a[h]=Ed[c[(c[v>>2]|0)+16>>2]&255](I)|0;v=e;Ad[c[(c[v>>2]|0)+20>>2]&127](w,I);t=j;if((a[t]&1)==0){a[j+1|0]=0;a[t]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Nk(j,0);u=w;c[t>>2]=c[u>>2];c[t+4>>2]=c[u+4>>2];c[t+8>>2]=c[u+8>>2];eu(u|0,0,12)|0;Ik(w);Ad[c[(c[v>>2]|0)+24>>2]&127](x,I);v=k;if((a[v]&1)==0){a[k+1|0]=0;a[v]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}Nk(k,0);w=x;c[v>>2]=c[w>>2];c[v+4>>2]=c[w+4>>2];c[v+8>>2]=c[w+8>>2];eu(w|0,0,12)|0;Ik(x);K=Ed[c[(c[e>>2]|0)+36>>2]&255](I)|0;c[m>>2]=K;i=n;return}else{if(!((c[6656]|0)==-1)){c[o>>2]=26624;c[o+4>>2]=30;c[o+8>>2]=0;Ck(26624,o,160)}o=(c[6657]|0)-1|0;I=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-I>>2>>>0>o>>>0)){L=dd(4)|0;M=L;ht(M);ac(L|0,18472,230)}H=c[I+(o<<2)>>2]|0;if((H|0)==0){L=dd(4)|0;M=L;ht(M);ac(L|0,18472,230)}L=H;M=c[H>>2]|0;if(d){Ad[c[M+44>>2]&127](z,L);z=f;D=c[y>>2]|0;a[z]=D;D=D>>8;a[z+1|0]=D;D=D>>8;a[z+2|0]=D;D=D>>8;a[z+3|0]=D;Ad[c[(c[H>>2]|0)+32>>2]&127](A,L);z=l;if((a[z]&1)==0){a[l+1|0]=0;a[z]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Nk(l,0);y=A;c[z>>2]=c[y>>2];c[z+4>>2]=c[y+4>>2];c[z+8>>2]=c[y+8>>2];eu(y|0,0,12)|0;Ik(A)}else{Ad[c[M+40>>2]&127](C,L);C=f;D=c[B>>2]|0;a[C]=D;D=D>>8;a[C+1|0]=D;D=D>>8;a[C+2|0]=D;D=D>>8;a[C+3|0]=D;Ad[c[(c[H>>2]|0)+28>>2]&127](E,L);C=l;if((a[C]&1)==0){a[l+1|0]=0;a[C]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Nk(l,0);l=E;c[C>>2]=c[l>>2];c[C+4>>2]=c[l+4>>2];c[C+8>>2]=c[l+8>>2];eu(l|0,0,12)|0;Ik(E)}E=H;a[g]=Ed[c[(c[E>>2]|0)+12>>2]&255](L)|0;a[h]=Ed[c[(c[E>>2]|0)+16>>2]&255](L)|0;E=H;Ad[c[(c[E>>2]|0)+20>>2]&127](F,L);h=j;if((a[h]&1)==0){a[j+1|0]=0;a[h]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Nk(j,0);j=F;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];eu(j|0,0,12)|0;Ik(F);Ad[c[(c[E>>2]|0)+24>>2]&127](G,L);E=k;if((a[E]&1)==0){a[k+1|0]=0;a[E]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}Nk(k,0);k=G;c[E>>2]=c[k>>2];c[E+4>>2]=c[k+4>>2];c[E+8>>2]=c[k+8>>2];eu(k|0,0,12)|0;Ik(G);K=Ed[c[(c[H>>2]|0)+36>>2]&255](L)|0;c[m>>2]=K;i=n;return}}function mp(d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0;c[f>>2]=d;s=j;t=q;u=q+1|0;v=q+8|0;w=q+4|0;q=p;x=(g&512|0)==0;y=p+1|0;z=p+8|0;A=p+4|0;p=(r|0)>0;B=o;C=o+1|0;D=o+8|0;E=o+4|0;o=j+8|0;F=-r|0;G=0;H=h;while(1){switch(a[l+G|0]|0){case 0:{c[e>>2]=c[f>>2];I=H;break};case 1:{c[e>>2]=c[f>>2];h=Bd[c[(c[s>>2]|0)+28>>2]&127](j,32)|0;J=c[f>>2]|0;c[f>>2]=J+1;a[J]=h;I=H;break};case 3:{h=a[t]|0;J=(h&1)==0;if(J){K=(h&255)>>>1}else{K=c[w>>2]|0}if((K|0)==0){I=H}else{if(J){L=u}else{L=c[v>>2]|0}J=a[L]|0;h=c[f>>2]|0;c[f>>2]=h+1;a[h]=J;I=H}break};case 2:{J=a[q]|0;h=(J&1)==0;if(h){M=(J&255)>>>1}else{M=c[A>>2]|0}if((M|0)==0|x){I=H}else{if(h){N=(J&255)>>>1;O=y;P=y}else{J=c[z>>2]|0;N=c[A>>2]|0;O=J;P=J}J=O+N|0;h=c[f>>2]|0;if((P|0)==(J|0)){Q=h}else{R=h;h=P;while(1){a[R]=a[h]|0;S=h+1|0;T=R+1|0;if((S|0)==(J|0)){Q=T;break}else{R=T;h=S}}}c[f>>2]=Q;I=H}break};case 4:{h=c[f>>2]|0;R=k?H+1|0:H;a:do{if(R>>>0<i>>>0){J=R;while(1){S=a[J]|0;if(!(S<<24>>24>-1)){U=J;break a}T=J+1|0;if((b[(c[o>>2]|0)+(S<<24>>24<<1)>>1]&2048)==0){U=J;break a}if(T>>>0<i>>>0){J=T}else{U=T;break}}}else{U=R}}while(0);J=U;if(p){if(U>>>0>R>>>0){T=R-J|0;J=T>>>0<F>>>0?F:T;T=J+r|0;S=U;V=r;W=h;while(1){X=S-1|0;Y=a[X]|0;c[f>>2]=W+1;a[W]=Y;Y=V-1|0;Z=(Y|0)>0;if(!(X>>>0>R>>>0&Z)){break}S=X;V=Y;W=c[f>>2]|0}W=U+J|0;if(Z){_=T;$=W;aa=32}else{ba=0;ca=T;da=W}}else{_=r;$=U;aa=32}if((aa|0)==32){aa=0;ba=Bd[c[(c[s>>2]|0)+28>>2]&127](j,48)|0;ca=_;da=$}W=c[f>>2]|0;c[f>>2]=W+1;if((ca|0)>0){V=ca;S=W;while(1){a[S]=ba;Y=V-1|0;X=c[f>>2]|0;c[f>>2]=X+1;if((Y|0)>0){V=Y;S=X}else{ea=X;break}}}else{ea=W}a[ea]=m;fa=da}else{fa=U}if((fa|0)==(R|0)){S=Bd[c[(c[s>>2]|0)+28>>2]&127](j,48)|0;V=c[f>>2]|0;c[f>>2]=V+1;a[V]=S}else{S=a[B]|0;V=(S&1)==0;if(V){ga=(S&255)>>>1}else{ga=c[E>>2]|0}if((ga|0)==0){ha=fa;ia=0;ja=0;ka=-1}else{if(V){la=C}else{la=c[D>>2]|0}ha=fa;ia=0;ja=0;ka=a[la]|0}while(1){if((ia|0)==(ka|0)){V=c[f>>2]|0;c[f>>2]=V+1;a[V]=n;V=ja+1|0;S=a[B]|0;T=(S&1)==0;if(T){ma=(S&255)>>>1}else{ma=c[E>>2]|0}if(V>>>0<ma>>>0){if(T){na=C}else{na=c[D>>2]|0}if((a[na+V|0]|0)==127){oa=-1;pa=V;qa=0}else{if(T){ra=C}else{ra=c[D>>2]|0}oa=a[ra+V|0]|0;pa=V;qa=0}}else{oa=ka;pa=V;qa=0}}else{oa=ka;pa=ja;qa=ia}ha=ha-1|0;V=a[ha]|0;T=c[f>>2]|0;c[f>>2]=T+1;a[T]=V;if((ha|0)==(R|0)){break}else{ia=qa+1|0;ja=pa;ka=oa}}}W=c[f>>2]|0;if((h|0)!=(W|0)?(V=W-1|0,V>>>0>h>>>0):0){W=h;T=V;while(1){V=a[W]|0;a[W]=a[T]|0;a[T]=V;V=W+1|0;S=T-1|0;if(V>>>0<S>>>0){W=V;T=S}else{I=R;break}}}else{I=R}break};default:{I=H}}G=G+1|0;if(!(G>>>0<4>>>0)){break}else{H=I}}I=a[t]|0;t=(I&1)==0;if(t){sa=(I&255)>>>1}else{sa=c[w>>2]|0}if(sa>>>0>1>>>0){if(t){ta=(I&255)>>>1;ua=u;va=u}else{u=c[v>>2]|0;ta=c[w>>2]|0;ua=u;va=u}u=va+1|0;va=ua+ta|0;ta=c[f>>2]|0;if((u|0)==(va|0)){wa=ta}else{ua=ta;ta=u;while(1){a[ua]=a[ta]|0;u=ta+1|0;w=ua+1|0;if((u|0)==(va|0)){wa=w;break}else{ua=w;ta=u}}}c[f>>2]=wa}wa=g&176;if((wa|0)==16){return}else if((wa|0)==32){c[e>>2]=c[f>>2];return}else{c[e>>2]=d;return}}function np(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;d=i;i=i+32|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+16|0;m=d+24|0;n=m;o=i;i=i+1|0;i=i+7&-8;p=i;i=i+1|0;i=i+7&-8;q=i;i=i+12|0;i=i+7&-8;r=i;i=i+12|0;i=i+7&-8;s=i;i=i+12|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+100|0;i=i+7&-8;v=i;i=i+4|0;i=i+7&-8;w=i;i=i+4|0;i=i+7&-8;x=i;i=i+4|0;i=i+7&-8;dl(l,g);y=l|0;z=c[y>>2]|0;if(!((c[6536]|0)==-1)){c[k>>2]=26144;c[k+4>>2]=30;c[k+8>>2]=0;Ck(26144,k,160)}k=(c[6537]|0)-1|0;A=c[z+8>>2]|0;if((c[z+12>>2]|0)-A>>2>>>0>k>>>0?(z=c[A+(k<<2)>>2]|0,(z|0)!=0):0){k=z;A=j;B=a[A]|0;C=(B&1)==0;if(C){D=(B&255)>>>1}else{D=c[j+4>>2]|0}if((D|0)==0){E=0}else{if(C){F=j+1|0}else{F=c[j+8>>2]|0}C=a[F]|0;E=C<<24>>24==(Bd[c[(c[z>>2]|0)+28>>2]&127](k,45)|0)<<24>>24}c[m>>2]=0;eu(q|0,0,12)|0;m=r;eu(m|0,0,12)|0;z=s;eu(z|0,0,12)|0;lp(f,E,l,n,o,p,q,r,s,t);l=u|0;u=a[A]|0;f=(u&1)==0;if(f){G=(u&255)>>>1}else{G=c[j+4>>2]|0}C=c[t>>2]|0;if((G|0)>(C|0)){if(f){H=(u&255)>>>1}else{H=c[j+4>>2]|0}f=a[z]|0;if((f&1)==0){I=(f&255)>>>1}else{I=c[s+4>>2]|0}f=a[m]|0;if((f&1)==0){J=(f&255)>>>1}else{J=c[r+4>>2]|0}K=I+(H-C<<1|1)+J|0}else{J=a[z]|0;if((J&1)==0){L=(J&255)>>>1}else{L=c[s+4>>2]|0}J=a[m]|0;if((J&1)==0){M=(J&255)>>>1}else{M=c[r+4>>2]|0}K=L+2+M|0}M=K+C|0;if(M>>>0>100>>>0){K=It(M)|0;if((K|0)==0){St();N=0;O=0;P=a[A]|0}else{N=K;O=K;P=u}}else{N=l;O=0;P=u}if((P&1)==0){Q=(P&255)>>>1;R=j+1|0}else{Q=c[j+4>>2]|0;R=c[j+8>>2]|0}mp(N,v,w,c[g+4>>2]|0,R,R+Q|0,k,E,n,a[o]|0,a[p]|0,q,r,s,C);c[x>>2]=c[e>>2];re(b,x,N,c[v>>2]|0,c[w>>2]|0,g,h);if((O|0)==0){S=100;T=0;Ik(s);Ik(r);Ik(q);U=c[y>>2]|0;V=U|0;W=fk(V)|0;i=d;return}Jt(O);S=100;T=0;Ik(s);Ik(r);Ik(q);U=c[y>>2]|0;V=U|0;W=fk(V)|0;i=d;return}d=dd(4)|0;ht(d);ac(d|0,18472,230)}function op(a){a=a|0;dk(a|0);Nt(a);return}function pp(a){a=a|0;dk(a|0);return}function qp(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=+k;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=i;i=i+544|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=d|0;m=d+120|0;n=d+528|0;o=d+536|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+12|0;i=i+7&-8;t=i;i=i+12|0;i=i+7&-8;u=i;i=i+12|0;i=i+7&-8;v=i;i=i+4|0;i=i+7&-8;w=i;i=i+400|0;x=i;i=i+4|0;i=i+7&-8;y=i;i=i+4|0;i=i+7&-8;z=i;i=i+4|0;i=i+7&-8;A=d+16|0;c[m>>2]=A;B=d+128|0;C=kb(A|0,100,544,(A=i,i=i+8|0,h[A>>3]=k,A)|0)|0;i=A;if(C>>>0>99>>>0){if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}D=ss(m,c[6072]|0,544,(A=i,i=i+8|0,h[A>>3]=k,A)|0)|0;i=A;A=c[m>>2]|0;if((A|0)==0){St();E=c[m>>2]|0}else{E=A}A=It(D<<2)|0;F=A;if((A|0)==0){St();G=0;H=D;I=0;J=E}else{G=F;H=D;I=F;J=E}}else{G=B;H=C;I=0;J=0}dl(n,g);C=n|0;B=c[C>>2]|0;if(!((c[6534]|0)==-1)){c[l>>2]=26136;c[l+4>>2]=30;c[l+8>>2]=0;Ck(26136,l,160)}l=(c[6535]|0)-1|0;E=c[B+8>>2]|0;if((c[B+12>>2]|0)-E>>2>>>0>l>>>0?(B=c[E+(l<<2)>>2]|0,(B|0)!=0):0){l=B;E=c[m>>2]|0;Md[c[(c[B>>2]|0)+48>>2]&15](l,E,E+H|0,G)|0;if((H|0)==0){K=0}else{K=(a[c[m>>2]|0]|0)==45}c[o>>2]=0;eu(s|0,0,12)|0;o=t;eu(o|0,0,12)|0;m=u;eu(m|0,0,12)|0;rp(f,K,n,p,q,r,s,t,u,v);n=w|0;w=c[v>>2]|0;if((H|0)>(w|0)){v=a[m]|0;if((v&1)==0){L=(v&255)>>>1}else{L=c[u+4>>2]|0}v=a[o]|0;if((v&1)==0){M=(v&255)>>>1}else{M=c[t+4>>2]|0}N=L+(H-w<<1|1)+M|0}else{M=a[m]|0;if((M&1)==0){O=(M&255)>>>1}else{O=c[u+4>>2]|0}M=a[o]|0;if((M&1)==0){P=(M&255)>>>1}else{P=c[t+4>>2]|0}N=O+2+P|0}P=N+w|0;if(P>>>0>100>>>0){N=It(P<<2)|0;P=N;if((N|0)==0){St();Q=0;R=0}else{Q=P;R=P}}else{Q=n;R=0}sp(Q,x,y,c[g+4>>2]|0,G,G+(H<<2)|0,l,K,p,c[q>>2]|0,c[r>>2]|0,s,t,u,w);c[z>>2]=c[e>>2];ts(b,z,Q,c[x>>2]|0,c[y>>2]|0,g,j);if((R|0)!=0){Jt(R)}Vk(u);Vk(t);Ik(s);fk(c[C>>2]|0)|0;if((I|0)!=0){Jt(I)}if((J|0)==0){S=400;T=0;U=100;V=0;i=d;return}Jt(J);S=400;T=0;U=100;V=0;i=d;return}d=dd(4)|0;ht(d);ac(d|0,18472,230)}function rp(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;n=i;i=i+40|0;o=n|0;p=n+16|0;q=n+32|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=t;v=i;i=i+12|0;i=i+7&-8;w=i;i=i+12|0;i=i+7&-8;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+4|0;i=i+7&-8;z=y;A=i;i=i+12|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;C=B;E=i;i=i+12|0;i=i+7&-8;F=i;i=i+12|0;i=i+7&-8;G=i;i=i+12|0;i=i+7&-8;H=c[e>>2]|0;if(b){if(!((c[6650]|0)==-1)){c[p>>2]=26600;c[p+4>>2]=30;c[p+8>>2]=0;Ck(26600,p,160)}p=(c[6651]|0)-1|0;b=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-b>>2>>>0>p>>>0)){I=dd(4)|0;J=I;ht(J);ac(I|0,18472,230)}e=c[b+(p<<2)>>2]|0;if((e|0)==0){I=dd(4)|0;J=I;ht(J);ac(I|0,18472,230)}I=e;J=c[e>>2]|0;if(d){Ad[c[J+44>>2]&127](r,I);r=f;D=c[q>>2]|0;a[r]=D;D=D>>8;a[r+1|0]=D;D=D>>8;a[r+2|0]=D;D=D>>8;a[r+3|0]=D;Ad[c[(c[e>>2]|0)+32>>2]&127](s,I);r=l;if((a[r]&1)==0){c[l+4>>2]=0;a[r]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}Xk(l,0);q=s;c[r>>2]=c[q>>2];c[r+4>>2]=c[q+4>>2];c[r+8>>2]=c[q+8>>2];eu(q|0,0,12)|0;Vk(s)}else{Ad[c[J+40>>2]&127](u,I);u=f;D=c[t>>2]|0;a[u]=D;D=D>>8;a[u+1|0]=D;D=D>>8;a[u+2|0]=D;D=D>>8;a[u+3|0]=D;Ad[c[(c[e>>2]|0)+28>>2]&127](v,I);u=l;if((a[u]&1)==0){c[l+4>>2]=0;a[u]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}Xk(l,0);t=v;c[u>>2]=c[t>>2];c[u+4>>2]=c[t+4>>2];c[u+8>>2]=c[t+8>>2];eu(t|0,0,12)|0;Vk(v)}v=e;c[g>>2]=Ed[c[(c[v>>2]|0)+12>>2]&255](I)|0;c[h>>2]=Ed[c[(c[v>>2]|0)+16>>2]&255](I)|0;Ad[c[(c[e>>2]|0)+20>>2]&127](w,I);t=j;if((a[t]&1)==0){a[j+1|0]=0;a[t]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Nk(j,0);u=w;c[t>>2]=c[u>>2];c[t+4>>2]=c[u+4>>2];c[t+8>>2]=c[u+8>>2];eu(u|0,0,12)|0;Ik(w);Ad[c[(c[e>>2]|0)+24>>2]&127](x,I);e=k;if((a[e]&1)==0){c[k+4>>2]=0;a[e]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}Xk(k,0);w=x;c[e>>2]=c[w>>2];c[e+4>>2]=c[w+4>>2];c[e+8>>2]=c[w+8>>2];eu(w|0,0,12)|0;Vk(x);K=Ed[c[(c[v>>2]|0)+36>>2]&255](I)|0;c[m>>2]=K;i=n;return}else{if(!((c[6652]|0)==-1)){c[o>>2]=26608;c[o+4>>2]=30;c[o+8>>2]=0;Ck(26608,o,160)}o=(c[6653]|0)-1|0;I=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-I>>2>>>0>o>>>0)){L=dd(4)|0;M=L;ht(M);ac(L|0,18472,230)}H=c[I+(o<<2)>>2]|0;if((H|0)==0){L=dd(4)|0;M=L;ht(M);ac(L|0,18472,230)}L=H;M=c[H>>2]|0;if(d){Ad[c[M+44>>2]&127](z,L);z=f;D=c[y>>2]|0;a[z]=D;D=D>>8;a[z+1|0]=D;D=D>>8;a[z+2|0]=D;D=D>>8;a[z+3|0]=D;Ad[c[(c[H>>2]|0)+32>>2]&127](A,L);z=l;if((a[z]&1)==0){c[l+4>>2]=0;a[z]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}Xk(l,0);y=A;c[z>>2]=c[y>>2];c[z+4>>2]=c[y+4>>2];c[z+8>>2]=c[y+8>>2];eu(y|0,0,12)|0;Vk(A)}else{Ad[c[M+40>>2]&127](C,L);C=f;D=c[B>>2]|0;a[C]=D;D=D>>8;a[C+1|0]=D;D=D>>8;a[C+2|0]=D;D=D>>8;a[C+3|0]=D;Ad[c[(c[H>>2]|0)+28>>2]&127](E,L);C=l;if((a[C]&1)==0){c[l+4>>2]=0;a[C]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}Xk(l,0);l=E;c[C>>2]=c[l>>2];c[C+4>>2]=c[l+4>>2];c[C+8>>2]=c[l+8>>2];eu(l|0,0,12)|0;Vk(E)}E=H;c[g>>2]=Ed[c[(c[E>>2]|0)+12>>2]&255](L)|0;c[h>>2]=Ed[c[(c[E>>2]|0)+16>>2]&255](L)|0;Ad[c[(c[H>>2]|0)+20>>2]&127](F,L);h=j;if((a[h]&1)==0){a[j+1|0]=0;a[h]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Nk(j,0);j=F;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];eu(j|0,0,12)|0;Ik(F);Ad[c[(c[H>>2]|0)+24>>2]&127](G,L);H=k;if((a[H]&1)==0){c[k+4>>2]=0;a[H]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}Xk(k,0);k=G;c[H>>2]=c[k>>2];c[H+4>>2]=c[k+4>>2];c[H+8>>2]=c[k+8>>2];eu(k|0,0,12)|0;Vk(G);K=Ed[c[(c[E>>2]|0)+36>>2]&255](L)|0;c[m>>2]=K;i=n;return}}function sp(b,d,e,f,g,h,i,j,k,l,m,n,o,p,q){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0;c[e>>2]=b;r=i;s=p;t=p+4|0;u=p+8|0;p=o;v=(f&512|0)==0;w=o+4|0;x=o+8|0;o=(q|0)>0;y=n;z=n+1|0;A=n+8|0;B=n+4|0;n=i;C=0;D=g;while(1){switch(a[k+C|0]|0){case 0:{c[d>>2]=c[e>>2];E=D;break};case 1:{c[d>>2]=c[e>>2];g=Bd[c[(c[r>>2]|0)+44>>2]&127](i,32)|0;F=c[e>>2]|0;c[e>>2]=F+4;c[F>>2]=g;E=D;break};case 3:{g=a[s]|0;F=(g&1)==0;if(F){G=(g&255)>>>1}else{G=c[t>>2]|0}if((G|0)==0){E=D}else{if(F){H=t}else{H=c[u>>2]|0}F=c[H>>2]|0;g=c[e>>2]|0;c[e>>2]=g+4;c[g>>2]=F;E=D}break};case 2:{F=a[p]|0;g=(F&1)==0;if(g){I=(F&255)>>>1}else{I=c[w>>2]|0}if((I|0)==0|v){E=D}else{if(g){J=(F&255)>>>1;K=w;L=w}else{F=c[x>>2]|0;J=c[w>>2]|0;K=F;L=F}F=K+(J<<2)|0;g=c[e>>2]|0;if((L|0)==(F|0)){M=g}else{N=(K+(J-1<<2)-L|0)>>>2;O=g;P=L;while(1){c[O>>2]=c[P>>2];P=P+4|0;if((P|0)==(F|0)){break}else{O=O+4|0}}M=g+(N+1<<2)|0}c[e>>2]=M;E=D}break};case 4:{O=c[e>>2]|0;F=j?D+4|0:D;a:do{if(F>>>0<h>>>0){P=F;while(1){Q=P+4|0;if(!(Cd[c[(c[n>>2]|0)+12>>2]&63](i,2048,c[P>>2]|0)|0)){R=P;break a}if(Q>>>0<h>>>0){P=Q}else{R=Q;break}}}else{R=F}}while(0);if(o){if(R>>>0>F>>>0){N=R;g=q;P=c[e>>2]|0;do{N=N-4|0;Q=P;P=P+4|0;c[Q>>2]=c[N>>2];g=g-1|0;S=(g|0)>0}while(N>>>0>F>>>0&S);c[e>>2]=P;if(S){T=g;U=N;V=33}else{Q=c[e>>2]|0;c[e>>2]=Q+4;W=Q;X=N}}else{T=q;U=R;V=33}if((V|0)==33){V=0;Q=Bd[c[(c[r>>2]|0)+44>>2]&127](i,48)|0;Y=c[e>>2]|0;Z=Y+4|0;c[e>>2]=Z;if((T|0)>0){_=T;$=Y;aa=Z;while(1){c[$>>2]=Q;_=_-1|0;if((_|0)<=0){break}else{$=aa;aa=aa+4|0}}c[e>>2]=Y+(T+1<<2);W=Y+(T<<2)|0;X=U}else{W=Y;X=U}}c[W>>2]=l;ba=X}else{ba=R}if((ba|0)==(F|0)){aa=Bd[c[(c[r>>2]|0)+44>>2]&127](i,48)|0;$=c[e>>2]|0;_=$+4|0;c[e>>2]=_;c[$>>2]=aa;ca=_}else{_=a[y]|0;aa=(_&1)==0;if(aa){da=(_&255)>>>1}else{da=c[B>>2]|0}if((da|0)==0){ea=ba;fa=0;ga=0;ha=-1}else{if(aa){ia=z}else{ia=c[A>>2]|0}ea=ba;fa=0;ga=0;ha=a[ia]|0}while(1){aa=c[e>>2]|0;if((fa|0)==(ha|0)){_=aa+4|0;c[e>>2]=_;c[aa>>2]=m;$=ga+1|0;Q=a[y]|0;N=(Q&1)==0;if(N){ja=(Q&255)>>>1}else{ja=c[B>>2]|0}if($>>>0<ja>>>0){if(N){ka=z}else{ka=c[A>>2]|0}if((a[ka+$|0]|0)==127){la=-1;ma=$;na=0;oa=_}else{if(N){pa=z}else{pa=c[A>>2]|0}la=a[pa+$|0]|0;ma=$;na=0;oa=_}}else{la=ha;ma=$;na=0;oa=_}}else{la=ha;ma=ga;na=fa;oa=aa}aa=ea-4|0;_=c[aa>>2]|0;$=oa+4|0;c[e>>2]=$;c[oa>>2]=_;if((aa|0)==(F|0)){ca=$;break}else{ea=aa;fa=na+1|0;ga=ma;ha=la}}}if((O|0)!=(ca|0)?(Y=ca-4|0,Y>>>0>O>>>0):0){aa=O;$=Y;while(1){Y=c[aa>>2]|0;c[aa>>2]=c[$>>2];c[$>>2]=Y;Y=aa+4|0;_=$-4|0;if(Y>>>0<_>>>0){aa=Y;$=_}else{E=F;break}}}else{E=F}break};default:{E=D}}C=C+1|0;if(!(C>>>0<4>>>0)){break}else{D=E}}E=a[s]|0;s=(E&1)==0;if(s){qa=(E&255)>>>1}else{qa=c[t>>2]|0}if(qa>>>0>1>>>0){if(s){ra=(E&255)>>>1;sa=t;ta=t}else{E=c[u>>2]|0;ra=c[t>>2]|0;sa=E;ta=E}E=ta+4|0;ta=sa+(ra<<2)|0;t=c[e>>2]|0;if((E|0)==(ta|0)){ua=t}else{u=(sa+(ra-1<<2)-E|0)>>>2;ra=t;sa=E;while(1){c[ra>>2]=c[sa>>2];sa=sa+4|0;if((sa|0)==(ta|0)){break}else{ra=ra+4|0}}ua=t+(u+1<<2)|0}c[e>>2]=ua}ua=f&176;if((ua|0)==32){c[d>>2]=c[e>>2];return}else if((ua|0)==16){return}else{c[d>>2]=b;return}}function tp(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;d=i;i=i+32|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+16|0;m=d+24|0;n=m;o=i;i=i+4|0;i=i+7&-8;p=i;i=i+4|0;i=i+7&-8;q=i;i=i+12|0;i=i+7&-8;r=i;i=i+12|0;i=i+7&-8;s=i;i=i+12|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+400|0;v=i;i=i+4|0;i=i+7&-8;w=i;i=i+4|0;i=i+7&-8;x=i;i=i+4|0;i=i+7&-8;dl(l,g);y=l|0;z=c[y>>2]|0;if(!((c[6534]|0)==-1)){c[k>>2]=26136;c[k+4>>2]=30;c[k+8>>2]=0;Ck(26136,k,160)}k=(c[6535]|0)-1|0;A=c[z+8>>2]|0;if((c[z+12>>2]|0)-A>>2>>>0>k>>>0?(z=c[A+(k<<2)>>2]|0,(z|0)!=0):0){k=z;A=j;B=a[A]|0;C=(B&1)==0;if(C){D=(B&255)>>>1}else{D=c[j+4>>2]|0}if((D|0)==0){E=0}else{if(C){F=j+4|0}else{F=c[j+8>>2]|0}C=c[F>>2]|0;E=(C|0)==(Bd[c[(c[z>>2]|0)+44>>2]&127](k,45)|0)}c[m>>2]=0;eu(q|0,0,12)|0;m=r;eu(m|0,0,12)|0;z=s;eu(z|0,0,12)|0;rp(f,E,l,n,o,p,q,r,s,t);l=u|0;u=a[A]|0;f=(u&1)==0;if(f){G=(u&255)>>>1}else{G=c[j+4>>2]|0}C=c[t>>2]|0;if((G|0)>(C|0)){if(f){H=(u&255)>>>1}else{H=c[j+4>>2]|0}f=a[z]|0;if((f&1)==0){I=(f&255)>>>1}else{I=c[s+4>>2]|0}f=a[m]|0;if((f&1)==0){J=(f&255)>>>1}else{J=c[r+4>>2]|0}K=I+(H-C<<1|1)+J|0}else{J=a[z]|0;if((J&1)==0){L=(J&255)>>>1}else{L=c[s+4>>2]|0}J=a[m]|0;if((J&1)==0){M=(J&255)>>>1}else{M=c[r+4>>2]|0}K=L+2+M|0}M=K+C|0;if(M>>>0>100>>>0){K=It(M<<2)|0;M=K;if((K|0)==0){St();N=0;O=0;P=a[A]|0}else{N=M;O=M;P=u}}else{N=l;O=0;P=u}if((P&1)==0){Q=(P&255)>>>1;R=j+4|0}else{Q=c[j+4>>2]|0;R=c[j+8>>2]|0}sp(N,v,w,c[g+4>>2]|0,R,R+(Q<<2)|0,k,E,n,c[o>>2]|0,c[p>>2]|0,q,r,s,C);c[x>>2]=c[e>>2];ts(b,x,N,c[v>>2]|0,c[w>>2]|0,g,h);if((O|0)==0){S=400;T=0;Vk(s);Vk(r);Ik(q);U=c[y>>2]|0;V=U|0;W=fk(V)|0;i=d;return}Jt(O);S=400;T=0;Vk(s);Vk(r);Ik(q);U=c[y>>2]|0;V=U|0;W=fk(V)|0;i=d;return}d=dd(4)|0;ht(d);ac(d|0,18472,230)}function up(a){a=a|0;dk(a|0);Nt(a);return}function vp(a){a=a|0;dk(a|0);return}function wp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=Fb(f|0,1)|0;return d>>>(((d|0)!=-1|0)>>>0)|0}function xp(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=i;i=i+16|0;j=d|0;k=j;eu(k|0,0,12)|0;l=a[h]|0;if((l&1)==0){m=(l&255)>>>1;n=h+1|0;o=h+1|0}else{l=c[h+8>>2]|0;m=c[h+4>>2]|0;n=l;o=l}l=o+m|0;if(n>>>0<l>>>0){m=n;do{Pk(j,a[m]|0);m=m+1|0}while(m>>>0<l>>>0);l=(e|0)==-1?-1:e<<1;if((a[k]&1)==0){p=l;q=10}else{r=c[j+8>>2]|0;s=l}}else{p=(e|0)==-1?-1:e<<1;q=10}if((q|0)==10){r=j+1|0;s=p}p=Gb(s|0,f|0,g|0,r|0)|0;eu(b|0,0,12)|0;r=fu(p|0)|0;g=p+r|0;if((r|0)>0){t=p}else{Ik(j);i=d;return}do{Pk(b,a[t]|0);t=t+1|0}while(t>>>0<g>>>0);Ik(j);i=d;return}function yp(a,b){a=a|0;b=b|0;Dc(((b|0)==-1?-1:b<<1)|0)|0;return}function zp(a){a=a|0;dk(a|0);Nt(a);return}function Ap(a){a=a|0;dk(a|0);return}function Bp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=Fb(f|0,1)|0;return d>>>(((d|0)!=-1|0)>>>0)|0}function Cp(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;d=i;i=i+240|0;j=d|0;k=d+8|0;l=d+40|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+192|0;q=d+200|0;r=d+208|0;s=d+224|0;t=d+232|0;u=r;eu(u|0,0,12)|0;c[s+4>>2]=0;c[s>>2]=7432;v=a[h]|0;if((v&1)==0){w=(v&255)>>>1;x=h+4|0;y=h+4|0}else{v=c[h+8>>2]|0;w=c[h+4>>2]|0;x=v;y=v}v=y+(w<<2)|0;w=k|0;y=j;c[j>>2]=0;c[j+4>>2]=0;a:do{if(x>>>0<v>>>0){j=s|0;h=s;z=k+32|0;A=x;B=7432;while(1){c[m>>2]=A;C=(Id[c[B+12>>2]&31](j,y,A,v,m,w,z,l)|0)==2;D=c[m>>2]|0;if(C|(D|0)==(A|0)){break}if(w>>>0<(c[l>>2]|0)>>>0){C=w;do{Pk(r,a[C]|0);C=C+1|0}while(C>>>0<(c[l>>2]|0)>>>0);E=c[m>>2]|0}else{E=D}if(!(E>>>0<v>>>0)){break a}A=E;B=c[h>>2]|0}$o(2288)}}while(0);dk(s|0);if((a[u]&1)==0){F=r+1|0}else{F=c[r+8>>2]|0}u=Gb(((e|0)==-1?-1:e<<1)|0,f|0,g|0,F|0)|0;eu(b|0,0,12)|0;c[t+4>>2]=0;c[t>>2]=7376;F=fu(u|0)|0;g=u+F|0;f=n;c[n>>2]=0;c[n+4>>2]=0;if((F|0)<=0){G=8;H=0;I=4;J=0;K=4;L=0;M=t|0;dk(M);Ik(r);i=d;return}F=t|0;n=t;e=g;s=o|0;E=o+128|0;o=u;u=7376;while(1){c[q>>2]=o;v=(Id[c[u+16>>2]&31](F,f,o,(e-o|0)>32?o+32|0:g,q,s,E,p)|0)==2;m=c[q>>2]|0;if(v|(m|0)==(o|0)){break}if(s>>>0<(c[p>>2]|0)>>>0){v=s;do{Yk(b,c[v>>2]|0);v=v+4|0}while(v>>>0<(c[p>>2]|0)>>>0);N=c[q>>2]|0}else{N=m}if(!(N>>>0<g>>>0)){O=37;break}o=N;u=c[n>>2]|0}if((O|0)==37){G=8;H=0;I=4;J=0;K=4;L=0;M=t|0;dk(M);Ik(r);i=d;return}$o(2288)}function Dp(a,b){a=a|0;b=b|0;Dc(((b|0)==-1?-1:b<<1)|0)|0;return}function Ep(a){a=a|0;a=dd(8)|0;gk(a,376);c[a>>2]=5728;ac(a|0,18536,60)}function Fp(a){a=a|0;a=dd(8)|0;gk(a,376);c[a>>2]=5696;ac(a|0,18520,12)}function Gp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;e=i;i=i+448|0;f=e|0;g=e+16|0;h=e+32|0;j=e+48|0;k=e+64|0;l=e+80|0;m=e+96|0;n=e+112|0;o=e+128|0;p=e+144|0;q=e+160|0;r=e+176|0;s=e+192|0;t=e+208|0;u=e+224|0;v=e+240|0;w=e+256|0;x=e+272|0;y=e+288|0;z=e+304|0;A=e+320|0;B=e+336|0;C=e+352|0;D=e+368|0;E=e+384|0;F=e+400|0;G=e+416|0;H=e+432|0;c[b+4>>2]=d-1;c[b>>2]=7048;d=b+8|0;I=b+12|0;J=b+136|0;a[J]=1;K=b+24|0;c[I>>2]=K;c[d>>2]=K;c[b+16>>2]=J;J=28;L=K;do{if((L|0)==0){M=0}else{c[L>>2]=0;M=c[I>>2]|0}L=M+4|0;c[I>>2]=L;J=J-1|0}while((J|0)!=0);Gk(b+144|0,168,1);J=c[d>>2]|0;d=c[I>>2]|0;if((d|0)!=(J|0)){c[I>>2]=d+(~((d-4-J|0)>>>2)<<2)}c[6129]=0;c[6128]=6752;if(!((c[6456]|0)==-1)){c[G>>2]=25824;c[G+4>>2]=30;c[G+8>>2]=0;Ck(25824,G,160)}Hp(b,24512,(c[6457]|0)-1|0);c[6127]=0;c[6126]=6712;if(!((c[6454]|0)==-1)){c[F>>2]=25816;c[F+4>>2]=30;c[F+8>>2]=0;Ck(25816,F,160)}Hp(b,24504,(c[6455]|0)-1|0);c[6183]=0;c[6182]=7160;c[6184]=0;a[24740]=0;c[6184]=c[(Cb()|0)>>2];if(!((c[6536]|0)==-1)){c[E>>2]=26144;c[E+4>>2]=30;c[E+8>>2]=0;Ck(26144,E,160)}Hp(b,24728,(c[6537]|0)-1|0);c[6181]=0;c[6180]=7080;if(!((c[6534]|0)==-1)){c[D>>2]=26136;c[D+4>>2]=30;c[D+8>>2]=0;Ck(26136,D,160)}Hp(b,24720,(c[6535]|0)-1|0);c[6135]=0;c[6134]=6848;if(!((c[6460]|0)==-1)){c[C>>2]=25840;c[C+4>>2]=30;c[C+8>>2]=0;Ck(25840,C,160)}Hp(b,24536,(c[6461]|0)-1|0);c[6131]=0;c[6130]=6792;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}c[6132]=c[6072];if(!((c[6458]|0)==-1)){c[B>>2]=25832;c[B+4>>2]=30;c[B+8>>2]=0;Ck(25832,B,160)}Hp(b,24520,(c[6459]|0)-1|0);c[6137]=0;c[6136]=6904;if(!((c[6462]|0)==-1)){c[A>>2]=25848;c[A+4>>2]=30;c[A+8>>2]=0;Ck(25848,A,160)}Hp(b,24544,(c[6463]|0)-1|0);c[6139]=0;c[6138]=6960;if(!((c[6464]|0)==-1)){c[z>>2]=25856;c[z+4>>2]=30;c[z+8>>2]=0;Ck(25856,z,160)}Hp(b,24552,(c[6465]|0)-1|0);c[6109]=0;c[6108]=6256;a[24440]=46;a[24441]=44;eu(24444,0,12)|0;if(!((c[6440]|0)==-1)){c[y>>2]=25760;c[y+4>>2]=30;c[y+8>>2]=0;Ck(25760,y,160)}Hp(b,24432,(c[6441]|0)-1|0);c[6101]=0;c[6100]=6208;c[6102]=46;c[6103]=44;eu(24416,0,12)|0;if(!((c[6438]|0)==-1)){c[x>>2]=25752;c[x+4>>2]=30;c[x+8>>2]=0;Ck(25752,x,160)}Hp(b,24400,(c[6439]|0)-1|0);c[6125]=0;c[6124]=6640;if(!((c[6452]|0)==-1)){c[w>>2]=25808;c[w+4>>2]=30;c[w+8>>2]=0;Ck(25808,w,160)}Hp(b,24496,(c[6453]|0)-1|0);c[6123]=0;c[6122]=6568;if(!((c[6450]|0)==-1)){c[v>>2]=25800;c[v+4>>2]=30;c[v+8>>2]=0;Ck(25800,v,160)}Hp(b,24488,(c[6451]|0)-1|0);c[6121]=0;c[6120]=6504;if(!((c[6448]|0)==-1)){c[u>>2]=25792;c[u+4>>2]=30;c[u+8>>2]=0;Ck(25792,u,160)}Hp(b,24480,(c[6449]|0)-1|0);c[6119]=0;c[6118]=6440;if(!((c[6446]|0)==-1)){c[t>>2]=25784;c[t+4>>2]=30;c[t+8>>2]=0;Ck(25784,t,160)}Hp(b,24472,(c[6447]|0)-1|0);c[6193]=0;c[6192]=8384;if(!((c[6656]|0)==-1)){c[s>>2]=26624;c[s+4>>2]=30;c[s+8>>2]=0;Ck(26624,s,160)}Hp(b,24768,(c[6657]|0)-1|0);c[6191]=0;c[6190]=8320;if(!((c[6654]|0)==-1)){c[r>>2]=26616;c[r+4>>2]=30;c[r+8>>2]=0;Ck(26616,r,160)}Hp(b,24760,(c[6655]|0)-1|0);c[6189]=0;c[6188]=8256;if(!((c[6652]|0)==-1)){c[q>>2]=26608;c[q+4>>2]=30;c[q+8>>2]=0;Ck(26608,q,160)}Hp(b,24752,(c[6653]|0)-1|0);c[6187]=0;c[6186]=8192;if(!((c[6650]|0)==-1)){c[p>>2]=26600;c[p+4>>2]=30;c[p+8>>2]=0;Ck(26600,p,160)}Hp(b,24744,(c[6651]|0)-1|0);c[6083]=0;c[6082]=5912;if(!((c[6428]|0)==-1)){c[o>>2]=25712;c[o+4>>2]=30;c[o+8>>2]=0;Ck(25712,o,160)}Hp(b,24328,(c[6429]|0)-1|0);c[6081]=0;c[6080]=5872;if(!((c[6426]|0)==-1)){c[n>>2]=25704;c[n+4>>2]=30;c[n+8>>2]=0;Ck(25704,n,160)}Hp(b,24320,(c[6427]|0)-1|0);c[6079]=0;c[6078]=5832;if(!((c[6424]|0)==-1)){c[m>>2]=25696;c[m+4>>2]=30;c[m+8>>2]=0;Ck(25696,m,160)}Hp(b,24312,(c[6425]|0)-1|0);c[6077]=0;c[6076]=5792;if(!((c[6422]|0)==-1)){c[l>>2]=25688;c[l+4>>2]=30;c[l+8>>2]=0;Ck(25688,l,160)}Hp(b,24304,(c[6423]|0)-1|0);c[6097]=0;c[6096]=6112;c[6098]=6160;if(!((c[6436]|0)==-1)){c[k>>2]=25744;c[k+4>>2]=30;c[k+8>>2]=0;Ck(25744,k,160)}Hp(b,24384,(c[6437]|0)-1|0);c[6093]=0;c[6092]=6016;c[6094]=6064;if(!((c[6434]|0)==-1)){c[j>>2]=25736;c[j+4>>2]=30;c[j+8>>2]=0;Ck(25736,j,160)}Hp(b,24368,(c[6435]|0)-1|0);c[6089]=0;c[6088]=7016;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}c[6090]=c[6072];c[6088]=5984;if(!((c[6432]|0)==-1)){c[h>>2]=25728;c[h+4>>2]=30;c[h+8>>2]=0;Ck(25728,h,160)}Hp(b,24352,(c[6433]|0)-1|0);c[6085]=0;c[6084]=7016;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}c[6086]=c[6072];c[6084]=5952;if(!((c[6430]|0)==-1)){c[g>>2]=25720;c[g+4>>2]=30;c[g+8>>2]=0;Ck(25720,g,160)}Hp(b,24336,(c[6431]|0)-1|0);c[6117]=0;c[6116]=6344;if(!((c[6444]|0)==-1)){c[f>>2]=25776;c[f+4>>2]=30;c[f+8>>2]=0;Ck(25776,f,160)}Hp(b,24464,(c[6445]|0)-1|0);c[6115]=0;c[6114]=6304;if(!((c[6442]|0)==-1)){c[H>>2]=25768;c[H+4>>2]=30;c[H+8>>2]=0;Ck(25768,H,160)}Hp(b,24456,(c[6443]|0)-1|0);i=e;return}function Hp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;ek(b|0);e=a+8|0;f=a+12|0;a=c[f>>2]|0;g=e|0;h=c[g>>2]|0;i=a-h>>2;do{if(!(i>>>0>d>>>0)){j=d+1|0;if(j>>>0>i>>>0){ys(e,j-i|0);k=c[g>>2]|0;break}if(j>>>0<i>>>0?(l=h+(j<<2)|0,(a|0)!=(l|0)):0){c[f>>2]=a+(~((a-4-l|0)>>>2)<<2);k=h}else{k=h}}else{k=h}}while(0);h=c[k+(d<<2)>>2]|0;if((h|0)==0){m=k;n=m+(d<<2)|0;c[n>>2]=b;return}fk(h|0)|0;m=c[g>>2]|0;n=m+(d<<2)|0;c[n>>2]=b;return}function Ip(a){a=a|0;Jp(a);Nt(a);return}function Jp(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;c[b>>2]=7048;d=b+12|0;e=c[d>>2]|0;f=b+8|0;g=c[f>>2]|0;if((e|0)!=(g|0)){h=0;i=g;g=e;while(1){e=c[i+(h<<2)>>2]|0;if((e|0)==0){j=g;k=i}else{fk(e|0)|0;j=c[d>>2]|0;k=c[f>>2]|0}h=h+1|0;if(!(h>>>0<j-k>>2>>>0)){break}else{i=k;g=j}}}Ik(b+144|0);j=c[f>>2]|0;if((j|0)==0){l=b|0;dk(l);return}f=c[d>>2]|0;if((f|0)!=(j|0)){c[d>>2]=f+(~((f-4-j|0)>>>2)<<2)}if((b+24|0)==(j|0)){a[b+136|0]=0;l=b|0;dk(l);return}else{Nt(j);l=b|0;dk(l);return}}function Kp(){var b=0,d=0;if((a[26936]|0)!=0){b=c[6064]|0;return b|0}if((Lb(26936)|0)==0){b=c[6064]|0;return b|0}if((a[26944]|0)==0?(Lb(26944)|0)!=0:0){Gp(24560,1);c[6068]=24560;c[6066]=24272}d=c[c[6066]>>2]|0;c[6070]=d;ek(d|0);c[6064]=24280;b=c[6064]|0;return b|0}function Lp(a){a=a|0;var b=0;b=c[(Kp()|0)>>2]|0;c[a>>2]=b;ek(b|0);return}function Mp(a,b){a=a|0;b=b|0;var d=0;d=c[b>>2]|0;c[a>>2]=d;ek(d|0);return}function Np(a){a=a|0;fk(c[a>>2]|0)|0;return}function Op(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d|0;f=c[a>>2]|0;a=b|0;if(!((c[a>>2]|0)==-1)){c[e>>2]=b;c[e+4>>2]=30;c[e+8>>2]=0;Ck(a,e,160)}e=(c[b+4>>2]|0)-1|0;b=c[f+8>>2]|0;if(!((c[f+12>>2]|0)-b>>2>>>0>e>>>0)){g=0;i=d;return g|0}g=(c[b+(e<<2)>>2]|0)!=0;i=d;return g|0}function Pp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d|0;f=c[a>>2]|0;a=b|0;if(!((c[a>>2]|0)==-1)){c[e>>2]=b;c[e+4>>2]=30;c[e+8>>2]=0;Ck(a,e,160)}e=(c[b+4>>2]|0)-1|0;b=c[f+8>>2]|0;if(!((c[f+12>>2]|0)-b>>2>>>0>e>>>0)){g=dd(4)|0;h=g;ht(h);ac(g|0,18472,230);return 0}f=c[b+(e<<2)>>2]|0;if((f|0)==0){g=dd(4)|0;h=g;ht(h);ac(g|0,18472,230);return 0}else{i=d;return f|0}return 0}function Qp(a){a=a|0;dk(a|0);Nt(a);return}function Rp(a){a=a|0;if((a|0)==0){return}zd[c[(c[a>>2]|0)+4>>2]&511](a);return}function Sp(a){a=a|0;c[a+4>>2]=(J=c[6466]|0,c[6466]=J+1,J)+1;return}function Tp(a){a=a|0;dk(a|0);Nt(a);return}function Up(a,d,e){a=a|0;d=d|0;e=e|0;var f=0;if(!(e>>>0<128>>>0)){f=0;return f|0}f=(b[(c[(Cb()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16!=0;return f|0}function Vp(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;if((d|0)==(e|0)){g=d;return g|0}else{h=d;i=f}while(1){f=c[h>>2]|0;if(f>>>0<128>>>0){j=b[(c[(Cb()|0)>>2]|0)+(f<<1)>>1]|0}else{j=0}b[i>>1]=j;f=h+4|0;if((f|0)==(e|0)){g=e;break}else{h=f;i=i+2|0}}return g|0}function Wp(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((e|0)==(f|0)){g=e;return g|0}else{h=e}while(1){e=c[h>>2]|0;if(e>>>0<128>>>0?!((b[(c[(Cb()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16==0):0){g=h;i=7;break}e=h+4|0;if((e|0)==(f|0)){g=f;i=7;break}else{h=e}}if((i|0)==7){return g|0}return 0}function Xp(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;a:do{if((e|0)==(f|0)){g=e}else{a=e;while(1){h=c[a>>2]|0;if(!(h>>>0<128>>>0)){g=a;break a}i=a+4|0;if((b[(c[(Cb()|0)>>2]|0)+(h<<1)>>1]&d)<<16>>16==0){g=a;break a}if((i|0)==(f|0)){g=f;break}else{a=i}}}}while(0);return g|0}function Yp(a,b){a=a|0;b=b|0;var d=0;if(!(b>>>0<128>>>0)){d=b;return d|0}d=c[(c[(Kb()|0)>>2]|0)+(b<<2)>>2]|0;return d|0}function Zp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((b|0)==(d|0)){e=b;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128>>>0){g=c[(c[(Kb()|0)>>2]|0)+(b<<2)>>2]|0}else{g=b}c[f>>2]=g;b=f+4|0;if((b|0)==(d|0)){e=d;break}else{f=b}}return e|0}function _p(a,b){a=a|0;b=b|0;var d=0;if(!(b>>>0<128>>>0)){d=b;return d|0}d=c[(c[(nd()|0)>>2]|0)+(b<<2)>>2]|0;return d|0}function $p(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((b|0)==(d|0)){e=b;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128>>>0){g=c[(c[(nd()|0)>>2]|0)+(b<<2)>>2]|0}else{g=b}c[f>>2]=g;b=f+4|0;if((b|0)==(d|0)){e=d;break}else{f=b}}return e|0}function aq(a,b){a=a|0;b=b|0;return b<<24>>24|0}function bq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((d|0)==(e|0)){g=d;return g|0}else{h=d;i=f}while(1){c[i>>2]=a[h]|0;f=h+1|0;if((f|0)==(e|0)){g=e;break}else{h=f;i=i+4|0}}return g|0}function cq(a,b,c){a=a|0;b=b|0;c=c|0;return(b>>>0<128>>>0?b&255:c)|0}function dq(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;if((d|0)==(e|0)){h=d;return h|0}b=((e-4-d|0)>>>2)+1|0;i=d;j=g;while(1){g=c[i>>2]|0;a[j]=g>>>0<128>>>0?g&255:f;i=i+4|0;if((i|0)==(e|0)){break}else{j=j+1|0}}h=d+(b<<2)|0;return h|0}function eq(b){b=b|0;var d=0;c[b>>2]=7160;d=c[b+8>>2]|0;if((d|0)!=0?(a[b+12|0]|0)!=0:0){Ot(d)}dk(b|0);Nt(b);return}function fq(b){b=b|0;var d=0;c[b>>2]=7160;d=c[b+8>>2]|0;if((d|0)!=0?(a[b+12|0]|0)!=0:0){Ot(d)}dk(b|0);return}function gq(a,b){a=a|0;b=b|0;var d=0;if(!(b<<24>>24>-1)){d=b;return d|0}d=c[(c[(Kb()|0)>>2]|0)+((b&255)<<2)>>2]&255;return d|0}function hq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((d|0)==(e|0)){f=d;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24>-1){h=c[(c[(Kb()|0)>>2]|0)+(d<<24>>24<<2)>>2]&255}else{h=d}a[g]=h;d=g+1|0;if((d|0)==(e|0)){f=e;break}else{g=d}}return f|0}function iq(a,b){a=a|0;b=b|0;var d=0;if(!(b<<24>>24>-1)){d=b;return d|0}d=c[(c[(nd()|0)>>2]|0)+(b<<24>>24<<2)>>2]&255;return d|0}function jq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((d|0)==(e|0)){f=d;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24>-1){h=c[(c[(nd()|0)>>2]|0)+(d<<24>>24<<2)>>2]&255}else{h=d}a[g]=h;d=g+1|0;if((d|0)==(e|0)){f=e;break}else{g=d}}return f|0}function kq(a,b){a=a|0;b=b|0;return b|0}function lq(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((c|0)==(d|0)){f=c;return f|0}else{g=c;h=e}while(1){a[h]=a[g]|0;e=g+1|0;if((e|0)==(d|0)){f=d;break}else{g=e;h=h+1|0}}return f|0}function mq(a,b,c){a=a|0;b=b|0;c=c|0;return(b<<24>>24>-1?b:c)|0}function nq(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((c|0)==(d|0)){g=c;return g|0}else{h=c;i=f}while(1){f=a[h]|0;a[i]=f<<24>>24>-1?f:e;f=h+1|0;if((f|0)==(d|0)){g=d;break}else{h=f;i=i+1|0}}return g|0}function oq(a){a=a|0;dk(a|0);Nt(a);return}function pq(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function qq(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function rq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function sq(a){a=a|0;return 1}function tq(a){a=a|0;return 1}function uq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b=d-c|0;return(b>>>0<e>>>0?b:e)|0}function vq(a){a=a|0;return 1}function wq(a){a=a|0;wr(a);Nt(a);return}function xq(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;l=i;i=i+8|0;m=l|0;n=m;o=i;i=i+4|0;i=i+7&-8;p=(e|0)==(f|0);a:do{if(!p){q=e;while(1){r=q+4|0;if((c[q>>2]|0)==0){s=q;break}if((r|0)==(f|0)){s=f;break}else{q=r}}c[k>>2]=h;c[g>>2]=e;if(!(p|(h|0)==(j|0))){q=d;r=j;t=b+8|0;u=o|0;v=h;w=e;x=s;while(1){y=c[q+4>>2]|0;c[m>>2]=c[q>>2];c[m+4>>2]=y;y=Kc(c[t>>2]|0)|0;z=at(v,g,x-w>>2,r-v|0,d)|0;if((y|0)!=0){Kc(y|0)|0}if((z|0)==0){A=1;B=51;break}else if((z|0)==(-1|0)){B=16;break}y=(c[k>>2]|0)+z|0;c[k>>2]=y;if((y|0)==(j|0)){B=49;break}if((x|0)==(f|0)){C=f;D=c[g>>2]|0;E=y}else{y=Kc(c[t>>2]|0)|0;z=$s(u,0,d)|0;if((y|0)!=0){Kc(y|0)|0}if((z|0)==-1){A=2;B=51;break}y=c[k>>2]|0;if(z>>>0>(r-y|0)>>>0){A=1;B=51;break}b:do{if((z|0)!=0){F=z;G=u;H=y;while(1){I=a[G]|0;c[k>>2]=H+1;a[H]=I;I=F-1|0;if((I|0)==0){break b}F=I;G=G+1|0;H=c[k>>2]|0}}}while(0);y=(c[g>>2]|0)+4|0;c[g>>2]=y;c:do{if((y|0)==(f|0)){J=f}else{z=y;while(1){H=z+4|0;if((c[z>>2]|0)==0){J=z;break c}if((H|0)==(f|0)){J=f;break}else{z=H}}}}while(0);C=J;D=y;E=c[k>>2]|0}if((D|0)==(f|0)|(E|0)==(j|0)){K=D;break a}else{v=E;w=D;x=C}}if((B|0)==16){c[k>>2]=v;d:do{if((w|0)==(c[g>>2]|0)){L=w}else{x=w;u=v;while(1){r=c[x>>2]|0;q=Kc(c[t>>2]|0)|0;z=$s(u,r,n)|0;if((q|0)!=0){Kc(q|0)|0}if((z|0)==-1){L=x;break d}q=(c[k>>2]|0)+z|0;c[k>>2]=q;z=x+4|0;if((z|0)==(c[g>>2]|0)){L=z;break}else{x=z;u=q}}}}while(0);c[g>>2]=L;A=2;i=l;return A|0}else if((B|0)==49){K=c[g>>2]|0;break}else if((B|0)==51){i=l;return A|0}}else{K=e}}else{c[k>>2]=h;c[g>>2]=e;K=e}}while(0);A=(K|0)!=(f|0)|0;i=l;return A|0}function yq(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;l=i;i=i+8|0;m=l|0;n=m;o=(e|0)==(f|0);a:do{if(!o){p=e;while(1){q=p+1|0;if((a[p]|0)==0){r=p;break}if((q|0)==(f|0)){r=f;break}else{p=q}}c[k>>2]=h;c[g>>2]=e;if(!(o|(h|0)==(j|0))){p=d;q=j;s=b+8|0;t=h;u=e;v=r;while(1){w=c[p+4>>2]|0;c[m>>2]=c[p>>2];c[m+4>>2]=w;x=v;w=Kc(c[s>>2]|0)|0;y=Ys(t,g,x-u|0,q-t>>2,d)|0;if((w|0)!=0){Kc(w|0)|0}if((y|0)==(-1|0)){z=16;break}else if((y|0)==0){A=2;z=50;break}w=(c[k>>2]|0)+(y<<2)|0;c[k>>2]=w;if((w|0)==(j|0)){z=48;break}y=c[g>>2]|0;if((v|0)==(f|0)){B=f;C=y;D=w}else{E=Kc(c[s>>2]|0)|0;F=Xs(w,y,1,d)|0;if((E|0)!=0){Kc(E|0)|0}if((F|0)!=0){A=2;z=50;break}c[k>>2]=(c[k>>2]|0)+4;F=(c[g>>2]|0)+1|0;c[g>>2]=F;b:do{if((F|0)==(f|0)){G=f}else{E=F;while(1){y=E+1|0;if((a[E]|0)==0){G=E;break b}if((y|0)==(f|0)){G=f;break}else{E=y}}}}while(0);B=G;C=F;D=c[k>>2]|0}if((C|0)==(f|0)|(D|0)==(j|0)){H=C;break a}else{t=D;u=C;v=B}}if((z|0)==16){c[k>>2]=t;c:do{if((u|0)!=(c[g>>2]|0)){v=t;q=u;while(1){p=Kc(c[s>>2]|0)|0;E=Xs(v,q,x-q|0,n)|0;if((p|0)!=0){Kc(p|0)|0}if((E|0)==0){I=q+1|0}else if((E|0)==(-1|0)){z=27;break}else if((E|0)==(-2|0)){z=28;break}else{I=q+E|0}E=(c[k>>2]|0)+4|0;c[k>>2]=E;if((I|0)==(c[g>>2]|0)){J=I;break c}else{v=E;q=I}}if((z|0)==27){c[g>>2]=q;A=2;i=l;return A|0}else if((z|0)==28){c[g>>2]=q;A=1;i=l;return A|0}}else{J=u}}while(0);c[g>>2]=J;A=(J|0)!=(f|0)|0;i=l;return A|0}else if((z|0)==48){H=c[g>>2]|0;break}else if((z|0)==50){i=l;return A|0}}else{H=e}}else{c[k>>2]=h;c[g>>2]=e;H=e}}while(0);A=(H|0)!=(f|0)|0;i=l;return A|0}function zq(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;i=i+8|0;c[g>>2]=e;e=h|0;j=Kc(c[b+8>>2]|0)|0;b=$s(e,0,d)|0;if((j|0)!=0){Kc(j|0)|0}if((b|0)==(-1|0)|(b|0)==0){k=2;i=h;return k|0}j=b-1|0;b=c[g>>2]|0;if(j>>>0>(f-b|0)>>>0){k=1;i=h;return k|0}if((j|0)==0){k=0;i=h;return k|0}else{l=j;m=e;n=b}while(1){b=a[m]|0;c[g>>2]=n+1;a[n]=b;b=l-1|0;if((b|0)==0){k=0;break}l=b;m=m+1|0;n=c[g>>2]|0}i=h;return k|0}function Aq(a){a=a|0;var b=0,d=0,e=0;b=a+8|0;a=Kc(c[b>>2]|0)|0;d=_s(0,0,4)|0;if((a|0)!=0){Kc(a|0)|0}if((d|0)!=0){e=-1;return e|0}d=c[b>>2]|0;if((d|0)==0){e=1;return e|0}b=Kc(d|0)|0;if((b|0)==0){e=0;return e|0}Kc(b|0)|0;e=0;return e|0}function Bq(a){a=a|0;return 0}function Cq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;if((f|0)==0|(d|0)==(e|0)){g=0;return g|0}h=e;i=a+8|0;a=d;d=0;j=0;while(1){k=Kc(c[i>>2]|0)|0;l=Ws(a,h-a|0,b)|0;if((k|0)!=0){Kc(k|0)|0}if((l|0)==(-1|0)|(l|0)==(-2|0)){g=d;m=15;break}else if((l|0)==0){n=1;o=a+1|0}else{n=l;o=a+l|0}l=n+d|0;k=j+1|0;if(k>>>0>=f>>>0|(o|0)==(e|0)){g=l;m=15;break}else{a=o;d=l;j=k}}if((m|0)==15){return g|0}return 0}function Dq(a){a=a|0;var b=0,d=0;b=c[a+8>>2]|0;if((b|0)!=0){a=Kc(b|0)|0;if((a|0)==0){d=4}else{Kc(a|0)|0;d=4}}else{d=1}return d|0}function Eq(a){a=a|0;dk(a|0);Nt(a);return}function Fq(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=zs(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>1<<1);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function Gq(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=As(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>1<<1);i=b;return l|0}function Hq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function Iq(a){a=a|0;return 0}function Jq(a){a=a|0;return 0}function Kq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Bs(c,d,e,1114111,0)|0}function Lq(a){a=a|0;return 4}function Mq(a){a=a|0;dk(a|0);Nt(a);return}function Nq(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=Cs(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>2<<2);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function Oq(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=Ds(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>2<<2);i=b;return l|0}function Pq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function Qq(a){a=a|0;return 0}function Rq(a){a=a|0;return 0}function Sq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Es(c,d,e,1114111,0)|0}function Tq(a){a=a|0;return 4}function Uq(a){a=a|0;dk(a|0);Nt(a);return}function Vq(a){a=a|0;dk(a|0);Nt(a);return}function Wq(a){a=a|0;c[a>>2]=6256;Ik(a+12|0);dk(a|0);Nt(a);return}function Xq(a){a=a|0;c[a>>2]=6256;Ik(a+12|0);dk(a|0);return}function Yq(a){a=a|0;c[a>>2]=6208;Ik(a+16|0);dk(a|0);Nt(a);return}function Zq(a){a=a|0;c[a>>2]=6208;Ik(a+16|0);dk(a|0);return}function _q(b){b=b|0;return a[b+8|0]|0}function $q(a){a=a|0;return c[a+8>>2]|0}function ar(b){b=b|0;return a[b+9|0]|0}function br(a){a=a|0;return c[a+12>>2]|0}function cr(a,b){a=a|0;b=b|0;Fk(a,b+12|0);return}function dr(a,b){a=a|0;b=b|0;Fk(a,b+16|0);return}function er(a,b){a=a|0;b=b|0;Gk(a,3304,4);return}function fr(a,b){a=a|0;b=b|0;Tk(a,3256,ct(3256)|0);return}function gr(a,b){a=a|0;b=b|0;Gk(a,3168,5);return}function hr(a,b){a=a|0;b=b|0;Tk(a,3104,ct(3104)|0);return}function ir(b){b=b|0;var d=0;if((a[27032]|0)!=0){d=c[6218]|0;return d|0}if((Lb(27032)|0)==0){d=c[6218]|0;return d|0}if((a[26920]|0)==0?(Lb(26920)|0)!=0:0){eu(23800,0,168)|0;qb(126,0,v|0)|0}Jk(23800,3848)|0;Jk(23812,3800)|0;Jk(23824,3792)|0;Jk(23836,3752)|0;Jk(23848,3720)|0;Jk(23860,3696)|0;Jk(23872,3680)|0;Jk(23884,3656)|0;Jk(23896,3648)|0;Jk(23908,3640)|0;Jk(23920,3632)|0;Jk(23932,3624)|0;Jk(23944,3616)|0;Jk(23956,3608)|0;c[6218]=23800;d=c[6218]|0;return d|0}function jr(b){b=b|0;var d=0;if((a[26976]|0)!=0){d=c[6196]|0;return d|0}if((Lb(26976)|0)==0){d=c[6196]|0;return d|0}if((a[26896]|0)==0?(Lb(26896)|0)!=0:0){eu(23056,0,168)|0;qb(366,0,v|0)|0}Wk(23056,88)|0;Wk(23068,48)|0;Wk(23080,4208)|0;Wk(23092,4168)|0;Wk(23104,4128)|0;Wk(23116,4096)|0;Wk(23128,4056)|0;Wk(23140,4040)|0;Wk(23152,4024)|0;Wk(23164,3984)|0;Wk(23176,3968)|0;Wk(23188,3952)|0;Wk(23200,3920)|0;Wk(23212,3888)|0;c[6196]=23056;d=c[6196]|0;return d|0}function kr(b){b=b|0;var d=0;if((a[27024]|0)!=0){d=c[6216]|0;return d|0}if((Lb(27024)|0)==0){d=c[6216]|0;return d|0}if((a[26912]|0)==0?(Lb(26912)|0)!=0:0){eu(23512,0,288)|0;qb(22,0,v|0)|0}Jk(23512,536)|0;Jk(23524,520)|0;Jk(23536,512)|0;Jk(23548,488)|0;Jk(23560,480)|0;Jk(23572,472)|0;Jk(23584,424)|0;Jk(23596,400)|0;Jk(23608,384)|0;Jk(23620,368)|0;Jk(23632,352)|0;Jk(23644,296)|0;Jk(23656,288)|0;Jk(23668,280)|0;Jk(23680,272)|0;Jk(23692,264)|0;Jk(23704,480)|0;Jk(23716,240)|0;Jk(23728,232)|0;Jk(23740,176)|0;Jk(23752,160)|0;Jk(23764,152)|0;Jk(23776,144)|0;Jk(23788,136)|0;c[6216]=23512;d=c[6216]|0;return d|0}function lr(b){b=b|0;var d=0;if((a[26968]|0)!=0){d=c[6194]|0;return d|0}if((Lb(26968)|0)==0){d=c[6194]|0;return d|0}if((a[26888]|0)==0?(Lb(26888)|0)!=0:0){eu(22768,0,288)|0;qb(96,0,v|0)|0}Wk(22768,1768)|0;Wk(22780,1712)|0;Wk(22792,1688)|0;Wk(22804,1632)|0;Wk(22816,1152)|0;Wk(22828,1560)|0;Wk(22840,1528)|0;Wk(22852,1496)|0;Wk(22864,1432)|0;Wk(22876,1384)|0;Wk(22888,1344)|0;Wk(22900,1272)|0;Wk(22912,1256)|0;Wk(22924,1240)|0;Wk(22936,1184)|0;Wk(22948,1168)|0;Wk(22960,1152)|0;Wk(22972,1120)|0;Wk(22984,1064)|0;Wk(22996,1048)|0;Wk(23008,1032)|0;Wk(23020,960)|0;Wk(23032,944)|0;Wk(23044,552)|0;c[6194]=22768;d=c[6194]|0;return d|0}function mr(b){b=b|0;var d=0;if((a[27040]|0)!=0){d=c[6220]|0;return d|0}if((Lb(27040)|0)==0){d=c[6220]|0;return d|0}if((a[26928]|0)==0?(Lb(26928)|0)!=0:0){eu(23968,0,288)|0;qb(100,0,v|0)|0}Jk(23968,1824)|0;Jk(23980,1816)|0;c[6220]=23968;d=c[6220]|0;return d|0}function nr(b){b=b|0;var d=0;if((a[26984]|0)!=0){d=c[6198]|0;return d|0}if((Lb(26984)|0)==0){d=c[6198]|0;return d|0}if((a[26904]|0)==0?(Lb(26904)|0)!=0:0){eu(23224,0,288)|0;qb(378,0,v|0)|0}Wk(23224,1848)|0;Wk(23236,1832)|0;c[6198]=23224;d=c[6198]|0;return d|0}function or(b){b=b|0;if((a[27048]|0)!=0){return 24888}if((Lb(27048)|0)==0){return 24888}Gk(24888,2976,8);qb(402,24888,v|0)|0;return 24888}function pr(b){b=b|0;if((a[26992]|0)!=0){return 24800}if((Lb(26992)|0)==0){return 24800}Tk(24800,2872,ct(2872)|0);qb(118,24800,v|0)|0;return 24800}function qr(b){b=b|0;if((a[27072]|0)!=0){return 24936}if((Lb(27072)|0)==0){return 24936}Gk(24936,2752,8);qb(402,24936,v|0)|0;return 24936}function rr(b){b=b|0;if((a[27016]|0)!=0){return 24848}if((Lb(27016)|0)==0){return 24848}Tk(24848,2704,ct(2704)|0);qb(118,24848,v|0)|0;return 24848}function sr(b){b=b|0;if((a[27064]|0)!=0){return 24920}if((Lb(27064)|0)==0){return 24920}Gk(24920,2600,20);qb(402,24920,v|0)|0;return 24920}function tr(b){b=b|0;if((a[27008]|0)!=0){return 24832}if((Lb(27008)|0)==0){return 24832}Tk(24832,2496,ct(2496)|0);qb(118,24832,v|0)|0;return 24832}function ur(b){b=b|0;if((a[27056]|0)!=0){return 24904}if((Lb(27056)|0)==0){return 24904}Gk(24904,2464,11);qb(402,24904,v|0)|0;return 24904}function vr(b){b=b|0;if((a[27e3]|0)!=0){return 24816}if((Lb(27e3)|0)==0){return 24816}Tk(24816,2352,ct(2352)|0);qb(118,24816,v|0)|0;return 24816}function wr(b){b=b|0;var d=0,e=0,f=0;c[b>>2]=6792;d=b+8|0;e=c[d>>2]|0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}if((e|0)==(c[6072]|0)){f=b|0;dk(f);return}Db(c[d>>2]|0);f=b|0;dk(f);return}function xr(){bk(0);qb(240,26592,v|0)|0;return}function yr(a){a=a|0;c[a>>2]=7560;Np(a+4|0);Nt(a);return}function zr(b,d){b=b|0;d=d|0;var e=0;Ed[c[(c[b>>2]|0)+24>>2]&255](b)|0;e=Pp(d,25832)|0;d=e;c[b+36>>2]=d;a[b+44|0]=(Ed[c[(c[e>>2]|0)+28>>2]&255](d)|0)&1;return}function Ar(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+36|0;g=a+40|0;h=d|0;j=d+8|0;k=d;d=a+32|0;while(1){a=c[f>>2]|0;l=Nd[c[(c[a>>2]|0)+20>>2]&31](a,c[g>>2]|0,h,j,e)|0;a=(c[e>>2]|0)-k|0;if((Sa(h|0,1,a|0,c[d>>2]|0)|0)!=(a|0)){m=-1;n=5;break}if((l|0)==2){m=-1;n=5;break}else if((l|0)!=1){n=4;break}}if((n|0)==4){m=((Qa(c[d>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}else if((n|0)==5){i=b;return m|0}return 0}function Br(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if((a[b+44|0]|0)!=0){f=Sa(d|0,4,e|0,c[b+32>>2]|0)|0;return f|0}g=b;if((e|0)>0){h=d;i=0}else{f=0;return f|0}while(1){if((Bd[c[(c[g>>2]|0)+52>>2]&127](b,c[h>>2]|0)|0)==-1){f=i;j=6;break}d=i+1|0;if((d|0)<(e|0)){h=h+4|0;i=d}else{f=d;j=6;break}}if((j|0)==6){return f|0}return 0}function Cr(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=(d|0)==-1;a:do{if(!k){c[g>>2]=d;if((a[b+44|0]|0)!=0){if((Sa(g|0,4,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}m=f|0;c[h>>2]=m;n=g+4|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=Id[c[(c[u>>2]|0)+12>>2]&31](u,c[p>>2]|0,t,n,j,m,q,h)|0;if((c[j>>2]|0)==(t|0)){l=-1;w=12;break}if((v|0)==3){w=7;break}u=(v|0)==1;if(!(v>>>0<2>>>0)){l=-1;w=12;break}v=(c[h>>2]|0)-r|0;if((Sa(m|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){l=-1;w=12;break}if(u){t=u?c[j>>2]|0:t}else{break a}}if((w|0)==7){if((Sa(t|0,1,1,c[s>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((w|0)==12){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function Dr(a){a=a|0;c[a>>2]=7560;Np(a+4|0);Nt(a);return}function Er(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=Pp(d,25832)|0;d=e;f=b+36|0;c[f>>2]=d;g=b+44|0;c[g>>2]=Ed[c[(c[e>>2]|0)+24>>2]&255](d)|0;d=c[f>>2]|0;a[b+53|0]=(Ed[c[(c[d>>2]|0)+28>>2]&255](d)|0)&1;if((c[g>>2]|0)<=8){return}$o(184);return}function Fr(a){a=a|0;return Ls(a,0)|0}function Gr(a){a=a|0;return Ls(a,1)|0}function Hr(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;l=(a[k]|0)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;a:do{if(l){c[h>>2]=c[n>>2];o=c[b+36>>2]|0;p=f|0;q=Id[c[(c[o>>2]|0)+12>>2]&31](o,c[b+40>>2]|0,h,h+4|0,j,p,f+8|0,g)|0;if((q|0)==3){a[p]=c[n>>2];c[g>>2]=f+1}else if((q|0)==2|(q|0)==1){m=-1;i=e;return m|0}q=b+32|0;while(1){o=c[g>>2]|0;if(!(o>>>0>p>>>0)){break a}r=o-1|0;c[g>>2]=r;if((Hc(a[r]|0,c[q>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function Ir(a){a=a|0;c[a>>2]=7632;Np(a+4|0);Nt(a);return}function Jr(b,d){b=b|0;d=d|0;var e=0;Ed[c[(c[b>>2]|0)+24>>2]&255](b)|0;e=Pp(d,25840)|0;d=e;c[b+36>>2]=d;a[b+44|0]=(Ed[c[(c[e>>2]|0)+28>>2]&255](d)|0)&1;return}function Kr(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+36|0;g=a+40|0;h=d|0;j=d+8|0;k=d;d=a+32|0;while(1){a=c[f>>2]|0;l=Nd[c[(c[a>>2]|0)+20>>2]&31](a,c[g>>2]|0,h,j,e)|0;a=(c[e>>2]|0)-k|0;if((Sa(h|0,1,a|0,c[d>>2]|0)|0)!=(a|0)){m=-1;n=5;break}if((l|0)==2){m=-1;n=5;break}else if((l|0)!=1){n=4;break}}if((n|0)==4){m=((Qa(c[d>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}else if((n|0)==5){i=b;return m|0}return 0}function Lr(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;if((a[b+44|0]|0)!=0){g=Sa(e|0,1,f|0,c[b+32>>2]|0)|0;return g|0}h=b;if((f|0)>0){i=e;j=0}else{g=0;return g|0}while(1){if((Bd[c[(c[h>>2]|0)+52>>2]&127](b,d[i]|0)|0)==-1){g=j;k=6;break}e=j+1|0;if((e|0)<(f|0)){i=i+1|0;j=e}else{g=e;k=6;break}}if((k|0)==6){return g|0}return 0}function Mr(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=(d|0)==-1;a:do{if(!k){a[g]=d;if((a[b+44|0]|0)!=0){if((Sa(g|0,1,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}m=f|0;c[h>>2]=m;n=g+1|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=Id[c[(c[u>>2]|0)+12>>2]&31](u,c[p>>2]|0,t,n,j,m,q,h)|0;if((c[j>>2]|0)==(t|0)){l=-1;w=12;break}if((v|0)==3){w=7;break}u=(v|0)==1;if(!(v>>>0<2>>>0)){l=-1;w=12;break}v=(c[h>>2]|0)-r|0;if((Sa(m|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){l=-1;w=12;break}if(u){t=u?c[j>>2]|0:t}else{break a}}if((w|0)==7){if((Sa(t|0,1,1,c[s>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((w|0)==12){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function Nr(a){a=a|0;c[a>>2]=7632;Np(a+4|0);Nt(a);return}function Or(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=Pp(d,25840)|0;d=e;f=b+36|0;c[f>>2]=d;g=b+44|0;c[g>>2]=Ed[c[(c[e>>2]|0)+24>>2]&255](d)|0;d=c[f>>2]|0;a[b+53|0]=(Ed[c[(c[d>>2]|0)+28>>2]&255](d)|0)&1;if((c[g>>2]|0)<=8){return}$o(184);return}function Pr(a){a=a|0;return Ms(a,0)|0}function Qr(a){a=a|0;return Ms(a,1)|0}function Rr(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;l=(a[k]|0)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;a:do{if(l){a[h]=c[n>>2];o=c[b+36>>2]|0;p=f|0;q=Id[c[(c[o>>2]|0)+12>>2]&31](o,c[b+40>>2]|0,h,h+1|0,j,p,f+8|0,g)|0;if((q|0)==3){a[p]=c[n>>2];c[g>>2]=f+1}else if((q|0)==2|(q|0)==1){m=-1;i=e;return m|0}q=b+32|0;while(1){o=c[g>>2]|0;if(!(o>>>0>p>>>0)){break a}r=o-1|0;c[g>>2]=r;if((Hc(a[r]|0,c[q>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function Sr(a){a=a|0;Ak(a|0);Nt(a);return}function Tr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f|0;h=b|0;c[h>>2]=7632;j=b+4|0;Lp(j);eu(b+8|0,0,24)|0;c[h>>2]=8520;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;Mp(g,j);j=Pp(g,25840)|0;e=j;d=b+36|0;c[d>>2]=e;h=b+44|0;c[h>>2]=Ed[c[(c[j>>2]|0)+24>>2]&255](e)|0;e=c[d>>2]|0;a[b+53|0]=(Ed[c[(c[e>>2]|0)+28>>2]&255](e)|0)&1;if((c[h>>2]|0)<=8){Np(g);i=f;return}$o(184);Np(g);i=f;return}function Ur(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f|0;h=b|0;c[h>>2]=7632;j=b+4|0;Lp(j);eu(b+8|0,0,24)|0;c[h>>2]=8120;c[b+32>>2]=d;Mp(g,j);j=Pp(g,25840)|0;d=j;Np(g);c[b+36>>2]=d;c[b+40>>2]=e;a[b+44|0]=(Ed[c[(c[j>>2]|0)+28>>2]&255](d)|0)&1;i=f;return}function Vr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f|0;h=b|0;c[h>>2]=7560;j=b+4|0;Lp(j);eu(b+8|0,0,24)|0;c[h>>2]=8448;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;Mp(g,j);j=Pp(g,25832)|0;e=j;d=b+36|0;c[d>>2]=e;h=b+44|0;c[h>>2]=Ed[c[(c[j>>2]|0)+24>>2]&255](e)|0;e=c[d>>2]|0;a[b+53|0]=(Ed[c[(c[e>>2]|0)+28>>2]&255](e)|0)&1;if((c[h>>2]|0)<=8){Np(g);i=f;return}$o(184);Np(g);i=f;return}function Wr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f|0;h=b|0;c[h>>2]=7560;j=b+4|0;Lp(j);eu(b+8|0,0,24)|0;c[h>>2]=8048;c[b+32>>2]=d;Mp(g,j);j=Pp(g,25832)|0;d=j;Np(g);c[b+36>>2]=d;c[b+40>>2]=e;a[b+44|0]=(Ed[c[(c[j>>2]|0)+28>>2]&255](d)|0)&1;i=f;return}function Xr(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=a+4|0;d=c[b+4>>2]|0;e=(c[a>>2]|0)+(d>>1)|0;a=e;f=c[b>>2]|0;if((d&1|0)==0){g=f;zd[g&511](a);return}else{g=c[(c[e>>2]|0)+f>>2]|0;zd[g&511](a);return}}function Yr(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;k=i;i=i+104|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=(f-e|0)/12|0;m=k|0;if(l>>>0>100>>>0){n=It(l)|0;if((n|0)==0){St();o=0;p=0}else{o=n;p=n}}else{o=m;p=0}m=(e|0)==(f|0);if(m){q=l;r=0}else{n=l;l=0;s=o;t=e;while(1){u=a[t]|0;if((u&1)==0){v=(u&255)>>>1}else{v=c[t+4>>2]|0}if((v|0)==0){a[s]=2;w=l+1|0;x=n-1|0}else{a[s]=1;w=l;x=n}u=t+12|0;if((u|0)==(f|0)){q=x;r=w;break}else{n=x;l=w;s=s+1|0;t=u}}}t=b|0;b=d|0;d=g;s=0;w=r;r=q;a:while(1){q=c[t>>2]|0;do{if((q|0)!=0){if((c[q+12>>2]|0)==(c[q+16>>2]|0)){if((Ed[c[(c[q>>2]|0)+36>>2]&255](q)|0)==-1){c[t>>2]=0;y=0;break}else{y=c[t>>2]|0;break}}else{y=q}}else{y=0}}while(0);q=(y|0)==0;l=c[b>>2]|0;if((l|0)!=0){if((c[l+12>>2]|0)==(c[l+16>>2]|0)?(Ed[c[(c[l>>2]|0)+36>>2]&255](l)|0)==-1:0){c[b>>2]=0;z=0}else{z=l}}else{z=0}A=(z|0)==0;B=c[t>>2]|0;if(!((q^A)&(r|0)!=0)){break}q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){C=(Ed[c[(c[B>>2]|0)+36>>2]&255](B)|0)&255}else{C=a[q]|0}if(j){D=C}else{D=Bd[c[(c[d>>2]|0)+12>>2]&127](g,C)|0}q=s+1|0;if(m){s=q;continue}if(j){l=r;x=w;n=o;v=0;u=e;while(1){do{if((a[n]|0)==1){E=a[u]|0;F=(E&1)==0;if(F){G=u+1|0}else{G=c[u+8>>2]|0}if(!(D<<24>>24==(a[G+s|0]|0))){a[n]=0;H=v;I=x;J=l-1|0;break}if(F){K=(E&255)>>>1}else{K=c[u+4>>2]|0}if((K|0)==(q|0)){a[n]=2;H=1;I=x+1|0;J=l-1|0}else{H=1;I=x;J=l}}else{H=v;I=x;J=l}}while(0);E=u+12|0;if((E|0)==(f|0)){L=J;M=I;N=H;break}else{l=J;x=I;n=n+1|0;v=H;u=E}}}else{u=r;v=w;n=o;x=0;l=e;while(1){do{if((a[n]|0)==1){E=l;if((a[E]&1)==0){O=l+1|0}else{O=c[l+8>>2]|0}if(!(D<<24>>24==(Bd[c[(c[d>>2]|0)+12>>2]&127](g,a[O+s|0]|0)|0)<<24>>24)){a[n]=0;P=x;Q=v;R=u-1|0;break}F=a[E]|0;if((F&1)==0){S=(F&255)>>>1}else{S=c[l+4>>2]|0}if((S|0)==(q|0)){a[n]=2;P=1;Q=v+1|0;R=u-1|0}else{P=1;Q=v;R=u}}else{P=x;Q=v;R=u}}while(0);F=l+12|0;if((F|0)==(f|0)){L=R;M=Q;N=P;break}else{u=R;v=Q;n=n+1|0;x=P;l=F}}}if(!N){s=q;w=M;r=L;continue}l=c[t>>2]|0;x=l+12|0;n=c[x>>2]|0;if((n|0)==(c[l+16>>2]|0)){Ed[c[(c[l>>2]|0)+40>>2]&255](l)|0}else{c[x>>2]=n+1}if((L+M|0)>>>0<2>>>0){s=q;w=M;r=L;continue}else{T=M;U=o;V=e}while(1){if((a[U]|0)==2){n=a[V]|0;if((n&1)==0){W=(n&255)>>>1}else{W=c[V+4>>2]|0}if((W|0)!=(q|0)){a[U]=0;X=T-1|0}else{X=T}}else{X=T}n=V+12|0;if((n|0)==(f|0)){s=q;w=X;r=L;continue a}else{T=X;U=U+1|0;V=n}}}do{if((B|0)!=0){if((c[B+12>>2]|0)==(c[B+16>>2]|0)){if((Ed[c[(c[B>>2]|0)+36>>2]&255](B)|0)==-1){c[t>>2]=0;Y=0;break}else{Y=c[t>>2]|0;break}}else{Y=B}}else{Y=0}}while(0);B=(Y|0)==0;do{if(!A){if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(B){break}else{Z=92;break}}if(!((Ed[c[(c[z>>2]|0)+36>>2]&255](z)|0)==-1)){if(B){break}else{Z=92;break}}else{c[b>>2]=0;Z=90;break}}else{Z=90}}while(0);if((Z|0)==90?B:0){Z=92}if((Z|0)==92){c[h>>2]=c[h>>2]|2}b:do{if(m){Z=96}else{B=o;b=e;while(1){if((a[B]|0)==2){_=b;break b}z=b+12|0;if((z|0)==(f|0)){Z=96;break}else{B=B+1|0;b=z}}}}while(0);if((Z|0)==96){c[h>>2]=c[h>>2]|4;_=f}if((p|0)==0){$=100;aa=0;i=k;return _|0}Jt(p);$=100;aa=0;i=k;return _|0}function Zr(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0;d=i;i=i+232|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=c[g+4>>2]&74;if((p|0)==0){q=0}else if((p|0)==64){q=8}else if((p|0)==8){q=16}else{q=10}p=k|0;Wm(m,g,p,l);g=n;eu(g|0,0,12)|0;Lk(n,10,0);if((a[g]&1)==0){r=n+1|0;s=r;t=r;u=n+8|0}else{r=n+8|0;s=c[r>>2]|0;t=n+1|0;u=r}r=o|0;v=e|0;e=f|0;f=n|0;w=n+4|0;x=k+24|0;y=k+25|0;z=m;A=o;o=k+26|0;B=k;k=m+4|0;C=s;D=0;E=r;F=s;s=c[v>>2]|0;a:while(1){if((s|0)!=0){if((c[s+12>>2]|0)==(c[s+16>>2]|0)?(Ed[c[(c[s>>2]|0)+36>>2]&255](s)|0)==-1:0){c[v>>2]=0;G=0}else{G=s}}else{G=0}H=(G|0)==0;I=c[e>>2]|0;do{if((I|0)!=0){if((c[I+12>>2]|0)!=(c[I+16>>2]|0)){if(H){J=I;break}else{K=C;L=F;M=I;break a}}if(!((Ed[c[(c[I>>2]|0)+36>>2]&255](I)|0)==-1)){if(H){J=I;break}else{K=C;L=F;M=I;break a}}else{c[e>>2]=0;N=21;break}}else{N=21}}while(0);if((N|0)==21){N=0;if(H){K=C;L=F;M=0;break}else{J=0}}I=a[g]|0;O=(I&1)==0;if(O){P=(I&255)>>>1}else{P=c[w>>2]|0}if((F-C|0)==(P|0)){if(O){Q=(I&255)>>>1;R=(I&255)>>>1}else{I=c[w>>2]|0;Q=I;R=I}Lk(n,Q<<1,0);if((a[g]&1)==0){S=10}else{S=(c[f>>2]&-2)-1|0}Lk(n,S,0);if((a[g]&1)==0){T=t}else{T=c[u>>2]|0}U=T;V=T+R|0}else{U=C;V=F}I=c[G+12>>2]|0;if((I|0)==(c[G+16>>2]|0)){W=(Ed[c[(c[G>>2]|0)+36>>2]&255](G)|0)&255}else{W=a[I]|0}I=a[l]|0;O=(V|0)==(U|0);if(O?(X=(a[x]|0)==W<<24>>24,X|(a[y]|0)==W<<24>>24):0){a[V]=X?43:45;Y=0;Z=E;_=V+1|0}else{N=47}do{if((N|0)==47){N=0;X=a[z]|0;if((X&1)==0){$=(X&255)>>>1}else{$=c[k>>2]|0}if(($|0)!=0&W<<24>>24==I<<24>>24){if((E-A|0)>=160){Y=D;Z=E;_=V;break}c[E>>2]=D;Y=0;Z=E+4|0;_=V;break}else{aa=p}while(1){X=aa+1|0;if((a[aa]|0)==W<<24>>24){ba=aa;break}if((X|0)==(o|0)){ba=o;break}else{aa=X}}X=ba-B|0;if((X|0)>23){K=U;L=V;M=J;break a}if((q|0)==8|(q|0)==10){if((X|0)>=(q|0)){K=U;L=V;M=J;break a}}else if((q|0)==16?(X|0)>=22:0){if(O){K=V;L=V;M=J;break a}if((V-U|0)>=3){K=U;L=V;M=J;break a}if((a[V-1|0]|0)!=48){K=U;L=V;M=J;break a}a[V]=a[20776+X|0]|0;Y=0;Z=E;_=V+1|0;break}a[V]=a[20776+X|0]|0;Y=D+1|0;Z=E;_=V+1|0}}while(0);O=c[v>>2]|0;I=O+12|0;H=c[I>>2]|0;if((H|0)==(c[O+16>>2]|0)){Ed[c[(c[O>>2]|0)+40>>2]&255](O)|0;C=U;D=Y;E=Z;F=_;s=O;continue}else{c[I>>2]=H+1;C=U;D=Y;E=Z;F=_;s=O;continue}}s=a[z]|0;if((s&1)==0){ca=(s&255)>>>1}else{ca=c[k>>2]|0}if((ca|0)!=0?(E-A|0)<160:0){c[E>>2]=D;da=E+4|0}else{da=E}c[j>>2]=Ns(K,L,h,q)|0;q=a[z]|0;if((q&1)==0){ea=(q&255)>>>1}else{ea=c[k>>2]|0}b:do{if((ea|0)!=0){if((r|0)!=(da|0)?(L=da-4|0,L>>>0>r>>>0):0){K=r;j=L;do{L=c[K>>2]|0;c[K>>2]=c[j>>2];c[j>>2]=L;K=K+4|0;j=j-4|0}while(K>>>0<j>>>0);fa=a[z]|0}else{fa=q}if((fa&1)==0){ga=(fa&255)>>>1;ha=m+1|0}else{ga=c[k>>2]|0;ha=c[m+8>>2]|0}j=da-4|0;K=a[ha]|0;L=K<<24>>24<1|K<<24>>24==127;c:do{if(j>>>0>r>>>0){E=ha+ga|0;D=ha;A=r;ca=K;s=L;while(1){if(!s?(ca<<24>>24|0)!=(c[A>>2]|0):0){break}_=(E-D|0)>1?D+1|0:D;F=A+4|0;Z=a[_]|0;Y=Z<<24>>24<1|Z<<24>>24==127;if(F>>>0<j>>>0){D=_;A=F;ca=Z;s=Y}else{ia=Z;ja=Y;break c}}c[h>>2]=4;break b}else{ia=K;ja=L}}while(0);if(!ja?!(((c[j>>2]|0)-1|0)>>>0<ia<<24>>24>>>0):0){c[h>>2]=4}}}while(0);do{if((G|0)!=0){if((c[G+12>>2]|0)==(c[G+16>>2]|0)){if((Ed[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[v>>2]=0;ka=0;break}else{ka=c[v>>2]|0;break}}else{ka=G}}else{ka=0}}while(0);G=(ka|0)==0;do{if((M|0)!=0){if((c[M+12>>2]|0)!=(c[M+16>>2]|0)){if(!G){break}la=c[v>>2]|0;ma=b|0;c[ma>>2]=la;na=160;oa=0;Ik(n);Ik(m);i=d;return}if((Ed[c[(c[M>>2]|0)+36>>2]&255](M)|0)==-1){c[e>>2]=0;N=106;break}if(G^(M|0)==0){la=c[v>>2]|0;ma=b|0;c[ma>>2]=la;na=160;oa=0;Ik(n);Ik(m);i=d;return}}else{N=106}}while(0);if((N|0)==106?!G:0){la=c[v>>2]|0;ma=b|0;c[ma>>2]=la;na=160;oa=0;Ik(n);Ik(m);i=d;return}c[h>>2]=c[h>>2]|2;la=c[v>>2]|0;ma=b|0;c[ma>>2]=la;na=160;oa=0;Ik(n);Ik(m);i=d;return}function _r(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0;d=i;i=i+232|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=c[g+4>>2]&74;if((p|0)==8){q=16}else if((p|0)==64){q=8}else if((p|0)==0){q=0}else{q=10}p=k|0;Wm(m,g,p,l);g=n;eu(g|0,0,12)|0;Lk(n,10,0);if((a[g]&1)==0){r=n+1|0;s=r;t=r;u=n+8|0}else{r=n+8|0;s=c[r>>2]|0;t=n+1|0;u=r}r=o|0;v=e|0;e=f|0;f=n|0;w=n+4|0;x=k+24|0;y=k+25|0;z=m;A=o;o=k+26|0;B=k;k=m+4|0;C=s;D=0;E=r;F=s;s=c[v>>2]|0;a:while(1){if((s|0)!=0){if((c[s+12>>2]|0)==(c[s+16>>2]|0)?(Ed[c[(c[s>>2]|0)+36>>2]&255](s)|0)==-1:0){c[v>>2]=0;G=0}else{G=s}}else{G=0}H=(G|0)==0;I=c[e>>2]|0;do{if((I|0)!=0){if((c[I+12>>2]|0)!=(c[I+16>>2]|0)){if(H){J=I;break}else{K=C;M=F;N=I;break a}}if(!((Ed[c[(c[I>>2]|0)+36>>2]&255](I)|0)==-1)){if(H){J=I;break}else{K=C;M=F;N=I;break a}}else{c[e>>2]=0;O=21;break}}else{O=21}}while(0);if((O|0)==21){O=0;if(H){K=C;M=F;N=0;break}else{J=0}}I=a[g]|0;P=(I&1)==0;if(P){Q=(I&255)>>>1}else{Q=c[w>>2]|0}if((F-C|0)==(Q|0)){if(P){R=(I&255)>>>1;S=(I&255)>>>1}else{I=c[w>>2]|0;R=I;S=I}Lk(n,R<<1,0);if((a[g]&1)==0){T=10}else{T=(c[f>>2]&-2)-1|0}Lk(n,T,0);if((a[g]&1)==0){U=t}else{U=c[u>>2]|0}V=U;W=U+S|0}else{V=C;W=F}I=c[G+12>>2]|0;if((I|0)==(c[G+16>>2]|0)){X=(Ed[c[(c[G>>2]|0)+36>>2]&255](G)|0)&255}else{X=a[I]|0}I=a[l]|0;P=(W|0)==(V|0);if(P?(Y=(a[x]|0)==X<<24>>24,Y|(a[y]|0)==X<<24>>24):0){a[W]=Y?43:45;Z=0;_=E;$=W+1|0}else{O=47}do{if((O|0)==47){O=0;Y=a[z]|0;if((Y&1)==0){aa=(Y&255)>>>1}else{aa=c[k>>2]|0}if((aa|0)!=0&X<<24>>24==I<<24>>24){if((E-A|0)>=160){Z=D;_=E;$=W;break}c[E>>2]=D;Z=0;_=E+4|0;$=W;break}else{ba=p}while(1){Y=ba+1|0;if((a[ba]|0)==X<<24>>24){ca=ba;break}if((Y|0)==(o|0)){ca=o;break}else{ba=Y}}Y=ca-B|0;if((Y|0)>23){K=V;M=W;N=J;break a}if((q|0)==8|(q|0)==10){if((Y|0)>=(q|0)){K=V;M=W;N=J;break a}}else if((q|0)==16?(Y|0)>=22:0){if(P){K=W;M=W;N=J;break a}if((W-V|0)>=3){K=V;M=W;N=J;break a}if((a[W-1|0]|0)!=48){K=V;M=W;N=J;break a}a[W]=a[20776+Y|0]|0;Z=0;_=E;$=W+1|0;break}a[W]=a[20776+Y|0]|0;Z=D+1|0;_=E;$=W+1|0}}while(0);P=c[v>>2]|0;I=P+12|0;H=c[I>>2]|0;if((H|0)==(c[P+16>>2]|0)){Ed[c[(c[P>>2]|0)+40>>2]&255](P)|0;C=V;D=Z;E=_;F=$;s=P;continue}else{c[I>>2]=H+1;C=V;D=Z;E=_;F=$;s=P;continue}}s=a[z]|0;if((s&1)==0){da=(s&255)>>>1}else{da=c[k>>2]|0}if((da|0)!=0?(E-A|0)<160:0){c[E>>2]=D;ea=E+4|0}else{ea=E}E=Os(K,M,h,q)|0;c[j>>2]=E;c[j+4>>2]=L;j=a[z]|0;if((j&1)==0){fa=(j&255)>>>1}else{fa=c[k>>2]|0}b:do{if((fa|0)!=0){if((r|0)!=(ea|0)?(E=ea-4|0,E>>>0>r>>>0):0){q=r;M=E;do{E=c[q>>2]|0;c[q>>2]=c[M>>2];c[M>>2]=E;q=q+4|0;M=M-4|0}while(q>>>0<M>>>0);ga=a[z]|0}else{ga=j}if((ga&1)==0){ha=(ga&255)>>>1;ia=m+1|0}else{ha=c[k>>2]|0;ia=c[m+8>>2]|0}M=ea-4|0;q=a[ia]|0;E=q<<24>>24<1|q<<24>>24==127;c:do{if(M>>>0>r>>>0){K=ia+ha|0;D=ia;A=r;da=q;s=E;while(1){if(!s?(da<<24>>24|0)!=(c[A>>2]|0):0){break}$=(K-D|0)>1?D+1|0:D;F=A+4|0;_=a[$]|0;Z=_<<24>>24<1|_<<24>>24==127;if(F>>>0<M>>>0){D=$;A=F;da=_;s=Z}else{ja=_;ka=Z;break c}}c[h>>2]=4;break b}else{ja=q;ka=E}}while(0);if(!ka?!(((c[M>>2]|0)-1|0)>>>0<ja<<24>>24>>>0):0){c[h>>2]=4}}}while(0);do{if((G|0)!=0){if((c[G+12>>2]|0)==(c[G+16>>2]|0)){if((Ed[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[v>>2]=0;la=0;break}else{la=c[v>>2]|0;break}}else{la=G}}else{la=0}}while(0);G=(la|0)==0;do{if((N|0)!=0){if((c[N+12>>2]|0)!=(c[N+16>>2]|0)){if(!G){break}ma=c[v>>2]|0;na=b|0;c[na>>2]=ma;oa=160;pa=0;Ik(n);Ik(m);i=d;return}if((Ed[c[(c[N>>2]|0)+36>>2]&255](N)|0)==-1){c[e>>2]=0;O=106;break}if(G^(N|0)==0){ma=c[v>>2]|0;na=b|0;c[na>>2]=ma;oa=160;pa=0;Ik(n);Ik(m);i=d;return}}else{O=106}}while(0);if((O|0)==106?!G:0){ma=c[v>>2]|0;na=b|0;c[na>>2]=ma;oa=160;pa=0;Ik(n);Ik(m);i=d;return}c[h>>2]=c[h>>2]|2;ma=c[v>>2]|0;na=b|0;c[na>>2]=ma;oa=160;pa=0;Ik(n);Ik(m);i=d;return}function $r(d,e,f,g,h,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0;e=i;i=i+232|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=e+72|0;q=c[h+4>>2]&74;if((q|0)==64){r=8}else if((q|0)==0){r=0}else if((q|0)==8){r=16}else{r=10}q=l|0;Wm(n,h,q,m);h=o;eu(h|0,0,12)|0;Lk(o,10,0);if((a[h]&1)==0){s=o+1|0;t=s;u=s;v=o+8|0}else{s=o+8|0;t=c[s>>2]|0;u=o+1|0;v=s}s=p|0;w=f|0;f=g|0;g=o|0;x=o+4|0;y=l+24|0;z=l+25|0;A=n;B=p;p=l+26|0;C=l;l=n+4|0;D=t;E=0;F=s;G=t;t=c[w>>2]|0;a:while(1){if((t|0)!=0){if((c[t+12>>2]|0)==(c[t+16>>2]|0)?(Ed[c[(c[t>>2]|0)+36>>2]&255](t)|0)==-1:0){c[w>>2]=0;H=0}else{H=t}}else{H=0}I=(H|0)==0;J=c[f>>2]|0;do{if((J|0)!=0){if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(I){K=J;break}else{L=D;M=G;N=J;break a}}if(!((Ed[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1)){if(I){K=J;break}else{L=D;M=G;N=J;break a}}else{c[f>>2]=0;O=21;break}}else{O=21}}while(0);if((O|0)==21){O=0;if(I){L=D;M=G;N=0;break}else{K=0}}J=a[h]|0;P=(J&1)==0;if(P){Q=(J&255)>>>1}else{Q=c[x>>2]|0}if((G-D|0)==(Q|0)){if(P){R=(J&255)>>>1;S=(J&255)>>>1}else{J=c[x>>2]|0;R=J;S=J}Lk(o,R<<1,0);if((a[h]&1)==0){T=10}else{T=(c[g>>2]&-2)-1|0}Lk(o,T,0);if((a[h]&1)==0){U=u}else{U=c[v>>2]|0}V=U;W=U+S|0}else{V=D;W=G}J=c[H+12>>2]|0;if((J|0)==(c[H+16>>2]|0)){X=(Ed[c[(c[H>>2]|0)+36>>2]&255](H)|0)&255}else{X=a[J]|0}J=a[m]|0;P=(W|0)==(V|0);if(P?(Y=(a[y]|0)==X<<24>>24,Y|(a[z]|0)==X<<24>>24):0){a[W]=Y?43:45;Z=0;_=F;$=W+1|0}else{O=47}do{if((O|0)==47){O=0;Y=a[A]|0;if((Y&1)==0){aa=(Y&255)>>>1}else{aa=c[l>>2]|0}if((aa|0)!=0&X<<24>>24==J<<24>>24){if((F-B|0)>=160){Z=E;_=F;$=W;break}c[F>>2]=E;Z=0;_=F+4|0;$=W;break}else{ba=q}while(1){Y=ba+1|0;if((a[ba]|0)==X<<24>>24){ca=ba;break}if((Y|0)==(p|0)){ca=p;break}else{ba=Y}}Y=ca-C|0;if((Y|0)>23){L=V;M=W;N=K;break a}if((r|0)==8|(r|0)==10){if((Y|0)>=(r|0)){L=V;M=W;N=K;break a}}else if((r|0)==16?(Y|0)>=22:0){if(P){L=W;M=W;N=K;break a}if((W-V|0)>=3){L=V;M=W;N=K;break a}if((a[W-1|0]|0)!=48){L=V;M=W;N=K;break a}a[W]=a[20776+Y|0]|0;Z=0;_=F;$=W+1|0;break}a[W]=a[20776+Y|0]|0;Z=E+1|0;_=F;$=W+1|0}}while(0);P=c[w>>2]|0;J=P+12|0;I=c[J>>2]|0;if((I|0)==(c[P+16>>2]|0)){Ed[c[(c[P>>2]|0)+40>>2]&255](P)|0;D=V;E=Z;F=_;G=$;t=P;continue}else{c[J>>2]=I+1;D=V;E=Z;F=_;G=$;t=P;continue}}t=a[A]|0;if((t&1)==0){da=(t&255)>>>1}else{da=c[l>>2]|0}if((da|0)!=0?(F-B|0)<160:0){c[F>>2]=E;ea=F+4|0}else{ea=F}b[k>>1]=Ps(L,M,j,r)|0;r=a[A]|0;if((r&1)==0){fa=(r&255)>>>1}else{fa=c[l>>2]|0}b:do{if((fa|0)!=0){if((s|0)!=(ea|0)?(M=ea-4|0,M>>>0>s>>>0):0){L=s;k=M;do{M=c[L>>2]|0;c[L>>2]=c[k>>2];c[k>>2]=M;L=L+4|0;k=k-4|0}while(L>>>0<k>>>0);ga=a[A]|0}else{ga=r}if((ga&1)==0){ha=(ga&255)>>>1;ia=n+1|0}else{ha=c[l>>2]|0;ia=c[n+8>>2]|0}k=ea-4|0;L=a[ia]|0;M=L<<24>>24<1|L<<24>>24==127;c:do{if(k>>>0>s>>>0){F=ia+ha|0;E=ia;B=s;da=L;t=M;while(1){if(!t?(da<<24>>24|0)!=(c[B>>2]|0):0){break}$=(F-E|0)>1?E+1|0:E;G=B+4|0;_=a[$]|0;Z=_<<24>>24<1|_<<24>>24==127;if(G>>>0<k>>>0){E=$;B=G;da=_;t=Z}else{ja=_;ka=Z;break c}}c[j>>2]=4;break b}else{ja=L;ka=M}}while(0);if(!ka?!(((c[k>>2]|0)-1|0)>>>0<ja<<24>>24>>>0):0){c[j>>2]=4}}}while(0);do{if((H|0)!=0){if((c[H+12>>2]|0)==(c[H+16>>2]|0)){if((Ed[c[(c[H>>2]|0)+36>>2]&255](H)|0)==-1){c[w>>2]=0;la=0;break}else{la=c[w>>2]|0;break}}else{la=H}}else{la=0}}while(0);H=(la|0)==0;do{if((N|0)!=0){if((c[N+12>>2]|0)!=(c[N+16>>2]|0)){if(!H){break}ma=c[w>>2]|0;na=d|0;c[na>>2]=ma;oa=160;pa=0;Ik(o);Ik(n);i=e;return}if((Ed[c[(c[N>>2]|0)+36>>2]&255](N)|0)==-1){c[f>>2]=0;O=106;break}if(H^(N|0)==0){ma=c[w>>2]|0;na=d|0;c[na>>2]=ma;oa=160;pa=0;Ik(o);Ik(n);i=e;return}}else{O=106}}while(0);if((O|0)==106?!H:0){ma=c[w>>2]|0;na=d|0;c[na>>2]=ma;oa=160;pa=0;Ik(o);Ik(n);i=e;return}c[j>>2]=c[j>>2]|2;ma=c[w>>2]|0;na=d|0;c[na>>2]=ma;oa=160;pa=0;Ik(o);Ik(n);i=e;return}function as(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0;d=i;i=i+232|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=c[g+4>>2]&74;if((p|0)==8){q=16}else if((p|0)==64){q=8}else if((p|0)==0){q=0}else{q=10}p=k|0;Wm(m,g,p,l);g=n;eu(g|0,0,12)|0;Lk(n,10,0);if((a[g]&1)==0){r=n+1|0;s=r;t=r;u=n+8|0}else{r=n+8|0;s=c[r>>2]|0;t=n+1|0;u=r}r=o|0;v=e|0;e=f|0;f=n|0;w=n+4|0;x=k+24|0;y=k+25|0;z=m;A=o;o=k+26|0;B=k;k=m+4|0;C=s;D=0;E=r;F=s;s=c[v>>2]|0;a:while(1){if((s|0)!=0){if((c[s+12>>2]|0)==(c[s+16>>2]|0)?(Ed[c[(c[s>>2]|0)+36>>2]&255](s)|0)==-1:0){c[v>>2]=0;G=0}else{G=s}}else{G=0}H=(G|0)==0;I=c[e>>2]|0;do{if((I|0)!=0){if((c[I+12>>2]|0)!=(c[I+16>>2]|0)){if(H){J=I;break}else{K=C;L=F;M=I;break a}}if(!((Ed[c[(c[I>>2]|0)+36>>2]&255](I)|0)==-1)){if(H){J=I;break}else{K=C;L=F;M=I;break a}}else{c[e>>2]=0;N=21;break}}else{N=21}}while(0);if((N|0)==21){N=0;if(H){K=C;L=F;M=0;break}else{J=0}}I=a[g]|0;O=(I&1)==0;if(O){P=(I&255)>>>1}else{P=c[w>>2]|0}if((F-C|0)==(P|0)){if(O){Q=(I&255)>>>1;R=(I&255)>>>1}else{I=c[w>>2]|0;Q=I;R=I}Lk(n,Q<<1,0);if((a[g]&1)==0){S=10}else{S=(c[f>>2]&-2)-1|0}Lk(n,S,0);if((a[g]&1)==0){T=t}else{T=c[u>>2]|0}U=T;V=T+R|0}else{U=C;V=F}I=c[G+12>>2]|0;if((I|0)==(c[G+16>>2]|0)){W=(Ed[c[(c[G>>2]|0)+36>>2]&255](G)|0)&255}else{W=a[I]|0}I=a[l]|0;O=(V|0)==(U|0);if(O?(X=(a[x]|0)==W<<24>>24,X|(a[y]|0)==W<<24>>24):0){a[V]=X?43:45;Y=0;Z=E;_=V+1|0}else{N=47}do{if((N|0)==47){N=0;X=a[z]|0;if((X&1)==0){$=(X&255)>>>1}else{$=c[k>>2]|0}if(($|0)!=0&W<<24>>24==I<<24>>24){if((E-A|0)>=160){Y=D;Z=E;_=V;break}c[E>>2]=D;Y=0;Z=E+4|0;_=V;break}else{aa=p}while(1){X=aa+1|0;if((a[aa]|0)==W<<24>>24){ba=aa;break}if((X|0)==(o|0)){ba=o;break}else{aa=X}}X=ba-B|0;if((X|0)>23){K=U;L=V;M=J;break a}if((q|0)==8|(q|0)==10){if((X|0)>=(q|0)){K=U;L=V;M=J;break a}}else if((q|0)==16?(X|0)>=22:0){if(O){K=V;L=V;M=J;break a}if((V-U|0)>=3){K=U;L=V;M=J;break a}if((a[V-1|0]|0)!=48){K=U;L=V;M=J;break a}a[V]=a[20776+X|0]|0;Y=0;Z=E;_=V+1|0;break}a[V]=a[20776+X|0]|0;Y=D+1|0;Z=E;_=V+1|0}}while(0);O=c[v>>2]|0;I=O+12|0;H=c[I>>2]|0;if((H|0)==(c[O+16>>2]|0)){Ed[c[(c[O>>2]|0)+40>>2]&255](O)|0;C=U;D=Y;E=Z;F=_;s=O;continue}else{c[I>>2]=H+1;C=U;D=Y;E=Z;F=_;s=O;continue}}s=a[z]|0;if((s&1)==0){ca=(s&255)>>>1}else{ca=c[k>>2]|0}if((ca|0)!=0?(E-A|0)<160:0){c[E>>2]=D;da=E+4|0}else{da=E}c[j>>2]=Qs(K,L,h,q)|0;q=a[z]|0;if((q&1)==0){ea=(q&255)>>>1}else{ea=c[k>>2]|0}b:do{if((ea|0)!=0){if((r|0)!=(da|0)?(L=da-4|0,L>>>0>r>>>0):0){K=r;j=L;do{L=c[K>>2]|0;c[K>>2]=c[j>>2];c[j>>2]=L;K=K+4|0;j=j-4|0}while(K>>>0<j>>>0);fa=a[z]|0}else{fa=q}if((fa&1)==0){ga=(fa&255)>>>1;ha=m+1|0}else{ga=c[k>>2]|0;ha=c[m+8>>2]|0}j=da-4|0;K=a[ha]|0;L=K<<24>>24<1|K<<24>>24==127;c:do{if(j>>>0>r>>>0){E=ha+ga|0;D=ha;A=r;ca=K;s=L;while(1){if(!s?(ca<<24>>24|0)!=(c[A>>2]|0):0){break}_=(E-D|0)>1?D+1|0:D;F=A+4|0;Z=a[_]|0;Y=Z<<24>>24<1|Z<<24>>24==127;if(F>>>0<j>>>0){D=_;A=F;ca=Z;s=Y}else{ia=Z;ja=Y;break c}}c[h>>2]=4;break b}else{ia=K;ja=L}}while(0);if(!ja?!(((c[j>>2]|0)-1|0)>>>0<ia<<24>>24>>>0):0){c[h>>2]=4}}}while(0);do{if((G|0)!=0){if((c[G+12>>2]|0)==(c[G+16>>2]|0)){if((Ed[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[v>>2]=0;ka=0;break}else{ka=c[v>>2]|0;break}}else{ka=G}}else{ka=0}}while(0);G=(ka|0)==0;do{if((M|0)!=0){if((c[M+12>>2]|0)!=(c[M+16>>2]|0)){if(!G){break}la=c[v>>2]|0;ma=b|0;c[ma>>2]=la;na=160;oa=0;Ik(n);Ik(m);i=d;return}if((Ed[c[(c[M>>2]|0)+36>>2]&255](M)|0)==-1){c[e>>2]=0;N=106;break}if(G^(M|0)==0){la=c[v>>2]|0;ma=b|0;c[ma>>2]=la;na=160;oa=0;Ik(n);Ik(m);i=d;return}}else{N=106}}while(0);if((N|0)==106?!G:0){la=c[v>>2]|0;ma=b|0;c[ma>>2]=la;na=160;oa=0;Ik(n);Ik(m);i=d;return}c[h>>2]=c[h>>2]|2;la=c[v>>2]|0;ma=b|0;c[ma>>2]=la;na=160;oa=0;Ik(n);Ik(m);i=d;return}function bs(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0;d=i;i=i+232|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=c[g+4>>2]&74;if((p|0)==64){q=8}else if((p|0)==0){q=0}else if((p|0)==8){q=16}else{q=10}p=k|0;Wm(m,g,p,l);g=n;eu(g|0,0,12)|0;Lk(n,10,0);if((a[g]&1)==0){r=n+1|0;s=r;t=r;u=n+8|0}else{r=n+8|0;s=c[r>>2]|0;t=n+1|0;u=r}r=o|0;v=e|0;e=f|0;f=n|0;w=n+4|0;x=k+24|0;y=k+25|0;z=m;A=o;o=k+26|0;B=k;k=m+4|0;C=s;D=0;E=r;F=s;s=c[v>>2]|0;a:while(1){if((s|0)!=0){if((c[s+12>>2]|0)==(c[s+16>>2]|0)?(Ed[c[(c[s>>2]|0)+36>>2]&255](s)|0)==-1:0){c[v>>2]=0;G=0}else{G=s}}else{G=0}H=(G|0)==0;I=c[e>>2]|0;do{if((I|0)!=0){if((c[I+12>>2]|0)!=(c[I+16>>2]|0)){if(H){J=I;break}else{K=C;L=F;M=I;break a}}if(!((Ed[c[(c[I>>2]|0)+36>>2]&255](I)|0)==-1)){if(H){J=I;break}else{K=C;L=F;M=I;break a}}else{c[e>>2]=0;N=21;break}}else{N=21}}while(0);if((N|0)==21){N=0;if(H){K=C;L=F;M=0;break}else{J=0}}I=a[g]|0;O=(I&1)==0;if(O){P=(I&255)>>>1}else{P=c[w>>2]|0}if((F-C|0)==(P|0)){if(O){Q=(I&255)>>>1;R=(I&255)>>>1}else{I=c[w>>2]|0;Q=I;R=I}Lk(n,Q<<1,0);if((a[g]&1)==0){S=10}else{S=(c[f>>2]&-2)-1|0}Lk(n,S,0);if((a[g]&1)==0){T=t}else{T=c[u>>2]|0}U=T;V=T+R|0}else{U=C;V=F}I=c[G+12>>2]|0;if((I|0)==(c[G+16>>2]|0)){W=(Ed[c[(c[G>>2]|0)+36>>2]&255](G)|0)&255}else{W=a[I]|0}I=a[l]|0;O=(V|0)==(U|0);if(O?(X=(a[x]|0)==W<<24>>24,X|(a[y]|0)==W<<24>>24):0){a[V]=X?43:45;Y=0;Z=E;_=V+1|0}else{N=47}do{if((N|0)==47){N=0;X=a[z]|0;if((X&1)==0){$=(X&255)>>>1}else{$=c[k>>2]|0}if(($|0)!=0&W<<24>>24==I<<24>>24){if((E-A|0)>=160){Y=D;Z=E;_=V;break}c[E>>2]=D;Y=0;Z=E+4|0;_=V;break}else{aa=p}while(1){X=aa+1|0;if((a[aa]|0)==W<<24>>24){ba=aa;break}if((X|0)==(o|0)){ba=o;break}else{aa=X}}X=ba-B|0;if((X|0)>23){K=U;L=V;M=J;break a}if((q|0)==16){if((X|0)>=22){if(O){K=V;L=V;M=J;break a}if((V-U|0)>=3){K=U;L=V;M=J;break a}if((a[V-1|0]|0)!=48){K=U;L=V;M=J;break a}a[V]=a[20776+X|0]|0;Y=0;Z=E;_=V+1|0;break}}else if((q|0)==8|(q|0)==10?(X|0)>=(q|0):0){K=U;L=V;M=J;break a}a[V]=a[20776+X|0]|0;Y=D+1|0;Z=E;_=V+1|0}}while(0);O=c[v>>2]|0;I=O+12|0;H=c[I>>2]|0;if((H|0)==(c[O+16>>2]|0)){Ed[c[(c[O>>2]|0)+40>>2]&255](O)|0;C=U;D=Y;E=Z;F=_;s=O;continue}else{c[I>>2]=H+1;C=U;D=Y;E=Z;F=_;s=O;continue}}s=a[z]|0;if((s&1)==0){ca=(s&255)>>>1}else{ca=c[k>>2]|0}if((ca|0)!=0?(E-A|0)<160:0){c[E>>2]=D;da=E+4|0}else{da=E}c[j>>2]=Rs(K,L,h,q)|0;q=a[z]|0;if((q&1)==0){ea=(q&255)>>>1}else{ea=c[k>>2]|0}b:do{if((ea|0)!=0){if((r|0)!=(da|0)?(L=da-4|0,L>>>0>r>>>0):0){K=r;j=L;do{L=c[K>>2]|0;c[K>>2]=c[j>>2];c[j>>2]=L;K=K+4|0;j=j-4|0}while(K>>>0<j>>>0);fa=a[z]|0}else{fa=q}if((fa&1)==0){ga=(fa&255)>>>1;ha=m+1|0}else{ga=c[k>>2]|0;ha=c[m+8>>2]|0}j=da-4|0;K=a[ha]|0;L=K<<24>>24<1|K<<24>>24==127;c:do{if(j>>>0>r>>>0){E=ha+ga|0;D=ha;A=r;ca=K;s=L;while(1){if(!s?(ca<<24>>24|0)!=(c[A>>2]|0):0){break}_=(E-D|0)>1?D+1|0:D;F=A+4|0;Z=a[_]|0;Y=Z<<24>>24<1|Z<<24>>24==127;if(F>>>0<j>>>0){D=_;A=F;ca=Z;s=Y}else{ia=Z;ja=Y;break c}}c[h>>2]=4;break b}else{ia=K;ja=L}}while(0);if(!ja?!(((c[j>>2]|0)-1|0)>>>0<ia<<24>>24>>>0):0){c[h>>2]=4}}}while(0);do{if((G|0)!=0){if((c[G+12>>2]|0)==(c[G+16>>2]|0)){if((Ed[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[v>>2]=0;ka=0;break}else{ka=c[v>>2]|0;break}}else{ka=G}}else{ka=0}}while(0);G=(ka|0)==0;do{if((M|0)!=0){if((c[M+12>>2]|0)!=(c[M+16>>2]|0)){if(!G){break}la=c[v>>2]|0;ma=b|0;c[ma>>2]=la;na=160;oa=0;Ik(n);Ik(m);i=d;return}if((Ed[c[(c[M>>2]|0)+36>>2]&255](M)|0)==-1){c[e>>2]=0;N=106;break}if(G^(M|0)==0){la=c[v>>2]|0;ma=b|0;c[ma>>2]=la;na=160;oa=0;Ik(n);Ik(m);i=d;return}}else{N=106}}while(0);if((N|0)==106?!G:0){la=c[v>>2]|0;ma=b|0;c[ma>>2]=la;na=160;oa=0;Ik(n);Ik(m);i=d;return}c[h>>2]=c[h>>2]|2;la=c[v>>2]|0;ma=b|0;c[ma>>2]=la;na=160;oa=0;Ik(n);Ik(m);i=d;return}function cs(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0;d=i;i=i+232|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=c[g+4>>2]&74;if((p|0)==8){q=16}else if((p|0)==64){q=8}else if((p|0)==0){q=0}else{q=10}p=k|0;Wm(m,g,p,l);g=n;eu(g|0,0,12)|0;Lk(n,10,0);if((a[g]&1)==0){r=n+1|0;s=r;t=r;u=n+8|0}else{r=n+8|0;s=c[r>>2]|0;t=n+1|0;u=r}r=o|0;v=e|0;e=f|0;f=n|0;w=n+4|0;x=k+24|0;y=k+25|0;z=m;A=o;o=k+26|0;B=k;k=m+4|0;C=s;D=0;E=r;F=s;s=c[v>>2]|0;a:while(1){if((s|0)!=0){if((c[s+12>>2]|0)==(c[s+16>>2]|0)?(Ed[c[(c[s>>2]|0)+36>>2]&255](s)|0)==-1:0){c[v>>2]=0;G=0}else{G=s}}else{G=0}H=(G|0)==0;I=c[e>>2]|0;do{if((I|0)!=0){if((c[I+12>>2]|0)!=(c[I+16>>2]|0)){if(H){J=I;break}else{K=C;M=F;N=I;break a}}if(!((Ed[c[(c[I>>2]|0)+36>>2]&255](I)|0)==-1)){if(H){J=I;break}else{K=C;M=F;N=I;break a}}else{c[e>>2]=0;O=21;break}}else{O=21}}while(0);if((O|0)==21){O=0;if(H){K=C;M=F;N=0;break}else{J=0}}I=a[g]|0;P=(I&1)==0;if(P){Q=(I&255)>>>1}else{Q=c[w>>2]|0}if((F-C|0)==(Q|0)){if(P){R=(I&255)>>>1;S=(I&255)>>>1}else{I=c[w>>2]|0;R=I;S=I}Lk(n,R<<1,0);if((a[g]&1)==0){T=10}else{T=(c[f>>2]&-2)-1|0}Lk(n,T,0);if((a[g]&1)==0){U=t}else{U=c[u>>2]|0}V=U;W=U+S|0}else{V=C;W=F}I=c[G+12>>2]|0;if((I|0)==(c[G+16>>2]|0)){X=(Ed[c[(c[G>>2]|0)+36>>2]&255](G)|0)&255}else{X=a[I]|0}I=a[l]|0;P=(W|0)==(V|0);if(P?(Y=(a[x]|0)==X<<24>>24,Y|(a[y]|0)==X<<24>>24):0){a[W]=Y?43:45;Z=0;_=E;$=W+1|0}else{O=47}do{if((O|0)==47){O=0;Y=a[z]|0;if((Y&1)==0){aa=(Y&255)>>>1}else{aa=c[k>>2]|0}if((aa|0)!=0&X<<24>>24==I<<24>>24){if((E-A|0)>=160){Z=D;_=E;$=W;break}c[E>>2]=D;Z=0;_=E+4|0;$=W;break}else{ba=p}while(1){Y=ba+1|0;if((a[ba]|0)==X<<24>>24){ca=ba;break}if((Y|0)==(o|0)){ca=o;break}else{ba=Y}}Y=ca-B|0;if((Y|0)>23){K=V;M=W;N=J;break a}if((q|0)==8|(q|0)==10){if((Y|0)>=(q|0)){K=V;M=W;N=J;break a}}else if((q|0)==16?(Y|0)>=22:0){if(P){K=W;M=W;N=J;break a}if((W-V|0)>=3){K=V;M=W;N=J;break a}if((a[W-1|0]|0)!=48){K=V;M=W;N=J;break a}a[W]=a[20776+Y|0]|0;Z=0;_=E;$=W+1|0;break}a[W]=a[20776+Y|0]|0;Z=D+1|0;_=E;$=W+1|0}}while(0);P=c[v>>2]|0;I=P+12|0;H=c[I>>2]|0;if((H|0)==(c[P+16>>2]|0)){Ed[c[(c[P>>2]|0)+40>>2]&255](P)|0;C=V;D=Z;E=_;F=$;s=P;continue}else{c[I>>2]=H+1;C=V;D=Z;E=_;F=$;s=P;continue}}s=a[z]|0;if((s&1)==0){da=(s&255)>>>1}else{da=c[k>>2]|0}if((da|0)!=0?(E-A|0)<160:0){c[E>>2]=D;ea=E+4|0}else{ea=E}E=Ss(K,M,h,q)|0;c[j>>2]=E;c[j+4>>2]=L;j=a[z]|0;if((j&1)==0){fa=(j&255)>>>1}else{fa=c[k>>2]|0}b:do{if((fa|0)!=0){if((r|0)!=(ea|0)?(E=ea-4|0,E>>>0>r>>>0):0){q=r;M=E;do{E=c[q>>2]|0;c[q>>2]=c[M>>2];c[M>>2]=E;q=q+4|0;M=M-4|0}while(q>>>0<M>>>0);ga=a[z]|0}else{ga=j}if((ga&1)==0){ha=(ga&255)>>>1;ia=m+1|0}else{ha=c[k>>2]|0;ia=c[m+8>>2]|0}M=ea-4|0;q=a[ia]|0;E=q<<24>>24<1|q<<24>>24==127;c:do{if(M>>>0>r>>>0){K=ia+ha|0;D=ia;A=r;da=q;s=E;while(1){if(!s?(da<<24>>24|0)!=(c[A>>2]|0):0){break}$=(K-D|0)>1?D+1|0:D;F=A+4|0;_=a[$]|0;Z=_<<24>>24<1|_<<24>>24==127;if(F>>>0<M>>>0){D=$;A=F;da=_;s=Z}else{ja=_;ka=Z;break c}}c[h>>2]=4;break b}else{ja=q;ka=E}}while(0);if(!ka?!(((c[M>>2]|0)-1|0)>>>0<ja<<24>>24>>>0):0){c[h>>2]=4}}}while(0);do{if((G|0)!=0){if((c[G+12>>2]|0)==(c[G+16>>2]|0)){if((Ed[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[v>>2]=0;la=0;break}else{la=c[v>>2]|0;break}}else{la=G}}else{la=0}}while(0);G=(la|0)==0;do{if((N|0)!=0){if((c[N+12>>2]|0)!=(c[N+16>>2]|0)){if(!G){break}ma=c[v>>2]|0;na=b|0;c[na>>2]=ma;oa=160;pa=0;Ik(n);Ik(m);i=d;return}if((Ed[c[(c[N>>2]|0)+36>>2]&255](N)|0)==-1){c[e>>2]=0;O=106;break}if(G^(N|0)==0){ma=c[v>>2]|0;na=b|0;c[na>>2]=ma;oa=160;pa=0;Ik(n);Ik(m);i=d;return}}else{O=106}}while(0);if((O|0)==106?!G:0){ma=c[v>>2]|0;na=b|0;c[na>>2]=ma;oa=160;pa=0;Ik(n);Ik(m);i=d;return}c[h>>2]=c[h>>2]|2;ma=c[v>>2]|0;na=b|0;c[na>>2]=ma;oa=160;pa=0;Ik(n);Ik(m);i=d;return}function ds(b,d,e,f,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+32|0;m=d+40|0;n=d+48|0;o=d+64|0;p=d+80|0;q=d+88|0;r=d+248|0;s=d+256|0;t=d+264|0;u=d+272|0;v=d|0;Xm(n,h,v,l,m);h=o;eu(h|0,0,12)|0;Lk(o,10,0);if((a[h]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=a[l]|0;l=a[m]|0;m=x;x=c[A>>2]|0;a:while(1){if((x|0)!=0){if((c[x+12>>2]|0)==(c[x+16>>2]|0)?(Ed[c[(c[x>>2]|0)+36>>2]&255](x)|0)==-1:0){c[A>>2]=0;D=0}else{D=x}}else{D=0}E=(D|0)==0;F=c[e>>2]|0;do{if((F|0)!=0){if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(E){G=F;break}else{H=m;I=F;break a}}if(!((Ed[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1)){if(E){G=F;break}else{H=m;I=F;break a}}else{c[e>>2]=0;J=17;break}}else{J=17}}while(0);if((J|0)==17){J=0;if(E){H=m;I=0;break}else{G=0}}F=a[h]|0;K=(F&1)==0;if(K){L=(F&255)>>>1}else{L=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(L|0)){if(K){M=(F&255)>>>1;N=(F&255)>>>1}else{F=c[B>>2]|0;M=F;N=F}Lk(o,M<<1,0);if((a[h]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Lk(o,O,0);if((a[h]&1)==0){P=y}else{P=c[z>>2]|0}c[p>>2]=P+N;Q=P}else{Q=m}F=D+12|0;K=c[F>>2]|0;R=D+16|0;if((K|0)==(c[R>>2]|0)){S=(Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0)&255}else{S=a[K]|0}if((Ym(S,t,u,Q,p,C,l,n,w,r,s,v)|0)!=0){H=Q;I=G;break}K=c[F>>2]|0;if((K|0)==(c[R>>2]|0)){Ed[c[(c[D>>2]|0)+40>>2]&255](D)|0;m=Q;x=D;continue}else{c[F>>2]=K+1;m=Q;x=D;continue}}x=n;Q=a[x]|0;if((Q&1)==0){T=(Q&255)>>>1}else{T=c[n+4>>2]|0}if(!((T|0)==0|(a[t]|0)==0)?(t=c[r>>2]|0,(t-q|0)<160):0){q=c[s>>2]|0;c[r>>2]=t+4;c[t>>2]=q}g[k>>2]=+Ts(H,c[p>>2]|0,j);p=c[r>>2]|0;r=a[x]|0;if((r&1)==0){U=(r&255)>>>1}else{U=c[n+4>>2]|0}b:do{if((U|0)!=0){if((w|0)!=(p|0)?(H=p-4|0,H>>>0>w>>>0):0){k=w;q=H;do{H=c[k>>2]|0;c[k>>2]=c[q>>2];c[q>>2]=H;k=k+4|0;q=q-4|0}while(k>>>0<q>>>0);V=a[x]|0}else{V=r}if((V&1)==0){W=(V&255)>>>1;X=n+1|0}else{W=c[n+4>>2]|0;X=c[n+8>>2]|0}q=p-4|0;k=a[X]|0;E=k<<24>>24<1|k<<24>>24==127;c:do{if(q>>>0>w>>>0){H=X+W|0;t=X;s=w;T=k;Q=E;while(1){if(!Q?(T<<24>>24|0)!=(c[s>>2]|0):0){break}m=(H-t|0)>1?t+1|0:t;G=s+4|0;v=a[m]|0;l=v<<24>>24<1|v<<24>>24==127;if(G>>>0<q>>>0){t=m;s=G;T=v;Q=l}else{Y=v;Z=l;break c}}c[j>>2]=4;break b}else{Y=k;Z=E}}while(0);if(!Z?!(((c[q>>2]|0)-1|0)>>>0<Y<<24>>24>>>0):0){c[j>>2]=4}}}while(0);do{if((D|0)!=0){if((c[D+12>>2]|0)==(c[D+16>>2]|0)){if((Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1){c[A>>2]=0;_=0;break}else{_=c[A>>2]|0;break}}else{_=D}}else{_=0}}while(0);D=(_|0)==0;do{if((I|0)!=0){if((c[I+12>>2]|0)!=(c[I+16>>2]|0)){if(!D){break}$=c[A>>2]|0;aa=b|0;c[aa>>2]=$;ba=160;ca=0;Ik(o);Ik(n);i=d;return}if((Ed[c[(c[I>>2]|0)+36>>2]&255](I)|0)==-1){c[e>>2]=0;J=83;break}if(D^(I|0)==0){$=c[A>>2]|0;aa=b|0;c[aa>>2]=$;ba=160;ca=0;Ik(o);Ik(n);i=d;return}}else{J=83}}while(0);if((J|0)==83?!D:0){$=c[A>>2]|0;aa=b|0;c[aa>>2]=$;ba=160;ca=0;Ik(o);Ik(n);i=d;return}c[j>>2]=c[j>>2]|2;$=c[A>>2]|0;aa=b|0;c[aa>>2]=$;ba=160;ca=0;Ik(o);Ik(n);i=d;return}function es(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+32|0;m=d+40|0;n=d+48|0;o=d+64|0;p=d+80|0;q=d+88|0;r=d+248|0;s=d+256|0;t=d+264|0;u=d+272|0;v=d|0;Xm(n,g,v,l,m);g=o;eu(g|0,0,12)|0;Lk(o,10,0);if((a[g]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=a[l]|0;l=a[m]|0;m=x;x=c[A>>2]|0;a:while(1){if((x|0)!=0){if((c[x+12>>2]|0)==(c[x+16>>2]|0)?(Ed[c[(c[x>>2]|0)+36>>2]&255](x)|0)==-1:0){c[A>>2]=0;D=0}else{D=x}}else{D=0}E=(D|0)==0;F=c[e>>2]|0;do{if((F|0)!=0){if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(E){G=F;break}else{H=m;I=F;break a}}if(!((Ed[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1)){if(E){G=F;break}else{H=m;I=F;break a}}else{c[e>>2]=0;J=17;break}}else{J=17}}while(0);if((J|0)==17){J=0;if(E){H=m;I=0;break}else{G=0}}F=a[g]|0;K=(F&1)==0;if(K){L=(F&255)>>>1}else{L=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(L|0)){if(K){M=(F&255)>>>1;N=(F&255)>>>1}else{F=c[B>>2]|0;M=F;N=F}Lk(o,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Lk(o,O,0);if((a[g]&1)==0){P=y}else{P=c[z>>2]|0}c[p>>2]=P+N;Q=P}else{Q=m}F=D+12|0;K=c[F>>2]|0;R=D+16|0;if((K|0)==(c[R>>2]|0)){S=(Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0)&255}else{S=a[K]|0}if((Ym(S,t,u,Q,p,C,l,n,w,r,s,v)|0)!=0){H=Q;I=G;break}K=c[F>>2]|0;if((K|0)==(c[R>>2]|0)){Ed[c[(c[D>>2]|0)+40>>2]&255](D)|0;m=Q;x=D;continue}else{c[F>>2]=K+1;m=Q;x=D;continue}}x=n;Q=a[x]|0;if((Q&1)==0){T=(Q&255)>>>1}else{T=c[n+4>>2]|0}if(!((T|0)==0|(a[t]|0)==0)?(t=c[r>>2]|0,(t-q|0)<160):0){q=c[s>>2]|0;c[r>>2]=t+4;c[t>>2]=q}h[k>>3]=+Us(H,c[p>>2]|0,j);p=c[r>>2]|0;r=a[x]|0;if((r&1)==0){U=(r&255)>>>1}else{U=c[n+4>>2]|0}b:do{if((U|0)!=0){if((w|0)!=(p|0)?(H=p-4|0,H>>>0>w>>>0):0){k=w;q=H;do{H=c[k>>2]|0;c[k>>2]=c[q>>2];c[q>>2]=H;k=k+4|0;q=q-4|0}while(k>>>0<q>>>0);V=a[x]|0}else{V=r}if((V&1)==0){W=(V&255)>>>1;X=n+1|0}else{W=c[n+4>>2]|0;X=c[n+8>>2]|0}q=p-4|0;k=a[X]|0;E=k<<24>>24<1|k<<24>>24==127;c:do{if(q>>>0>w>>>0){H=X+W|0;t=X;s=w;T=k;Q=E;while(1){if(!Q?(T<<24>>24|0)!=(c[s>>2]|0):0){break}m=(H-t|0)>1?t+1|0:t;G=s+4|0;v=a[m]|0;l=v<<24>>24<1|v<<24>>24==127;if(G>>>0<q>>>0){t=m;s=G;T=v;Q=l}else{Y=v;Z=l;break c}}c[j>>2]=4;break b}else{Y=k;Z=E}}while(0);if(!Z?!(((c[q>>2]|0)-1|0)>>>0<Y<<24>>24>>>0):0){c[j>>2]=4}}}while(0);do{if((D|0)!=0){if((c[D+12>>2]|0)==(c[D+16>>2]|0)){if((Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1){c[A>>2]=0;_=0;break}else{_=c[A>>2]|0;break}}else{_=D}}else{_=0}}while(0);D=(_|0)==0;do{if((I|0)!=0){if((c[I+12>>2]|0)!=(c[I+16>>2]|0)){if(!D){break}$=c[A>>2]|0;aa=b|0;c[aa>>2]=$;ba=160;ca=0;Ik(o);Ik(n);i=d;return}if((Ed[c[(c[I>>2]|0)+36>>2]&255](I)|0)==-1){c[e>>2]=0;J=83;break}if(D^(I|0)==0){$=c[A>>2]|0;aa=b|0;c[aa>>2]=$;ba=160;ca=0;Ik(o);Ik(n);i=d;return}}else{J=83}}while(0);if((J|0)==83?!D:0){$=c[A>>2]|0;aa=b|0;c[aa>>2]=$;ba=160;ca=0;Ik(o);Ik(n);i=d;return}c[j>>2]=c[j>>2]|2;$=c[A>>2]|0;aa=b|0;c[aa>>2]=$;ba=160;ca=0;Ik(o);Ik(n);i=d;return}function fs(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+32|0;m=d+40|0;n=d+48|0;o=d+64|0;p=d+80|0;q=d+88|0;r=d+248|0;s=d+256|0;t=d+264|0;u=d+272|0;v=d|0;Xm(n,g,v,l,m);g=o;eu(g|0,0,12)|0;Lk(o,10,0);if((a[g]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=a[l]|0;l=a[m]|0;m=x;x=c[A>>2]|0;a:while(1){if((x|0)!=0){if((c[x+12>>2]|0)==(c[x+16>>2]|0)?(Ed[c[(c[x>>2]|0)+36>>2]&255](x)|0)==-1:0){c[A>>2]=0;D=0}else{D=x}}else{D=0}E=(D|0)==0;F=c[e>>2]|0;do{if((F|0)!=0){if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(E){G=F;break}else{H=m;I=F;break a}}if(!((Ed[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1)){if(E){G=F;break}else{H=m;I=F;break a}}else{c[e>>2]=0;J=17;break}}else{J=17}}while(0);if((J|0)==17){J=0;if(E){H=m;I=0;break}else{G=0}}F=a[g]|0;K=(F&1)==0;if(K){L=(F&255)>>>1}else{L=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(L|0)){if(K){M=(F&255)>>>1;N=(F&255)>>>1}else{F=c[B>>2]|0;M=F;N=F}Lk(o,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Lk(o,O,0);if((a[g]&1)==0){P=y}else{P=c[z>>2]|0}c[p>>2]=P+N;Q=P}else{Q=m}F=D+12|0;K=c[F>>2]|0;R=D+16|0;if((K|0)==(c[R>>2]|0)){S=(Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0)&255}else{S=a[K]|0}if((Ym(S,t,u,Q,p,C,l,n,w,r,s,v)|0)!=0){H=Q;I=G;break}K=c[F>>2]|0;if((K|0)==(c[R>>2]|0)){Ed[c[(c[D>>2]|0)+40>>2]&255](D)|0;m=Q;x=D;continue}else{c[F>>2]=K+1;m=Q;x=D;continue}}x=n;Q=a[x]|0;if((Q&1)==0){T=(Q&255)>>>1}else{T=c[n+4>>2]|0}if(!((T|0)==0|(a[t]|0)==0)?(t=c[r>>2]|0,(t-q|0)<160):0){q=c[s>>2]|0;c[r>>2]=t+4;c[t>>2]=q}h[k>>3]=+Vs(H,c[p>>2]|0,j);p=c[r>>2]|0;r=a[x]|0;if((r&1)==0){U=(r&255)>>>1}else{U=c[n+4>>2]|0}b:do{if((U|0)!=0){if((w|0)!=(p|0)?(H=p-4|0,H>>>0>w>>>0):0){k=w;q=H;do{H=c[k>>2]|0;c[k>>2]=c[q>>2];c[q>>2]=H;k=k+4|0;q=q-4|0}while(k>>>0<q>>>0);V=a[x]|0}else{V=r}if((V&1)==0){W=(V&255)>>>1;X=n+1|0}else{W=c[n+4>>2]|0;X=c[n+8>>2]|0}q=p-4|0;k=a[X]|0;E=k<<24>>24<1|k<<24>>24==127;c:do{if(q>>>0>w>>>0){H=X+W|0;t=X;s=w;T=k;Q=E;while(1){if(!Q?(T<<24>>24|0)!=(c[s>>2]|0):0){break}m=(H-t|0)>1?t+1|0:t;G=s+4|0;v=a[m]|0;l=v<<24>>24<1|v<<24>>24==127;if(G>>>0<q>>>0){t=m;s=G;T=v;Q=l}else{Y=v;Z=l;break c}}c[j>>2]=4;break b}else{Y=k;Z=E}}while(0);if(!Z?!(((c[q>>2]|0)-1|0)>>>0<Y<<24>>24>>>0):0){c[j>>2]=4}}}while(0);do{if((D|0)!=0){if((c[D+12>>2]|0)==(c[D+16>>2]|0)){if((Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1){c[A>>2]=0;_=0;break}else{_=c[A>>2]|0;break}}else{_=D}}else{_=0}}while(0);D=(_|0)==0;do{if((I|0)!=0){if((c[I+12>>2]|0)!=(c[I+16>>2]|0)){if(!D){break}$=c[A>>2]|0;aa=b|0;c[aa>>2]=$;ba=160;ca=0;Ik(o);Ik(n);i=d;return}if((Ed[c[(c[I>>2]|0)+36>>2]&255](I)|0)==-1){c[e>>2]=0;J=83;break}if(D^(I|0)==0){$=c[A>>2]|0;aa=b|0;c[aa>>2]=$;ba=160;ca=0;Ik(o);Ik(n);i=d;return}}else{J=83}}while(0);if((J|0)==83?!D:0){$=c[A>>2]|0;aa=b|0;c[aa>>2]=$;ba=160;ca=0;Ik(o);Ik(n);i=d;return}c[j>>2]=c[j>>2]|2;$=c[A>>2]|0;aa=b|0;c[aa>>2]=$;ba=160;ca=0;Ik(o);Ik(n);i=d;return}function gs(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g;c[h>>2]=e;c[h+4>>2]=0;h=Kc(b|0)|0;b=jb(a|0,d|0,g|0)|0;if((h|0)==0){i=f;return b|0}Kc(h|0)|0;i=f;return b|0}function hs(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0;k=i;i=i+104|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=(f-e|0)/12|0;m=k|0;if(l>>>0>100>>>0){n=It(l)|0;if((n|0)==0){St();o=0;p=0}else{o=n;p=n}}else{o=m;p=0}m=(e|0)==(f|0);if(m){q=l;r=0}else{n=l;l=0;s=o;t=e;while(1){u=a[t]|0;if((u&1)==0){v=(u&255)>>>1}else{v=c[t+4>>2]|0}if((v|0)==0){a[s]=2;w=l+1|0;x=n-1|0}else{a[s]=1;w=l;x=n}u=t+12|0;if((u|0)==(f|0)){q=x;r=w;break}else{n=x;l=w;s=s+1|0;t=u}}}t=b|0;b=d|0;d=g;s=0;w=r;r=q;a:while(1){q=c[t>>2]|0;do{if((q|0)!=0){l=c[q+12>>2]|0;if((l|0)==(c[q+16>>2]|0)){y=Ed[c[(c[q>>2]|0)+36>>2]&255](q)|0}else{y=c[l>>2]|0}if((y|0)==-1){c[t>>2]=0;z=1;break}else{z=(c[t>>2]|0)==0;break}}else{z=1}}while(0);q=c[b>>2]|0;if((q|0)!=0){l=c[q+12>>2]|0;if((l|0)==(c[q+16>>2]|0)){A=Ed[c[(c[q>>2]|0)+36>>2]&255](q)|0}else{A=c[l>>2]|0}if((A|0)==-1){c[b>>2]=0;B=1;C=0}else{B=0;C=q}}else{B=1;C=0}D=c[t>>2]|0;if(!((z^B)&(r|0)!=0)){break}q=c[D+12>>2]|0;if((q|0)==(c[D+16>>2]|0)){E=Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{E=c[q>>2]|0}if(j){F=E}else{F=Bd[c[(c[d>>2]|0)+28>>2]&127](g,E)|0}q=s+1|0;if(m){s=q;continue}if(j){l=r;x=w;n=o;v=0;u=e;while(1){do{if((a[n]|0)==1){G=a[u]|0;H=(G&1)==0;if(H){I=u+4|0}else{I=c[u+8>>2]|0}if((F|0)!=(c[I+(s<<2)>>2]|0)){a[n]=0;J=v;K=x;L=l-1|0;break}if(H){M=(G&255)>>>1}else{M=c[u+4>>2]|0}if((M|0)==(q|0)){a[n]=2;J=1;K=x+1|0;L=l-1|0}else{J=1;K=x;L=l}}else{J=v;K=x;L=l}}while(0);G=u+12|0;if((G|0)==(f|0)){N=L;O=K;P=J;break}else{l=L;x=K;n=n+1|0;v=J;u=G}}}else{u=r;v=w;n=o;x=0;l=e;while(1){do{if((a[n]|0)==1){G=l;if((a[G]&1)==0){Q=l+4|0}else{Q=c[l+8>>2]|0}if((F|0)!=(Bd[c[(c[d>>2]|0)+28>>2]&127](g,c[Q+(s<<2)>>2]|0)|0)){a[n]=0;R=x;S=v;T=u-1|0;break}H=a[G]|0;if((H&1)==0){U=(H&255)>>>1}else{U=c[l+4>>2]|0}if((U|0)==(q|0)){a[n]=2;R=1;S=v+1|0;T=u-1|0}else{R=1;S=v;T=u}}else{R=x;S=v;T=u}}while(0);H=l+12|0;if((H|0)==(f|0)){N=T;O=S;P=R;break}else{u=T;v=S;n=n+1|0;x=R;l=H}}}if(!P){s=q;w=O;r=N;continue}l=c[t>>2]|0;x=l+12|0;n=c[x>>2]|0;if((n|0)==(c[l+16>>2]|0)){Ed[c[(c[l>>2]|0)+40>>2]&255](l)|0}else{c[x>>2]=n+4}if((N+O|0)>>>0<2>>>0){s=q;w=O;r=N;continue}else{V=O;W=o;X=e}while(1){if((a[W]|0)==2){n=a[X]|0;if((n&1)==0){Y=(n&255)>>>1}else{Y=c[X+4>>2]|0}if((Y|0)!=(q|0)){a[W]=0;Z=V-1|0}else{Z=V}}else{Z=V}n=X+12|0;if((n|0)==(f|0)){s=q;w=Z;r=N;continue a}else{V=Z;W=W+1|0;X=n}}}do{if((D|0)!=0){X=c[D+12>>2]|0;if((X|0)==(c[D+16>>2]|0)){_=Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{_=c[X>>2]|0}if((_|0)==-1){c[t>>2]=0;$=1;break}else{$=(c[t>>2]|0)==0;break}}else{$=1}}while(0);do{if((C|0)!=0){t=c[C+12>>2]|0;if((t|0)==(c[C+16>>2]|0)){aa=Ed[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{aa=c[t>>2]|0}if(!((aa|0)==-1)){if($){break}else{ba=94;break}}else{c[b>>2]=0;ba=92;break}}else{ba=92}}while(0);if((ba|0)==92?$:0){ba=94}if((ba|0)==94){c[h>>2]=c[h>>2]|2}b:do{if(m){ba=98}else{$=o;b=e;while(1){if((a[$]|0)==2){ca=b;break b}aa=b+12|0;if((aa|0)==(f|0)){ba=98;break}else{$=$+1|0;b=aa}}}}while(0);if((ba|0)==98){c[h>>2]=c[h>>2]|4;ca=f}if((p|0)==0){da=100;ea=0;i=k;return ca|0}Jt(p);da=100;ea=0;i=k;return ca|0}function is(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==64){t=8}else if((s|0)==0){t=0}else{t=10}s=k|0;Zm(m,g,s,l);g=n;eu(g|0,0,12)|0;Lk(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){if((u|0)!=0){A=c[u+12>>2]|0;if((A|0)==(c[u+16>>2]|0)){B=Ed[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{B=c[A>>2]|0}if((B|0)==-1){c[x>>2]=0;C=1;D=0}else{C=0;D=u}}else{C=1;D=0}A=c[e>>2]|0;do{if((A|0)!=0){E=c[A+12>>2]|0;if((E|0)==(c[A+16>>2]|0)){F=Ed[c[(c[A>>2]|0)+36>>2]&255](A)|0}else{F=c[E>>2]|0}if(!((F|0)==-1)){if(C){G=A;break}else{H=l;I=A;break a}}else{c[e>>2]=0;J=22;break}}else{J=22}}while(0);if((J|0)==22){J=0;if(C){H=l;I=0;break}else{G=0}}A=a[g]|0;E=(A&1)==0;if(E){K=(A&255)>>>1}else{K=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(K|0)){if(E){L=(A&255)>>>1;M=(A&255)>>>1}else{A=c[y>>2]|0;L=A;M=A}Lk(n,L<<1,0);if((a[g]&1)==0){N=10}else{N=(c[f>>2]&-2)-1|0}Lk(n,N,0);if((a[g]&1)==0){O=v}else{O=c[w>>2]|0}c[o>>2]=O+M;P=O}else{P=l}A=D+12|0;E=c[A>>2]|0;Q=D+16|0;if((E|0)==(c[Q>>2]|0)){R=Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{R=c[E>>2]|0}if((Vm(R,t,P,o,r,z,m,k,q,s)|0)!=0){H=P;I=G;break}E=c[A>>2]|0;if((E|0)==(c[Q>>2]|0)){Ed[c[(c[D>>2]|0)+40>>2]&255](D)|0;l=P;u=D;continue}else{c[A>>2]=E+4;l=P;u=D;continue}}u=m;P=a[u]|0;if((P&1)==0){S=(P&255)>>>1}else{S=c[m+4>>2]|0}if((S|0)!=0?(S=c[q>>2]|0,(S-p|0)<160):0){p=c[r>>2]|0;c[q>>2]=S+4;c[S>>2]=p}c[j>>2]=Ns(H,c[o>>2]|0,h,t)|0;t=c[q>>2]|0;q=a[u]|0;if((q&1)==0){T=(q&255)>>>1}else{T=c[m+4>>2]|0}b:do{if((T|0)!=0){if((k|0)!=(t|0)?(o=t-4|0,o>>>0>k>>>0):0){H=k;j=o;do{o=c[H>>2]|0;c[H>>2]=c[j>>2];c[j>>2]=o;H=H+4|0;j=j-4|0}while(H>>>0<j>>>0);U=a[u]|0}else{U=q}if((U&1)==0){V=(U&255)>>>1;W=m+1|0}else{V=c[m+4>>2]|0;W=c[m+8>>2]|0}j=t-4|0;H=a[W]|0;o=H<<24>>24<1|H<<24>>24==127;c:do{if(j>>>0>k>>>0){p=W+V|0;S=W;r=k;P=H;l=o;while(1){if(!l?(P<<24>>24|0)!=(c[r>>2]|0):0){break}G=(p-S|0)>1?S+1|0:S;s=r+4|0;z=a[G]|0;R=z<<24>>24<1|z<<24>>24==127;if(s>>>0<j>>>0){S=G;r=s;P=z;l=R}else{X=z;Y=R;break c}}c[h>>2]=4;break b}else{X=H;Y=o}}while(0);if(!Y?!(((c[j>>2]|0)-1|0)>>>0<X<<24>>24>>>0):0){c[h>>2]=4}}}while(0);do{if((D|0)!=0){X=c[D+12>>2]|0;if((X|0)==(c[D+16>>2]|0)){Z=Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{Z=c[X>>2]|0}if((Z|0)==-1){c[x>>2]=0;_=1;break}else{_=(c[x>>2]|0)==0;break}}else{_=1}}while(0);do{if((I|0)!=0){Z=c[I+12>>2]|0;if((Z|0)==(c[I+16>>2]|0)){$=Ed[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{$=c[Z>>2]|0}if(($|0)==-1){c[e>>2]=0;J=88;break}if(_){aa=c[x>>2]|0;ba=b|0;c[ba>>2]=aa;ca=160;da=0;Ik(n);Ik(m);ea=104;fa=0;i=d;return}}else{J=88}}while(0);if((J|0)==88?!_:0){aa=c[x>>2]|0;ba=b|0;c[ba>>2]=aa;ca=160;da=0;Ik(n);Ik(m);ea=104;fa=0;i=d;return}c[h>>2]=c[h>>2]|2;aa=c[x>>2]|0;ba=b|0;c[ba>>2]=aa;ca=160;da=0;Ik(n);Ik(m);ea=104;fa=0;i=d;return}function js(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==0){t=0}else if((s|0)==64){t=8}else{t=10}s=k|0;Zm(m,g,s,l);g=n;eu(g|0,0,12)|0;Lk(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){if((u|0)!=0){A=c[u+12>>2]|0;if((A|0)==(c[u+16>>2]|0)){B=Ed[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{B=c[A>>2]|0}if((B|0)==-1){c[x>>2]=0;C=1;D=0}else{C=0;D=u}}else{C=1;D=0}A=c[e>>2]|0;do{if((A|0)!=0){E=c[A+12>>2]|0;if((E|0)==(c[A+16>>2]|0)){F=Ed[c[(c[A>>2]|0)+36>>2]&255](A)|0}else{F=c[E>>2]|0}if(!((F|0)==-1)){if(C){G=A;break}else{H=l;I=A;break a}}else{c[e>>2]=0;J=22;break}}else{J=22}}while(0);if((J|0)==22){J=0;if(C){H=l;I=0;break}else{G=0}}A=a[g]|0;E=(A&1)==0;if(E){K=(A&255)>>>1}else{K=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(K|0)){if(E){M=(A&255)>>>1;N=(A&255)>>>1}else{A=c[y>>2]|0;M=A;N=A}Lk(n,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Lk(n,O,0);if((a[g]&1)==0){P=v}else{P=c[w>>2]|0}c[o>>2]=P+N;Q=P}else{Q=l}A=D+12|0;E=c[A>>2]|0;R=D+16|0;if((E|0)==(c[R>>2]|0)){S=Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{S=c[E>>2]|0}if((Vm(S,t,Q,o,r,z,m,k,q,s)|0)!=0){H=Q;I=G;break}E=c[A>>2]|0;if((E|0)==(c[R>>2]|0)){Ed[c[(c[D>>2]|0)+40>>2]&255](D)|0;l=Q;u=D;continue}else{c[A>>2]=E+4;l=Q;u=D;continue}}u=m;Q=a[u]|0;if((Q&1)==0){T=(Q&255)>>>1}else{T=c[m+4>>2]|0}if((T|0)!=0?(T=c[q>>2]|0,(T-p|0)<160):0){p=c[r>>2]|0;c[q>>2]=T+4;c[T>>2]=p}p=Os(H,c[o>>2]|0,h,t)|0;c[j>>2]=p;c[j+4>>2]=L;j=c[q>>2]|0;q=a[u]|0;if((q&1)==0){U=(q&255)>>>1}else{U=c[m+4>>2]|0}b:do{if((U|0)!=0){if((k|0)!=(j|0)?(p=j-4|0,p>>>0>k>>>0):0){t=k;o=p;do{p=c[t>>2]|0;c[t>>2]=c[o>>2];c[o>>2]=p;t=t+4|0;o=o-4|0}while(t>>>0<o>>>0);V=a[u]|0}else{V=q}if((V&1)==0){W=(V&255)>>>1;X=m+1|0}else{W=c[m+4>>2]|0;X=c[m+8>>2]|0}o=j-4|0;t=a[X]|0;p=t<<24>>24<1|t<<24>>24==127;c:do{if(o>>>0>k>>>0){H=X+W|0;T=X;r=k;Q=t;l=p;while(1){if(!l?(Q<<24>>24|0)!=(c[r>>2]|0):0){break}G=(H-T|0)>1?T+1|0:T;s=r+4|0;z=a[G]|0;S=z<<24>>24<1|z<<24>>24==127;if(s>>>0<o>>>0){T=G;r=s;Q=z;l=S}else{Y=z;Z=S;break c}}c[h>>2]=4;break b}else{Y=t;Z=p}}while(0);if(!Z?!(((c[o>>2]|0)-1|0)>>>0<Y<<24>>24>>>0):0){c[h>>2]=4}}}while(0);do{if((D|0)!=0){Y=c[D+12>>2]|0;if((Y|0)==(c[D+16>>2]|0)){_=Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{_=c[Y>>2]|0}if((_|0)==-1){c[x>>2]=0;$=1;break}else{$=(c[x>>2]|0)==0;break}}else{$=1}}while(0);do{if((I|0)!=0){_=c[I+12>>2]|0;if((_|0)==(c[I+16>>2]|0)){aa=Ed[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{aa=c[_>>2]|0}if((aa|0)==-1){c[e>>2]=0;J=88;break}if($){ba=c[x>>2]|0;ca=b|0;c[ca>>2]=ba;da=160;ea=0;Ik(n);Ik(m);fa=104;ga=0;i=d;return}}else{J=88}}while(0);if((J|0)==88?!$:0){ba=c[x>>2]|0;ca=b|0;c[ca>>2]=ba;da=160;ea=0;Ik(n);Ik(m);fa=104;ga=0;i=d;return}c[h>>2]=c[h>>2]|2;ba=c[x>>2]|0;ca=b|0;c[ca>>2]=ba;da=160;ea=0;Ik(n);Ik(m);fa=104;ga=0;i=d;return}function ks(d,e,f,g,h,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0;e=i;i=i+328|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=e+144|0;q=e+152|0;r=e+312|0;s=e+320|0;t=c[h+4>>2]&74;if((t|0)==8){u=16}else if((t|0)==64){u=8}else if((t|0)==0){u=0}else{u=10}t=l|0;Zm(n,h,t,m);h=o;eu(h|0,0,12)|0;Lk(o,10,0);if((a[h]&1)==0){l=o+1|0;v=l;w=l;x=o+8|0}else{l=o+8|0;v=c[l>>2]|0;w=o+1|0;x=l}c[p>>2]=v;l=q|0;c[r>>2]=l;c[s>>2]=0;y=f|0;f=g|0;g=o|0;z=o+4|0;A=c[m>>2]|0;m=v;v=c[y>>2]|0;a:while(1){if((v|0)!=0){B=c[v+12>>2]|0;if((B|0)==(c[v+16>>2]|0)){C=Ed[c[(c[v>>2]|0)+36>>2]&255](v)|0}else{C=c[B>>2]|0}if((C|0)==-1){c[y>>2]=0;D=1;E=0}else{D=0;E=v}}else{D=1;E=0}B=c[f>>2]|0;do{if((B|0)!=0){F=c[B+12>>2]|0;if((F|0)==(c[B+16>>2]|0)){G=Ed[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{G=c[F>>2]|0}if(!((G|0)==-1)){if(D){H=B;break}else{I=m;J=B;break a}}else{c[f>>2]=0;K=22;break}}else{K=22}}while(0);if((K|0)==22){K=0;if(D){I=m;J=0;break}else{H=0}}B=a[h]|0;F=(B&1)==0;if(F){L=(B&255)>>>1}else{L=c[z>>2]|0}if(((c[p>>2]|0)-m|0)==(L|0)){if(F){M=(B&255)>>>1;N=(B&255)>>>1}else{B=c[z>>2]|0;M=B;N=B}Lk(o,M<<1,0);if((a[h]&1)==0){O=10}else{O=(c[g>>2]&-2)-1|0}Lk(o,O,0);if((a[h]&1)==0){P=w}else{P=c[x>>2]|0}c[p>>2]=P+N;Q=P}else{Q=m}B=E+12|0;F=c[B>>2]|0;R=E+16|0;if((F|0)==(c[R>>2]|0)){S=Ed[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{S=c[F>>2]|0}if((Vm(S,u,Q,p,s,A,n,l,r,t)|0)!=0){I=Q;J=H;break}F=c[B>>2]|0;if((F|0)==(c[R>>2]|0)){Ed[c[(c[E>>2]|0)+40>>2]&255](E)|0;m=Q;v=E;continue}else{c[B>>2]=F+4;m=Q;v=E;continue}}v=n;Q=a[v]|0;if((Q&1)==0){T=(Q&255)>>>1}else{T=c[n+4>>2]|0}if((T|0)!=0?(T=c[r>>2]|0,(T-q|0)<160):0){q=c[s>>2]|0;c[r>>2]=T+4;c[T>>2]=q}b[k>>1]=Ps(I,c[p>>2]|0,j,u)|0;u=c[r>>2]|0;r=a[v]|0;if((r&1)==0){U=(r&255)>>>1}else{U=c[n+4>>2]|0}b:do{if((U|0)!=0){if((l|0)!=(u|0)?(p=u-4|0,p>>>0>l>>>0):0){I=l;k=p;do{p=c[I>>2]|0;c[I>>2]=c[k>>2];c[k>>2]=p;I=I+4|0;k=k-4|0}while(I>>>0<k>>>0);V=a[v]|0}else{V=r}if((V&1)==0){W=(V&255)>>>1;X=n+1|0}else{W=c[n+4>>2]|0;X=c[n+8>>2]|0}k=u-4|0;I=a[X]|0;p=I<<24>>24<1|I<<24>>24==127;c:do{if(k>>>0>l>>>0){q=X+W|0;T=X;s=l;Q=I;m=p;while(1){if(!m?(Q<<24>>24|0)!=(c[s>>2]|0):0){break}H=(q-T|0)>1?T+1|0:T;t=s+4|0;A=a[H]|0;S=A<<24>>24<1|A<<24>>24==127;if(t>>>0<k>>>0){T=H;s=t;Q=A;m=S}else{Y=A;Z=S;break c}}c[j>>2]=4;break b}else{Y=I;Z=p}}while(0);if(!Z?!(((c[k>>2]|0)-1|0)>>>0<Y<<24>>24>>>0):0){c[j>>2]=4}}}while(0);do{if((E|0)!=0){Y=c[E+12>>2]|0;if((Y|0)==(c[E+16>>2]|0)){_=Ed[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{_=c[Y>>2]|0}if((_|0)==-1){c[y>>2]=0;$=1;break}else{$=(c[y>>2]|0)==0;break}}else{$=1}}while(0);do{if((J|0)!=0){_=c[J+12>>2]|0;if((_|0)==(c[J+16>>2]|0)){aa=Ed[c[(c[J>>2]|0)+36>>2]&255](J)|0}else{aa=c[_>>2]|0}if((aa|0)==-1){c[f>>2]=0;K=88;break}if($){ba=c[y>>2]|0;ca=d|0;c[ca>>2]=ba;da=160;ea=0;Ik(o);Ik(n);fa=104;ga=0;i=e;return}}else{K=88}}while(0);if((K|0)==88?!$:0){ba=c[y>>2]|0;ca=d|0;c[ca>>2]=ba;da=160;ea=0;Ik(o);Ik(n);fa=104;ga=0;i=e;return}c[j>>2]=c[j>>2]|2;ba=c[y>>2]|0;ca=d|0;c[ca>>2]=ba;da=160;ea=0;Ik(o);Ik(n);fa=104;ga=0;i=e;return}function ls(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==0){t=0}else if((s|0)==64){t=8}else{t=10}s=k|0;Zm(m,g,s,l);g=n;eu(g|0,0,12)|0;Lk(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){if((u|0)!=0){A=c[u+12>>2]|0;if((A|0)==(c[u+16>>2]|0)){B=Ed[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{B=c[A>>2]|0}if((B|0)==-1){c[x>>2]=0;C=1;D=0}else{C=0;D=u}}else{C=1;D=0}A=c[e>>2]|0;do{if((A|0)!=0){E=c[A+12>>2]|0;if((E|0)==(c[A+16>>2]|0)){F=Ed[c[(c[A>>2]|0)+36>>2]&255](A)|0}else{F=c[E>>2]|0}if(!((F|0)==-1)){if(C){G=A;break}else{H=l;I=A;break a}}else{c[e>>2]=0;J=22;break}}else{J=22}}while(0);if((J|0)==22){J=0;if(C){H=l;I=0;break}else{G=0}}A=a[g]|0;E=(A&1)==0;if(E){K=(A&255)>>>1}else{K=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(K|0)){if(E){L=(A&255)>>>1;M=(A&255)>>>1}else{A=c[y>>2]|0;L=A;M=A}Lk(n,L<<1,0);if((a[g]&1)==0){N=10}else{N=(c[f>>2]&-2)-1|0}Lk(n,N,0);if((a[g]&1)==0){O=v}else{O=c[w>>2]|0}c[o>>2]=O+M;P=O}else{P=l}A=D+12|0;E=c[A>>2]|0;Q=D+16|0;if((E|0)==(c[Q>>2]|0)){R=Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{R=c[E>>2]|0}if((Vm(R,t,P,o,r,z,m,k,q,s)|0)!=0){H=P;I=G;break}E=c[A>>2]|0;if((E|0)==(c[Q>>2]|0)){Ed[c[(c[D>>2]|0)+40>>2]&255](D)|0;l=P;u=D;continue}else{c[A>>2]=E+4;l=P;u=D;continue}}u=m;P=a[u]|0;if((P&1)==0){S=(P&255)>>>1}else{S=c[m+4>>2]|0}if((S|0)!=0?(S=c[q>>2]|0,(S-p|0)<160):0){p=c[r>>2]|0;c[q>>2]=S+4;c[S>>2]=p}c[j>>2]=Qs(H,c[o>>2]|0,h,t)|0;t=c[q>>2]|0;q=a[u]|0;if((q&1)==0){T=(q&255)>>>1}else{T=c[m+4>>2]|0}b:do{if((T|0)!=0){if((k|0)!=(t|0)?(o=t-4|0,o>>>0>k>>>0):0){H=k;j=o;do{o=c[H>>2]|0;c[H>>2]=c[j>>2];c[j>>2]=o;H=H+4|0;j=j-4|0}while(H>>>0<j>>>0);U=a[u]|0}else{U=q}if((U&1)==0){V=(U&255)>>>1;W=m+1|0}else{V=c[m+4>>2]|0;W=c[m+8>>2]|0}j=t-4|0;H=a[W]|0;o=H<<24>>24<1|H<<24>>24==127;c:do{if(j>>>0>k>>>0){p=W+V|0;S=W;r=k;P=H;l=o;while(1){if(!l?(P<<24>>24|0)!=(c[r>>2]|0):0){break}G=(p-S|0)>1?S+1|0:S;s=r+4|0;z=a[G]|0;R=z<<24>>24<1|z<<24>>24==127;if(s>>>0<j>>>0){S=G;r=s;P=z;l=R}else{X=z;Y=R;break c}}c[h>>2]=4;break b}else{X=H;Y=o}}while(0);if(!Y?!(((c[j>>2]|0)-1|0)>>>0<X<<24>>24>>>0):0){c[h>>2]=4}}}while(0);do{if((D|0)!=0){X=c[D+12>>2]|0;if((X|0)==(c[D+16>>2]|0)){Z=Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{Z=c[X>>2]|0}if((Z|0)==-1){c[x>>2]=0;_=1;break}else{_=(c[x>>2]|0)==0;break}}else{_=1}}while(0);do{if((I|0)!=0){Z=c[I+12>>2]|0;if((Z|0)==(c[I+16>>2]|0)){$=Ed[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{$=c[Z>>2]|0}if(($|0)==-1){c[e>>2]=0;J=88;break}if(_){aa=c[x>>2]|0;ba=b|0;c[ba>>2]=aa;ca=160;da=0;Ik(n);Ik(m);ea=104;fa=0;i=d;return}}else{J=88}}while(0);if((J|0)==88?!_:0){aa=c[x>>2]|0;ba=b|0;c[ba>>2]=aa;ca=160;da=0;Ik(n);Ik(m);ea=104;fa=0;i=d;return}c[h>>2]=c[h>>2]|2;aa=c[x>>2]|0;ba=b|0;c[ba>>2]=aa;ca=160;da=0;Ik(n);Ik(m);ea=104;fa=0;i=d;return}function ms(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==64){t=8}else if((s|0)==0){t=0}else{t=10}s=k|0;Zm(m,g,s,l);g=n;eu(g|0,0,12)|0;Lk(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){if((u|0)!=0){A=c[u+12>>2]|0;if((A|0)==(c[u+16>>2]|0)){B=Ed[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{B=c[A>>2]|0}if((B|0)==-1){c[x>>2]=0;C=1;D=0}else{C=0;D=u}}else{C=1;D=0}A=c[e>>2]|0;do{if((A|0)!=0){E=c[A+12>>2]|0;if((E|0)==(c[A+16>>2]|0)){F=Ed[c[(c[A>>2]|0)+36>>2]&255](A)|0}else{F=c[E>>2]|0}if(!((F|0)==-1)){if(C){G=A;break}else{H=l;I=A;break a}}else{c[e>>2]=0;J=22;break}}else{J=22}}while(0);if((J|0)==22){J=0;if(C){H=l;I=0;break}else{G=0}}A=a[g]|0;E=(A&1)==0;if(E){K=(A&255)>>>1}else{K=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(K|0)){if(E){L=(A&255)>>>1;M=(A&255)>>>1}else{A=c[y>>2]|0;L=A;M=A}Lk(n,L<<1,0);if((a[g]&1)==0){N=10}else{N=(c[f>>2]&-2)-1|0}Lk(n,N,0);if((a[g]&1)==0){O=v}else{O=c[w>>2]|0}c[o>>2]=O+M;P=O}else{P=l}A=D+12|0;E=c[A>>2]|0;Q=D+16|0;if((E|0)==(c[Q>>2]|0)){R=Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{R=c[E>>2]|0}if((Vm(R,t,P,o,r,z,m,k,q,s)|0)!=0){H=P;I=G;break}E=c[A>>2]|0;if((E|0)==(c[Q>>2]|0)){Ed[c[(c[D>>2]|0)+40>>2]&255](D)|0;l=P;u=D;continue}else{c[A>>2]=E+4;l=P;u=D;continue}}u=m;P=a[u]|0;if((P&1)==0){S=(P&255)>>>1}else{S=c[m+4>>2]|0}if((S|0)!=0?(S=c[q>>2]|0,(S-p|0)<160):0){p=c[r>>2]|0;c[q>>2]=S+4;c[S>>2]=p}c[j>>2]=Rs(H,c[o>>2]|0,h,t)|0;t=c[q>>2]|0;q=a[u]|0;if((q&1)==0){T=(q&255)>>>1}else{T=c[m+4>>2]|0}b:do{if((T|0)!=0){if((k|0)!=(t|0)?(o=t-4|0,o>>>0>k>>>0):0){H=k;j=o;do{o=c[H>>2]|0;c[H>>2]=c[j>>2];c[j>>2]=o;H=H+4|0;j=j-4|0}while(H>>>0<j>>>0);U=a[u]|0}else{U=q}if((U&1)==0){V=(U&255)>>>1;W=m+1|0}else{V=c[m+4>>2]|0;W=c[m+8>>2]|0}j=t-4|0;H=a[W]|0;o=H<<24>>24<1|H<<24>>24==127;c:do{if(j>>>0>k>>>0){p=W+V|0;S=W;r=k;P=H;l=o;while(1){if(!l?(P<<24>>24|0)!=(c[r>>2]|0):0){break}G=(p-S|0)>1?S+1|0:S;s=r+4|0;z=a[G]|0;R=z<<24>>24<1|z<<24>>24==127;if(s>>>0<j>>>0){S=G;r=s;P=z;l=R}else{X=z;Y=R;break c}}c[h>>2]=4;break b}else{X=H;Y=o}}while(0);if(!Y?!(((c[j>>2]|0)-1|0)>>>0<X<<24>>24>>>0):0){c[h>>2]=4}}}while(0);do{if((D|0)!=0){X=c[D+12>>2]|0;if((X|0)==(c[D+16>>2]|0)){Z=Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{Z=c[X>>2]|0}if((Z|0)==-1){c[x>>2]=0;_=1;break}else{_=(c[x>>2]|0)==0;break}}else{_=1}}while(0);do{if((I|0)!=0){Z=c[I+12>>2]|0;if((Z|0)==(c[I+16>>2]|0)){$=Ed[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{$=c[Z>>2]|0}if(($|0)==-1){c[e>>2]=0;J=88;break}if(_){aa=c[x>>2]|0;ba=b|0;c[ba>>2]=aa;ca=160;da=0;Ik(n);Ik(m);ea=104;fa=0;i=d;return}}else{J=88}}while(0);if((J|0)==88?!_:0){aa=c[x>>2]|0;ba=b|0;c[ba>>2]=aa;ca=160;da=0;Ik(n);Ik(m);ea=104;fa=0;i=d;return}c[h>>2]=c[h>>2]|2;aa=c[x>>2]|0;ba=b|0;c[ba>>2]=aa;ca=160;da=0;Ik(n);Ik(m);ea=104;fa=0;i=d;return}function ns(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==0){t=0}else if((s|0)==64){t=8}else{t=10}s=k|0;Zm(m,g,s,l);g=n;eu(g|0,0,12)|0;Lk(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){if((u|0)!=0){A=c[u+12>>2]|0;if((A|0)==(c[u+16>>2]|0)){B=Ed[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{B=c[A>>2]|0}if((B|0)==-1){c[x>>2]=0;C=1;D=0}else{C=0;D=u}}else{C=1;D=0}A=c[e>>2]|0;do{if((A|0)!=0){E=c[A+12>>2]|0;if((E|0)==(c[A+16>>2]|0)){F=Ed[c[(c[A>>2]|0)+36>>2]&255](A)|0}else{F=c[E>>2]|0}if(!((F|0)==-1)){if(C){G=A;break}else{H=l;I=A;break a}}else{c[e>>2]=0;J=22;break}}else{J=22}}while(0);if((J|0)==22){J=0;if(C){H=l;I=0;break}else{G=0}}A=a[g]|0;E=(A&1)==0;if(E){K=(A&255)>>>1}else{K=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(K|0)){if(E){M=(A&255)>>>1;N=(A&255)>>>1}else{A=c[y>>2]|0;M=A;N=A}Lk(n,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Lk(n,O,0);if((a[g]&1)==0){P=v}else{P=c[w>>2]|0}c[o>>2]=P+N;Q=P}else{Q=l}A=D+12|0;E=c[A>>2]|0;R=D+16|0;if((E|0)==(c[R>>2]|0)){S=Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{S=c[E>>2]|0}if((Vm(S,t,Q,o,r,z,m,k,q,s)|0)!=0){H=Q;I=G;break}E=c[A>>2]|0;if((E|0)==(c[R>>2]|0)){Ed[c[(c[D>>2]|0)+40>>2]&255](D)|0;l=Q;u=D;continue}else{c[A>>2]=E+4;l=Q;u=D;continue}}u=m;Q=a[u]|0;if((Q&1)==0){T=(Q&255)>>>1}else{T=c[m+4>>2]|0}if((T|0)!=0?(T=c[q>>2]|0,(T-p|0)<160):0){p=c[r>>2]|0;c[q>>2]=T+4;c[T>>2]=p}p=Ss(H,c[o>>2]|0,h,t)|0;c[j>>2]=p;c[j+4>>2]=L;j=c[q>>2]|0;q=a[u]|0;if((q&1)==0){U=(q&255)>>>1}else{U=c[m+4>>2]|0}b:do{if((U|0)!=0){if((k|0)!=(j|0)?(p=j-4|0,p>>>0>k>>>0):0){t=k;o=p;do{p=c[t>>2]|0;c[t>>2]=c[o>>2];c[o>>2]=p;t=t+4|0;o=o-4|0}while(t>>>0<o>>>0);V=a[u]|0}else{V=q}if((V&1)==0){W=(V&255)>>>1;X=m+1|0}else{W=c[m+4>>2]|0;X=c[m+8>>2]|0}o=j-4|0;t=a[X]|0;p=t<<24>>24<1|t<<24>>24==127;c:do{if(o>>>0>k>>>0){H=X+W|0;T=X;r=k;Q=t;l=p;while(1){if(!l?(Q<<24>>24|0)!=(c[r>>2]|0):0){break}G=(H-T|0)>1?T+1|0:T;s=r+4|0;z=a[G]|0;S=z<<24>>24<1|z<<24>>24==127;if(s>>>0<o>>>0){T=G;r=s;Q=z;l=S}else{Y=z;Z=S;break c}}c[h>>2]=4;break b}else{Y=t;Z=p}}while(0);if(!Z?!(((c[o>>2]|0)-1|0)>>>0<Y<<24>>24>>>0):0){c[h>>2]=4}}}while(0);do{if((D|0)!=0){Y=c[D+12>>2]|0;if((Y|0)==(c[D+16>>2]|0)){_=Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{_=c[Y>>2]|0}if((_|0)==-1){c[x>>2]=0;$=1;break}else{$=(c[x>>2]|0)==0;break}}else{$=1}}while(0);do{if((I|0)!=0){_=c[I+12>>2]|0;if((_|0)==(c[I+16>>2]|0)){aa=Ed[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{aa=c[_>>2]|0}if((aa|0)==-1){c[e>>2]=0;J=88;break}if($){ba=c[x>>2]|0;ca=b|0;c[ca>>2]=ba;da=160;ea=0;Ik(n);Ik(m);fa=104;ga=0;i=d;return}}else{J=88}}while(0);if((J|0)==88?!$:0){ba=c[x>>2]|0;ca=b|0;c[ca>>2]=ba;da=160;ea=0;Ik(n);Ik(m);fa=104;ga=0;i=d;return}c[h>>2]=c[h>>2]|2;ba=c[x>>2]|0;ca=b|0;c[ca>>2]=ba;da=160;ea=0;Ik(n);Ik(m);fa=104;ga=0;i=d;return}function os(b,d,e,f,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0;d=i;i=i+376|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+128|0;m=d+136|0;n=d+144|0;o=d+160|0;p=d+176|0;q=d+184|0;r=d+344|0;s=d+352|0;t=d+360|0;u=d+368|0;v=d|0;_m(n,h,v,l,m);h=o;eu(h|0,0,12)|0;Lk(o,10,0);if((a[h]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=c[l>>2]|0;l=c[m>>2]|0;m=x;x=c[A>>2]|0;a:while(1){if((x|0)!=0){D=c[x+12>>2]|0;if((D|0)==(c[x+16>>2]|0)){E=Ed[c[(c[x>>2]|0)+36>>2]&255](x)|0}else{E=c[D>>2]|0}if((E|0)==-1){c[A>>2]=0;F=1;G=0}else{F=0;G=x}}else{F=1;G=0}D=c[e>>2]|0;do{if((D|0)!=0){H=c[D+12>>2]|0;if((H|0)==(c[D+16>>2]|0)){I=Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{I=c[H>>2]|0}if(!((I|0)==-1)){if(F){J=D;break}else{K=m;L=D;break a}}else{c[e>>2]=0;M=18;break}}else{M=18}}while(0);if((M|0)==18){M=0;if(F){K=m;L=0;break}else{J=0}}D=a[h]|0;H=(D&1)==0;if(H){N=(D&255)>>>1}else{N=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(N|0)){if(H){O=(D&255)>>>1;P=(D&255)>>>1}else{D=c[B>>2]|0;O=D;P=D}Lk(o,O<<1,0);if((a[h]&1)==0){Q=10}else{Q=(c[f>>2]&-2)-1|0}Lk(o,Q,0);if((a[h]&1)==0){R=y}else{R=c[z>>2]|0}c[p>>2]=R+P;S=R}else{S=m}D=G+12|0;H=c[D>>2]|0;T=G+16|0;if((H|0)==(c[T>>2]|0)){U=Ed[c[(c[G>>2]|0)+36>>2]&255](G)|0}else{U=c[H>>2]|0}if(($m(U,t,u,S,p,C,l,n,w,r,s,v)|0)!=0){K=S;L=J;break}H=c[D>>2]|0;if((H|0)==(c[T>>2]|0)){Ed[c[(c[G>>2]|0)+40>>2]&255](G)|0;m=S;x=G;continue}else{c[D>>2]=H+4;m=S;x=G;continue}}x=n;S=a[x]|0;if((S&1)==0){V=(S&255)>>>1}else{V=c[n+4>>2]|0}if(!((V|0)==0|(a[t]|0)==0)?(t=c[r>>2]|0,(t-q|0)<160):0){q=c[s>>2]|0;c[r>>2]=t+4;c[t>>2]=q}g[k>>2]=+Ts(K,c[p>>2]|0,j);p=c[r>>2]|0;r=a[x]|0;if((r&1)==0){W=(r&255)>>>1}else{W=c[n+4>>2]|0}b:do{if((W|0)!=0){if((w|0)!=(p|0)?(K=p-4|0,K>>>0>w>>>0):0){k=w;q=K;do{K=c[k>>2]|0;c[k>>2]=c[q>>2];c[q>>2]=K;k=k+4|0;q=q-4|0}while(k>>>0<q>>>0);X=a[x]|0}else{X=r}if((X&1)==0){Y=(X&255)>>>1;Z=n+1|0}else{Y=c[n+4>>2]|0;Z=c[n+8>>2]|0}q=p-4|0;k=a[Z]|0;K=k<<24>>24<1|k<<24>>24==127;c:do{if(q>>>0>w>>>0){t=Z+Y|0;s=Z;V=w;S=k;m=K;while(1){if(!m?(S<<24>>24|0)!=(c[V>>2]|0):0){break}J=(t-s|0)>1?s+1|0:s;v=V+4|0;l=a[J]|0;C=l<<24>>24<1|l<<24>>24==127;if(v>>>0<q>>>0){s=J;V=v;S=l;m=C}else{_=l;$=C;break c}}c[j>>2]=4;break b}else{_=k;$=K}}while(0);if(!$?!(((c[q>>2]|0)-1|0)>>>0<_<<24>>24>>>0):0){c[j>>2]=4}}}while(0);do{if((G|0)!=0){_=c[G+12>>2]|0;if((_|0)==(c[G+16>>2]|0)){aa=Ed[c[(c[G>>2]|0)+36>>2]&255](G)|0}else{aa=c[_>>2]|0}if((aa|0)==-1){c[A>>2]=0;ba=1;break}else{ba=(c[A>>2]|0)==0;break}}else{ba=1}}while(0);do{if((L|0)!=0){aa=c[L+12>>2]|0;if((aa|0)==(c[L+16>>2]|0)){ca=Ed[c[(c[L>>2]|0)+36>>2]&255](L)|0}else{ca=c[aa>>2]|0}if((ca|0)==-1){c[e>>2]=0;M=84;break}if(ba){da=c[A>>2]|0;ea=b|0;c[ea>>2]=da;fa=160;ga=0;Ik(o);Ik(n);ha=128;ia=0;i=d;return}}else{M=84}}while(0);if((M|0)==84?!ba:0){da=c[A>>2]|0;ea=b|0;c[ea>>2]=da;fa=160;ga=0;Ik(o);Ik(n);ha=128;ia=0;i=d;return}c[j>>2]=c[j>>2]|2;da=c[A>>2]|0;ea=b|0;c[ea>>2]=da;fa=160;ga=0;Ik(o);Ik(n);ha=128;ia=0;i=d;return}function ps(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0;d=i;i=i+376|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+128|0;m=d+136|0;n=d+144|0;o=d+160|0;p=d+176|0;q=d+184|0;r=d+344|0;s=d+352|0;t=d+360|0;u=d+368|0;v=d|0;_m(n,g,v,l,m);g=o;eu(g|0,0,12)|0;Lk(o,10,0);if((a[g]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=c[l>>2]|0;l=c[m>>2]|0;m=x;x=c[A>>2]|0;a:while(1){if((x|0)!=0){D=c[x+12>>2]|0;if((D|0)==(c[x+16>>2]|0)){E=Ed[c[(c[x>>2]|0)+36>>2]&255](x)|0}else{E=c[D>>2]|0}if((E|0)==-1){c[A>>2]=0;F=1;G=0}else{F=0;G=x}}else{F=1;G=0}D=c[e>>2]|0;do{if((D|0)!=0){H=c[D+12>>2]|0;if((H|0)==(c[D+16>>2]|0)){I=Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{I=c[H>>2]|0}if(!((I|0)==-1)){if(F){J=D;break}else{K=m;L=D;break a}}else{c[e>>2]=0;M=18;break}}else{M=18}}while(0);if((M|0)==18){M=0;if(F){K=m;L=0;break}else{J=0}}D=a[g]|0;H=(D&1)==0;if(H){N=(D&255)>>>1}else{N=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(N|0)){if(H){O=(D&255)>>>1;P=(D&255)>>>1}else{D=c[B>>2]|0;O=D;P=D}Lk(o,O<<1,0);if((a[g]&1)==0){Q=10}else{Q=(c[f>>2]&-2)-1|0}Lk(o,Q,0);if((a[g]&1)==0){R=y}else{R=c[z>>2]|0}c[p>>2]=R+P;S=R}else{S=m}D=G+12|0;H=c[D>>2]|0;T=G+16|0;if((H|0)==(c[T>>2]|0)){U=Ed[c[(c[G>>2]|0)+36>>2]&255](G)|0}else{U=c[H>>2]|0}if(($m(U,t,u,S,p,C,l,n,w,r,s,v)|0)!=0){K=S;L=J;break}H=c[D>>2]|0;if((H|0)==(c[T>>2]|0)){Ed[c[(c[G>>2]|0)+40>>2]&255](G)|0;m=S;x=G;continue}else{c[D>>2]=H+4;m=S;x=G;continue}}x=n;S=a[x]|0;if((S&1)==0){V=(S&255)>>>1}else{V=c[n+4>>2]|0}if(!((V|0)==0|(a[t]|0)==0)?(t=c[r>>2]|0,(t-q|0)<160):0){q=c[s>>2]|0;c[r>>2]=t+4;c[t>>2]=q}h[k>>3]=+Us(K,c[p>>2]|0,j);p=c[r>>2]|0;r=a[x]|0;if((r&1)==0){W=(r&255)>>>1}else{W=c[n+4>>2]|0}b:do{if((W|0)!=0){if((w|0)!=(p|0)?(K=p-4|0,K>>>0>w>>>0):0){k=w;q=K;do{K=c[k>>2]|0;c[k>>2]=c[q>>2];c[q>>2]=K;k=k+4|0;q=q-4|0}while(k>>>0<q>>>0);X=a[x]|0}else{X=r}if((X&1)==0){Y=(X&255)>>>1;Z=n+1|0}else{Y=c[n+4>>2]|0;Z=c[n+8>>2]|0}q=p-4|0;k=a[Z]|0;K=k<<24>>24<1|k<<24>>24==127;c:do{if(q>>>0>w>>>0){t=Z+Y|0;s=Z;V=w;S=k;m=K;while(1){if(!m?(S<<24>>24|0)!=(c[V>>2]|0):0){break}J=(t-s|0)>1?s+1|0:s;v=V+4|0;l=a[J]|0;C=l<<24>>24<1|l<<24>>24==127;if(v>>>0<q>>>0){s=J;V=v;S=l;m=C}else{_=l;$=C;break c}}c[j>>2]=4;break b}else{_=k;$=K}}while(0);if(!$?!(((c[q>>2]|0)-1|0)>>>0<_<<24>>24>>>0):0){c[j>>2]=4}}}while(0);do{if((G|0)!=0){_=c[G+12>>2]|0;if((_|0)==(c[G+16>>2]|0)){aa=Ed[c[(c[G>>2]|0)+36>>2]&255](G)|0}else{aa=c[_>>2]|0}if((aa|0)==-1){c[A>>2]=0;ba=1;break}else{ba=(c[A>>2]|0)==0;break}}else{ba=1}}while(0);do{if((L|0)!=0){aa=c[L+12>>2]|0;if((aa|0)==(c[L+16>>2]|0)){ca=Ed[c[(c[L>>2]|0)+36>>2]&255](L)|0}else{ca=c[aa>>2]|0}if((ca|0)==-1){c[e>>2]=0;M=84;break}if(ba){da=c[A>>2]|0;ea=b|0;c[ea>>2]=da;fa=160;ga=0;Ik(o);Ik(n);ha=128;ia=0;i=d;return}}else{M=84}}while(0);if((M|0)==84?!ba:0){da=c[A>>2]|0;ea=b|0;c[ea>>2]=da;fa=160;ga=0;Ik(o);Ik(n);ha=128;ia=0;i=d;return}c[j>>2]=c[j>>2]|2;da=c[A>>2]|0;ea=b|0;c[ea>>2]=da;fa=160;ga=0;Ik(o);Ik(n);ha=128;ia=0;i=d;return}



function Pm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];ms(a,b,k,l,f,g,h);i=j;return}function Qm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];ns(a,b,k,l,f,g,h);i=j;return}function Rm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];os(a,b,k,l,f,g,h);i=j;return}function Sm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];ps(a,b,k,l,f,g,h);i=j;return}function Tm(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];qs(a,b,k,l,f,g,h);i=j;return}function Um(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0;d=i;i=i+320|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+16|0;m=d+120|0;n=d+136|0;o=d+144|0;p=d+160|0;q=m;eu(q|0,0,12)|0;dl(n,g);g=n|0;n=c[g>>2]|0;if(!((c[6534]|0)==-1)){c[k>>2]=26136;c[k+4>>2]=30;c[k+8>>2]=0;Ck(26136,k,160)}k=(c[6535]|0)-1|0;r=c[n+8>>2]|0;if((c[n+12>>2]|0)-r>>2>>>0>k>>>0?(n=c[r+(k<<2)>>2]|0,(n|0)!=0):0){k=l|0;Md[c[(c[n>>2]|0)+48>>2]&15](n,20776,20802,k)|0;fk(c[g>>2]|0)|0;g=o;eu(g|0,0,12)|0;Lk(o,10,0);if((a[g]&1)==0){n=o+1|0;s=n;t=n;u=o+8|0}else{n=o+8|0;s=c[n>>2]|0;t=o+1|0;u=n}n=e|0;e=f|0;f=o|0;r=o+4|0;v=l+96|0;w=l+100|0;x=p;y=l+104|0;z=l;l=m+4|0;A=s;B=0;C=p|0;p=s;s=c[n>>2]|0;a:while(1){if((s|0)!=0){D=c[s+12>>2]|0;if((D|0)==(c[s+16>>2]|0)){E=Ed[c[(c[s>>2]|0)+36>>2]&255](s)|0}else{E=c[D>>2]|0}if((E|0)==-1){c[n>>2]=0;F=1;G=0}else{F=0;G=s}}else{F=1;G=0}D=c[e>>2]|0;do{if((D|0)!=0){H=c[D+12>>2]|0;if((H|0)==(c[D+16>>2]|0)){I=Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{I=c[H>>2]|0}if(!((I|0)==-1)){if(F){break}else{J=A;break a}}else{c[e>>2]=0;K=26;break}}else{K=26}}while(0);if((K|0)==26?(K=0,F):0){J=A;break}D=a[g]|0;H=(D&1)==0;if(H){L=(D&255)>>>1}else{L=c[r>>2]|0}if((p-A|0)==(L|0)){if(H){M=(D&255)>>>1;N=(D&255)>>>1}else{D=c[r>>2]|0;M=D;N=D}Lk(o,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Lk(o,O,0);if((a[g]&1)==0){P=t}else{P=c[u>>2]|0}Q=P;R=P+N|0}else{Q=A;R=p}D=c[G+12>>2]|0;if((D|0)==(c[G+16>>2]|0)){S=Ed[c[(c[G>>2]|0)+36>>2]&255](G)|0}else{S=c[D>>2]|0}D=(R|0)==(Q|0);if(D?(H=(c[v>>2]|0)==(S|0),H|(c[w>>2]|0)==(S|0)):0){a[R]=H?43:45;T=0;U=C;V=R+1|0}else{K=53}do{if((K|0)==53){K=0;H=a[q]|0;if((H&1)==0){W=(H&255)>>>1}else{W=c[l>>2]|0}if((W|0)!=0&(S|0)==0){if((C-x|0)>=160){T=B;U=C;V=R;break}c[C>>2]=B;T=0;U=C+4|0;V=R;break}else{X=k}while(1){H=X+4|0;if((c[X>>2]|0)==(S|0)){Y=X;break}if((H|0)==(y|0)){Y=y;break}else{X=H}}H=Y-z|0;Z=H>>2;if((H|0)>92){J=Q;break a}if((H|0)<88){a[R]=a[20776+Z|0]|0;T=B+1|0;U=C;V=R+1|0;break}if(D){J=R;break a}if((R-Q|0)>=3){J=Q;break a}if((a[R-1|0]|0)!=48){J=Q;break a}a[R]=a[20776+Z|0]|0;T=0;U=C;V=R+1|0}}while(0);D=c[n>>2]|0;Z=D+12|0;H=c[Z>>2]|0;if((H|0)==(c[D+16>>2]|0)){Ed[c[(c[D>>2]|0)+40>>2]&255](D)|0;A=Q;B=T;C=U;p=V;s=D;continue}else{c[Z>>2]=H+4;A=Q;B=T;C=U;p=V;s=D;continue}}a[J+3|0]=0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}s=gs(J,c[6072]|0,2488,(J=i,i=i+8|0,c[J>>2]=j,J)|0)|0;i=J;if((s|0)!=1){c[h>>2]=4}s=c[n>>2]|0;if((s|0)!=0){J=c[s+12>>2]|0;if((J|0)==(c[s+16>>2]|0)){_=Ed[c[(c[s>>2]|0)+36>>2]&255](s)|0}else{_=c[J>>2]|0}if((_|0)==-1){c[n>>2]=0;$=1;aa=0}else{$=0;aa=s}}else{$=1;aa=0}s=c[e>>2]|0;do{if((s|0)!=0){n=c[s+12>>2]|0;if((n|0)==(c[s+16>>2]|0)){ba=Ed[c[(c[s>>2]|0)+36>>2]&255](s)|0}else{ba=c[n>>2]|0}if((ba|0)==-1){c[e>>2]=0;K=91;break}if($){ca=b|0;c[ca>>2]=aa;da=160;ea=0;Ik(o);Ik(m);fa=104;ga=0;i=d;return}}else{K=91}}while(0);if((K|0)==91?!$:0){ca=b|0;c[ca>>2]=aa;da=160;ea=0;Ik(o);Ik(m);fa=104;ga=0;i=d;return}c[h>>2]=c[h>>2]|2;ca=b|0;c[ca>>2]=aa;da=160;ea=0;Ik(o);Ik(m);fa=104;ga=0;i=d;return}d=dd(4)|0;ht(d);ac(d|0,18472,230)}function Vm(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;m=c[f>>2]|0;n=(m|0)==(e|0);do{if(n){o=(c[l+96>>2]|0)==(b|0);if(!o?(c[l+100>>2]|0)!=(b|0):0){break}c[f>>2]=e+1;a[e]=o?43:45;c[g>>2]=0;p=0;return p|0}}while(0);o=a[i]|0;if((o&1)==0){q=(o&255)>>>1}else{q=c[i+4>>2]|0}if((q|0)!=0&(b|0)==(h|0)){h=c[k>>2]|0;if((h-j|0)>=160){p=0;return p|0}j=c[g>>2]|0;c[k>>2]=h+4;c[h>>2]=j;c[g>>2]=0;p=0;return p|0}j=l+104|0;h=l;while(1){k=h+4|0;if((c[h>>2]|0)==(b|0)){r=h;break}if((k|0)==(j|0)){r=j;break}else{h=k}}h=r-l|0;l=h>>2;if((h|0)>92){p=-1;return p|0}if((d|0)==16){if((h|0)>=88){if(n){p=-1;return p|0}if((m-e|0)>=3){p=-1;return p|0}if((a[m-1|0]|0)!=48){p=-1;return p|0}c[g>>2]=0;e=a[20776+l|0]|0;c[f>>2]=m+1;a[m]=e;p=0;return p|0}}else if((d|0)==8|(d|0)==10?(l|0)>=(d|0):0){p=-1;return p|0}d=a[20776+l|0]|0;c[f>>2]=m+1;a[m]=d;c[g>>2]=(c[g>>2]|0)+1;p=0;return p|0}function Wm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+40|0;h=g|0;j=g+16|0;k=g+32|0;dl(k,d);d=k|0;k=c[d>>2]|0;if(!((c[6536]|0)==-1)){c[j>>2]=26144;c[j+4>>2]=30;c[j+8>>2]=0;Ck(26144,j,160)}j=(c[6537]|0)-1|0;l=c[k+8>>2]|0;if((c[k+12>>2]|0)-l>>2>>>0>j>>>0?(k=c[l+(j<<2)>>2]|0,(k|0)!=0):0){Md[c[(c[k>>2]|0)+32>>2]&15](k,20776,20802,e)|0;e=c[d>>2]|0;if(!((c[6440]|0)==-1)){c[h>>2]=25760;c[h+4>>2]=30;c[h+8>>2]=0;Ck(25760,h,160)}h=(c[6441]|0)-1|0;k=c[e+8>>2]|0;if((c[e+12>>2]|0)-k>>2>>>0>h>>>0?(e=c[k+(h<<2)>>2]|0,(e|0)!=0):0){h=e;a[f]=Ed[c[(c[e>>2]|0)+16>>2]&255](h)|0;Ad[c[(c[e>>2]|0)+20>>2]&127](b,h);fk(c[d>>2]|0)|0;i=g;return}g=dd(4)|0;ht(g);ac(g|0,18472,230)}g=dd(4)|0;ht(g);ac(g|0,18472,230)}function Xm(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+40|0;j=h|0;k=h+16|0;l=h+32|0;dl(l,d);d=l|0;l=c[d>>2]|0;if(!((c[6536]|0)==-1)){c[k>>2]=26144;c[k+4>>2]=30;c[k+8>>2]=0;Ck(26144,k,160)}k=(c[6537]|0)-1|0;m=c[l+8>>2]|0;if((c[l+12>>2]|0)-m>>2>>>0>k>>>0?(l=c[m+(k<<2)>>2]|0,(l|0)!=0):0){Md[c[(c[l>>2]|0)+32>>2]&15](l,20776,20808,e)|0;e=c[d>>2]|0;if(!((c[6440]|0)==-1)){c[j>>2]=25760;c[j+4>>2]=30;c[j+8>>2]=0;Ck(25760,j,160)}j=(c[6441]|0)-1|0;l=c[e+8>>2]|0;if((c[e+12>>2]|0)-l>>2>>>0>j>>>0?(e=c[l+(j<<2)>>2]|0,(e|0)!=0):0){j=e;l=e;a[f]=Ed[c[(c[l>>2]|0)+12>>2]&255](j)|0;a[g]=Ed[c[(c[l>>2]|0)+16>>2]&255](j)|0;Ad[c[(c[e>>2]|0)+20>>2]&127](b,j);fk(c[d>>2]|0)|0;i=h;return}h=dd(4)|0;ht(h);ac(h|0,18472,230)}h=dd(4)|0;ht(h);ac(h|0,18472,230)}function Ym(b,d,e,f,g,h,i,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0;if(b<<24>>24==h<<24>>24){if((a[d]|0)==0){o=-1;return o|0}a[d]=0;h=c[g>>2]|0;c[g>>2]=h+1;a[h]=46;h=a[j]|0;if((h&1)==0){p=(h&255)>>>1}else{p=c[j+4>>2]|0}if((p|0)==0){o=0;return o|0}p=c[l>>2]|0;if((p-k|0)>=160){o=0;return o|0}h=c[m>>2]|0;c[l>>2]=p+4;c[p>>2]=h;o=0;return o|0}if(b<<24>>24==i<<24>>24){i=a[j]|0;if((i&1)==0){q=(i&255)>>>1}else{q=c[j+4>>2]|0}if((q|0)!=0){if((a[d]|0)==0){o=-1;return o|0}q=c[l>>2]|0;if((q-k|0)>=160){o=0;return o|0}i=c[m>>2]|0;c[l>>2]=q+4;c[q>>2]=i;c[m>>2]=0;o=0;return o|0}}i=n+32|0;q=n;while(1){h=q+1|0;if((a[q]|0)==b<<24>>24){r=q;break}if((h|0)==(i|0)){r=i;break}else{q=h}}q=r-n|0;if((q|0)>31){o=-1;return o|0}n=a[20776+q|0]|0;if((q|0)==22|(q|0)==23){a[e]=80;r=c[g>>2]|0;c[g>>2]=r+1;a[r]=n;o=0;return o|0}else if((q|0)==25|(q|0)==24){r=c[g>>2]|0;if((r|0)!=(f|0)?(a[r-1|0]&95|0)!=(a[e]&127|0):0){o=-1;return o|0}c[g>>2]=r+1;a[r]=n;o=0;return o|0}else{r=a[e]|0;if((n&95|0)==(r<<24>>24|0)?(a[e]=r|-128,(a[d]|0)!=0):0){a[d]=0;d=a[j]|0;if((d&1)==0){s=(d&255)>>>1}else{s=c[j+4>>2]|0}if((s|0)!=0?(s=c[l>>2]|0,(s-k|0)<160):0){k=c[m>>2]|0;c[l>>2]=s+4;c[s>>2]=k}}k=c[g>>2]|0;c[g>>2]=k+1;a[k]=n;if((q|0)>21){o=0;return o|0}c[m>>2]=(c[m>>2]|0)+1;o=0;return o|0}return 0}function Zm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+40|0;g=f|0;h=f+16|0;j=f+32|0;dl(j,b);b=j|0;j=c[b>>2]|0;if(!((c[6534]|0)==-1)){c[h>>2]=26136;c[h+4>>2]=30;c[h+8>>2]=0;Ck(26136,h,160)}h=(c[6535]|0)-1|0;k=c[j+8>>2]|0;if((c[j+12>>2]|0)-k>>2>>>0>h>>>0?(j=c[k+(h<<2)>>2]|0,(j|0)!=0):0){Md[c[(c[j>>2]|0)+48>>2]&15](j,20776,20802,d)|0;d=c[b>>2]|0;if(!((c[6438]|0)==-1)){c[g>>2]=25752;c[g+4>>2]=30;c[g+8>>2]=0;Ck(25752,g,160)}g=(c[6439]|0)-1|0;j=c[d+8>>2]|0;if((c[d+12>>2]|0)-j>>2>>>0>g>>>0?(d=c[j+(g<<2)>>2]|0,(d|0)!=0):0){g=d;c[e>>2]=Ed[c[(c[d>>2]|0)+16>>2]&255](g)|0;Ad[c[(c[d>>2]|0)+20>>2]&127](a,g);fk(c[b>>2]|0)|0;i=f;return}f=dd(4)|0;ht(f);ac(f|0,18472,230)}f=dd(4)|0;ht(f);ac(f|0,18472,230)}function _m(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+40|0;h=g|0;j=g+16|0;k=g+32|0;dl(k,b);b=k|0;k=c[b>>2]|0;if(!((c[6534]|0)==-1)){c[j>>2]=26136;c[j+4>>2]=30;c[j+8>>2]=0;Ck(26136,j,160)}j=(c[6535]|0)-1|0;l=c[k+8>>2]|0;if((c[k+12>>2]|0)-l>>2>>>0>j>>>0?(k=c[l+(j<<2)>>2]|0,(k|0)!=0):0){Md[c[(c[k>>2]|0)+48>>2]&15](k,20776,20808,d)|0;d=c[b>>2]|0;if(!((c[6438]|0)==-1)){c[h>>2]=25752;c[h+4>>2]=30;c[h+8>>2]=0;Ck(25752,h,160)}h=(c[6439]|0)-1|0;k=c[d+8>>2]|0;if((c[d+12>>2]|0)-k>>2>>>0>h>>>0?(d=c[k+(h<<2)>>2]|0,(d|0)!=0):0){h=d;k=d;c[e>>2]=Ed[c[(c[k>>2]|0)+12>>2]&255](h)|0;c[f>>2]=Ed[c[(c[k>>2]|0)+16>>2]&255](h)|0;Ad[c[(c[d>>2]|0)+20>>2]&127](a,h);fk(c[b>>2]|0)|0;i=g;return}g=dd(4)|0;ht(g);ac(g|0,18472,230)}g=dd(4)|0;ht(g);ac(g|0,18472,230)}function $m(b,d,e,f,g,h,i,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0;if((b|0)==(h|0)){if((a[d]|0)==0){o=-1;return o|0}a[d]=0;h=c[g>>2]|0;c[g>>2]=h+1;a[h]=46;h=a[j]|0;if((h&1)==0){p=(h&255)>>>1}else{p=c[j+4>>2]|0}if((p|0)==0){o=0;return o|0}p=c[l>>2]|0;if((p-k|0)>=160){o=0;return o|0}h=c[m>>2]|0;c[l>>2]=p+4;c[p>>2]=h;o=0;return o|0}if((b|0)==(i|0)){i=a[j]|0;if((i&1)==0){q=(i&255)>>>1}else{q=c[j+4>>2]|0}if((q|0)!=0){if((a[d]|0)==0){o=-1;return o|0}q=c[l>>2]|0;if((q-k|0)>=160){o=0;return o|0}i=c[m>>2]|0;c[l>>2]=q+4;c[q>>2]=i;c[m>>2]=0;o=0;return o|0}}i=n+128|0;q=n;while(1){h=q+4|0;if((c[q>>2]|0)==(b|0)){r=q;break}if((h|0)==(i|0)){r=i;break}else{q=h}}q=r-n|0;n=q>>2;if((q|0)>124){o=-1;return o|0}r=a[20776+n|0]|0;if((n|0)==25|(n|0)==24){i=c[g>>2]|0;if((i|0)!=(f|0)?(a[i-1|0]&95|0)!=(a[e]&127|0):0){o=-1;return o|0}c[g>>2]=i+1;a[i]=r;o=0;return o|0}else if(!((n|0)==22|(n|0)==23)){n=a[e]|0;if((r&95|0)==(n<<24>>24|0)?(a[e]=n|-128,(a[d]|0)!=0):0){a[d]=0;d=a[j]|0;if((d&1)==0){s=(d&255)>>>1}else{s=c[j+4>>2]|0}if((s|0)!=0?(s=c[l>>2]|0,(s-k|0)<160):0){k=c[m>>2]|0;c[l>>2]=s+4;c[s>>2]=k}}}else{a[e]=80}e=c[g>>2]|0;c[g>>2]=e+1;a[e]=r;if((q|0)>84){o=0;return o|0}c[m>>2]=(c[m>>2]|0)+1;o=0;return o|0}function an(a){a=a|0;dk(a|0);Nt(a);return}function bn(a){a=a|0;dk(a|0);return}function cn(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;j=i;i=i+48|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+16|0;m=j+24|0;n=j+32|0;if((c[f+4>>2]&1|0)==0){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];Ld[o&63](b,d,l,f,g,h&1);i=j;return}dl(m,f);f=m|0;m=c[f>>2]|0;if(!((c[6440]|0)==-1)){c[k>>2]=25760;c[k+4>>2]=30;c[k+8>>2]=0;Ck(25760,k,160)}k=(c[6441]|0)-1|0;g=c[m+8>>2]|0;if((c[m+12>>2]|0)-g>>2>>>0>k>>>0?(m=c[g+(k<<2)>>2]|0,(m|0)!=0):0){k=m;fk(c[f>>2]|0)|0;f=c[m>>2]|0;if(h){Ad[c[f+24>>2]&127](n,k)}else{Ad[c[f+28>>2]&127](n,k)}k=n;f=a[k]|0;if((f&1)==0){h=n+1|0;p=h;q=h;r=n+8|0}else{h=n+8|0;p=c[h>>2]|0;q=n+1|0;r=h}h=e|0;e=n+4|0;m=p;p=f;while(1){if((p&1)==0){s=(p&255)>>>1;t=q}else{s=c[e>>2]|0;t=c[r>>2]|0}if((m|0)==(t+s|0)){break}f=a[m]|0;g=c[h>>2]|0;do{if((g|0)!=0){l=g+24|0;d=c[l>>2]|0;if((d|0)!=(c[g+28>>2]|0)){c[l>>2]=d+1;a[d]=f;break}if((Bd[c[(c[g>>2]|0)+52>>2]&127](g,f&255)|0)==-1){c[h>>2]=0}}}while(0);m=m+1|0;p=a[k]|0}c[b>>2]=c[h>>2];Ik(n);i=j;return}j=dd(4)|0;ht(j);ac(j|0,18472,230)}function dn(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+80|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+72|0;q=j|0;a[q]=a[5544]|0;a[q+1|0]=a[5545]|0;a[q+2|0]=a[5546]|0;a[q+3|0]=a[5547]|0;a[q+4|0]=a[5548]|0;a[q+5|0]=a[5549]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=100}}while(0);u=k|0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}v=rs(u,12,c[6072]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+v|0;h=c[s>>2]&176;do{if((h|0)==32){w=q}else if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if((v|0)>1&s<<24>>24==48?(s=a[k+1|0]|0,(s<<24>>24|0)==120|(s<<24>>24|0)==88):0){w=k+2|0}else{x=22}}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;dl(o,f);en(u,w,q,x,m,n,o);fk(c[o>>2]|0)|0;c[p>>2]=c[e>>2];re(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function en(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;k=i;i=i+48|0;l=k|0;m=k+16|0;n=k+32|0;o=j|0;j=c[o>>2]|0;if(!((c[6536]|0)==-1)){c[m>>2]=26144;c[m+4>>2]=30;c[m+8>>2]=0;Ck(26144,m,160)}m=(c[6537]|0)-1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=dd(4)|0;r=q;ht(r);ac(q|0,18472,230)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=dd(4)|0;r=q;ht(r);ac(q|0,18472,230)}q=j;r=c[o>>2]|0;if(!((c[6440]|0)==-1)){c[l>>2]=25760;c[l+4>>2]=30;c[l+8>>2]=0;Ck(25760,l,160)}l=(c[6441]|0)-1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=dd(4)|0;t=s;ht(t);ac(s|0,18472,230)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=dd(4)|0;t=s;ht(t);ac(s|0,18472,230)}s=r;Ad[c[(c[r>>2]|0)+20>>2]&127](n,s);t=n;l=a[t]|0;if((l&1)==0){u=(l&255)>>>1}else{u=c[n+4>>2]|0}if((u|0)!=0){c[h>>2]=f;u=a[b]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){l=Bd[c[(c[j>>2]|0)+28>>2]&127](q,u)|0;u=c[h>>2]|0;c[h>>2]=u+1;a[u]=l;v=b+1|0}else{v=b}if(((e-v|0)>1?(a[v]|0)==48:0)?(l=v+1|0,u=a[l]|0,(u<<24>>24|0)==120|(u<<24>>24|0)==88):0){u=j;o=Bd[c[(c[u>>2]|0)+28>>2]&127](q,48)|0;m=c[h>>2]|0;c[h>>2]=m+1;a[m]=o;o=Bd[c[(c[u>>2]|0)+28>>2]&127](q,a[l]|0)|0;l=c[h>>2]|0;c[h>>2]=l+1;a[l]=o;w=v+2|0}else{w=v}if((w|0)!=(e|0)?(v=e-1|0,v>>>0>w>>>0):0){o=w;l=v;do{v=a[o]|0;a[o]=a[l]|0;a[l]=v;o=o+1|0;l=l-1|0}while(o>>>0<l>>>0)}l=Ed[c[(c[r>>2]|0)+16>>2]&255](s)|0;if(w>>>0<e>>>0){s=n+1|0;r=j;o=n+4|0;v=n+8|0;u=0;m=0;p=w;while(1){x=(a[t]&1)==0;if((a[(x?s:c[v>>2]|0)+m|0]|0)!=0?(u|0)==(a[(x?s:c[v>>2]|0)+m|0]|0):0){x=c[h>>2]|0;c[h>>2]=x+1;a[x]=l;x=a[t]|0;if((x&1)==0){y=(x&255)>>>1}else{y=c[o>>2]|0}z=(m>>>0<(y-1|0)>>>0)+m|0;A=0}else{z=m;A=u}x=Bd[c[(c[r>>2]|0)+28>>2]&127](q,a[p]|0)|0;B=c[h>>2]|0;c[h>>2]=B+1;a[B]=x;p=p+1|0;if(!(p>>>0<e>>>0)){break}else{u=A+1|0;m=z}}}z=f+(w-b)|0;w=c[h>>2]|0;if((z|0)!=(w|0)?(m=w-1|0,m>>>0>z>>>0):0){w=z;z=m;do{m=a[w]|0;a[w]=a[z]|0;a[z]=m;w=w+1|0;z=z-1|0}while(w>>>0<z>>>0)}}else{Md[c[(c[j>>2]|0)+32>>2]&15](q,b,e,f)|0;c[h>>2]=f+(e-b)}if((d|0)==(e|0)){C=c[h>>2]|0;c[g>>2]=C;Ik(n);i=k;return}else{C=f+(d-b)|0;c[g>>2]=C;Ik(n);i=k;return}}function fn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+112|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+80|0;o=d+88|0;p=d+96|0;q=d+104|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);u=l|0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}t=rs(u,22,c[6072]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+t|0;j=c[s>>2]&176;do{if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if((t|0)>1&s<<24>>24==48?(s=a[l+1|0]|0,(s<<24>>24|0)==120|(s<<24>>24|0)==88):0){w=l+2|0}else{x=22}}else if((j|0)==32){w=r}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;dl(p,f);en(u,w,r,x,n,o,p);fk(c[p>>2]|0)|0;c[q>>2]=c[e>>2];re(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function gn(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+80|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+72|0;q=j|0;a[q]=a[5544]|0;a[q+1|0]=a[5545]|0;a[q+2|0]=a[5546]|0;a[q+3|0]=a[5547]|0;a[q+4|0]=a[5548]|0;a[q+5|0]=a[5549]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=k|0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}t=rs(u,12,c[6072]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if((t|0)>1&s<<24>>24==48?(s=a[k+1|0]|0,(s<<24>>24|0)==120|(s<<24>>24|0)==88):0){w=k+2|0}else{x=22}}else if((h|0)==32){w=q}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;dl(o,f);en(u,w,q,x,m,n,o);fk(c[o>>2]|0)|0;c[p>>2]=c[e>>2];re(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function hn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+112|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+80|0;o=d+88|0;p=d+96|0;q=d+104|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=117}}while(0);u=l|0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}v=rs(u,23,c[6072]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+v|0;j=c[s>>2]&176;do{if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if((v|0)>1&s<<24>>24==48?(s=a[l+1|0]|0,(s<<24>>24|0)==120|(s<<24>>24|0)==88):0){w=l+2|0}else{x=22}}else if((j|0)==32){w=r}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;dl(p,f);en(u,w,r,x,n,o,p);fk(c[p>>2]|0)|0;c[q>>2]=c[e>>2];re(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function jn(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+152|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+112|0;p=d+120|0;q=d+128|0;r=d+136|0;s=d+144|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){if((k&1|0)==0){a[x]=97;y=0;break}else{a[x]=65;y=0;break}}else{a[x]=46;v=x+2|0;a[x+1|0]=42;if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}l=c[6072]|0;if(y){w=rs(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=rs(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}if((A|0)>29){w=(a[26952]|0)==0;if(y){if(w?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}y=ss(m,c[6072]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=y}else{if(w?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}w=ss(m,c[6072]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)==0){St();z=c[m>>2]|0;C=B;D=z;E=z}else{C=B;D=w;E=w}}else{C=A;D=0;E=c[m>>2]|0}A=E+C|0;w=c[u>>2]&176;do{if((w|0)==32){F=A}else if((w|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if((C|0)>1&u<<24>>24==48?(u=a[E+1|0]|0,(u<<24>>24|0)==120|(u<<24>>24|0)==88):0){F=E+2|0}else{G=53}}else{G=53}}while(0);if((G|0)==53){F=E}if((E|0)!=(k|0)){G=It(C<<1)|0;if((G|0)==0){St();H=0;I=0;J=c[m>>2]|0}else{H=G;I=G;J=E}}else{H=n|0;I=0;J=k}dl(q,f);kn(J,F,A,H,o,p,q);fk(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];re(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){Jt(I)}if((D|0)==0){i=d;return}Jt(D);i=d;return}function kn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;k=i;i=i+48|0;l=k|0;m=k+16|0;n=k+32|0;o=j|0;j=c[o>>2]|0;if(!((c[6536]|0)==-1)){c[m>>2]=26144;c[m+4>>2]=30;c[m+8>>2]=0;Ck(26144,m,160)}m=(c[6537]|0)-1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=dd(4)|0;r=q;ht(r);ac(q|0,18472,230)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=dd(4)|0;r=q;ht(r);ac(q|0,18472,230)}q=j;r=c[o>>2]|0;if(!((c[6440]|0)==-1)){c[l>>2]=25760;c[l+4>>2]=30;c[l+8>>2]=0;Ck(25760,l,160)}l=(c[6441]|0)-1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=dd(4)|0;t=s;ht(t);ac(s|0,18472,230)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=dd(4)|0;t=s;ht(t);ac(s|0,18472,230)}s=r;Ad[c[(c[r>>2]|0)+20>>2]&127](n,s);c[h>>2]=f;t=a[b]|0;if((t<<24>>24|0)==45|(t<<24>>24|0)==43){l=Bd[c[(c[j>>2]|0)+28>>2]&127](q,t)|0;t=c[h>>2]|0;c[h>>2]=t+1;a[t]=l;u=b+1|0}else{u=b}l=e;a:do{if(((l-u|0)>1?(a[u]|0)==48:0)?(t=u+1|0,o=a[t]|0,(o<<24>>24|0)==120|(o<<24>>24|0)==88):0){o=j;m=Bd[c[(c[o>>2]|0)+28>>2]&127](q,48)|0;p=c[h>>2]|0;c[h>>2]=p+1;a[p]=m;m=u+2|0;p=Bd[c[(c[o>>2]|0)+28>>2]&127](q,a[t]|0)|0;t=c[h>>2]|0;c[h>>2]=t+1;a[t]=p;if(m>>>0<e>>>0){p=m;while(1){t=a[p]|0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}o=p+1|0;if((Ya(t<<24>>24|0,c[6072]|0)|0)==0){v=m;w=p;break a}if(o>>>0<e>>>0){p=o}else{v=m;w=o;break}}}else{v=m;w=m}}else{x=21}}while(0);b:do{if((x|0)==21){if(u>>>0<e>>>0){p=u;while(1){o=a[p]|0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}t=p+1|0;if((md(o<<24>>24|0,c[6072]|0)|0)==0){v=u;w=p;break b}if(t>>>0<e>>>0){p=t}else{v=u;w=t;break}}}else{v=u;w=u}}}while(0);u=n;x=a[u]|0;if((x&1)==0){y=(x&255)>>>1}else{y=c[n+4>>2]|0}if((y|0)!=0){if((v|0)!=(w|0)?(y=w-1|0,y>>>0>v>>>0):0){x=v;p=y;do{y=a[x]|0;a[x]=a[p]|0;a[p]=y;x=x+1|0;p=p-1|0}while(x>>>0<p>>>0)}p=Ed[c[(c[r>>2]|0)+16>>2]&255](s)|0;if(v>>>0<w>>>0){x=n+1|0;y=n+4|0;m=n+8|0;t=j;o=0;z=0;A=v;while(1){B=(a[u]&1)==0;if((a[(B?x:c[m>>2]|0)+z|0]|0)>0?(o|0)==(a[(B?x:c[m>>2]|0)+z|0]|0):0){B=c[h>>2]|0;c[h>>2]=B+1;a[B]=p;B=a[u]|0;if((B&1)==0){C=(B&255)>>>1}else{C=c[y>>2]|0}D=(z>>>0<(C-1|0)>>>0)+z|0;E=0}else{D=z;E=o}B=Bd[c[(c[t>>2]|0)+28>>2]&127](q,a[A]|0)|0;F=c[h>>2]|0;c[h>>2]=F+1;a[F]=B;A=A+1|0;if(!(A>>>0<w>>>0)){break}else{o=E+1|0;z=D}}}D=f+(v-b)|0;z=c[h>>2]|0;if((D|0)!=(z|0)?(E=z-1|0,E>>>0>D>>>0):0){z=D;D=E;do{E=a[z]|0;a[z]=a[D]|0;a[D]=E;z=z+1|0;D=D-1|0}while(z>>>0<D>>>0)}}else{Md[c[(c[j>>2]|0)+32>>2]&15](q,v,w,c[h>>2]|0)|0;c[h>>2]=(c[h>>2]|0)+(w-v)}c:do{if(w>>>0<e>>>0){v=j;D=w;while(1){z=a[D]|0;if(z<<24>>24==46){break}E=Bd[c[(c[v>>2]|0)+28>>2]&127](q,z)|0;z=c[h>>2]|0;c[h>>2]=z+1;a[z]=E;E=D+1|0;if(E>>>0<e>>>0){D=E}else{G=E;break c}}v=Ed[c[(c[r>>2]|0)+12>>2]&255](s)|0;E=c[h>>2]|0;c[h>>2]=E+1;a[E]=v;G=D+1|0}else{G=w}}while(0);Md[c[(c[j>>2]|0)+32>>2]&15](q,G,e,c[h>>2]|0)|0;q=(c[h>>2]|0)+(l-G)|0;c[h>>2]=q;if((d|0)==(e|0)){H=q;c[g>>2]=H;Ik(n);i=k;return}H=f+(d-b)|0;c[g>>2]=H;Ik(n);i=k;return}function ln(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+152|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+112|0;p=d+120|0;q=d+128|0;r=d+136|0;s=d+144|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){a[x]=76;v=x+1|0;if((k&1|0)==0){a[v]=97;y=0;break}else{a[v]=65;y=0;break}}else{a[x]=46;a[x+1|0]=42;a[x+2|0]=76;v=x+3|0;if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}l=c[6072]|0;if(y){w=rs(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=rs(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}if((A|0)>29){w=(a[26952]|0)==0;if(y){if(w?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}y=ss(m,c[6072]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=y}else{if(w?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}w=ss(m,c[6072]|0,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)==0){St();z=c[m>>2]|0;C=B;D=z;E=z}else{C=B;D=w;E=w}}else{C=A;D=0;E=c[m>>2]|0}A=E+C|0;w=c[u>>2]&176;do{if((w|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if((C|0)>1&u<<24>>24==48?(u=a[E+1|0]|0,(u<<24>>24|0)==120|(u<<24>>24|0)==88):0){F=E+2|0}else{G=53}}else if((w|0)==32){F=A}else{G=53}}while(0);if((G|0)==53){F=E}if((E|0)!=(k|0)){G=It(C<<1)|0;if((G|0)==0){St();H=0;I=0;J=c[m>>2]|0}else{H=G;I=G;J=E}}else{H=n|0;I=0;J=k}dl(q,f);kn(J,F,A,H,o,p,q);fk(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];re(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){Jt(I)}if((D|0)==0){i=d;return}Jt(D);i=d;return}function mn(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;d=i;i=i+104|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+24|0;l=d+48|0;m=d+88|0;n=d+96|0;o=d+16|0;a[o]=a[5552]|0;a[o+1|0]=a[5553]|0;a[o+2|0]=a[5554]|0;a[o+3|0]=a[5555]|0;a[o+4|0]=a[5556]|0;a[o+5|0]=a[5557]|0;p=k|0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}q=rs(p,20,c[6072]|0,o,(o=i,i=i+8|0,c[o>>2]=h,o)|0)|0;i=o;o=k+q|0;h=c[f+4>>2]&176;do{if((h|0)==32){r=o}else if((h|0)==16){s=a[p]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){r=k+1|0;break}if((q|0)>1&s<<24>>24==48?(s=a[k+1|0]|0,(s<<24>>24|0)==120|(s<<24>>24|0)==88):0){r=k+2|0}else{t=12}}else{t=12}}while(0);if((t|0)==12){r=p}t=l|0;dl(m,f);h=m|0;m=c[h>>2]|0;if(!((c[6536]|0)==-1)){c[j>>2]=26144;c[j+4>>2]=30;c[j+8>>2]=0;Ck(26144,j,160)}j=(c[6537]|0)-1|0;s=c[m+8>>2]|0;if((c[m+12>>2]|0)-s>>2>>>0>j>>>0?(m=c[s+(j<<2)>>2]|0,(m|0)!=0):0){fk(c[h>>2]|0)|0;Md[c[(c[m>>2]|0)+32>>2]&15](m,p,o,t)|0;p=l+q|0;if((r|0)==(o|0)){u=p;v=e|0;w=c[v>>2]|0;x=n|0;c[x>>2]=w;re(b,n,t,u,p,f,g);y=37;z=0;i=d;return}u=l+(r-k)|0;v=e|0;w=c[v>>2]|0;x=n|0;c[x>>2]=w;re(b,n,t,u,p,f,g);y=37;z=0;i=d;return}d=dd(4)|0;ht(d);ac(d|0,18472,230)}function nn(a){a=a|0;dk(a|0);Nt(a);return}function on(a){a=a|0;dk(a|0);return}function pn(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+48|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+16|0;m=j+24|0;n=j+32|0;if((c[f+4>>2]&1|0)==0){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];Ld[o&63](b,d,l,f,g,h&1);i=j;return}dl(m,f);f=m|0;m=c[f>>2]|0;if(!((c[6438]|0)==-1)){c[k>>2]=25752;c[k+4>>2]=30;c[k+8>>2]=0;Ck(25752,k,160)}k=(c[6439]|0)-1|0;g=c[m+8>>2]|0;if((c[m+12>>2]|0)-g>>2>>>0>k>>>0?(m=c[g+(k<<2)>>2]|0,(m|0)!=0):0){k=m;fk(c[f>>2]|0)|0;f=c[m>>2]|0;if(h){Ad[c[f+24>>2]&127](n,k)}else{Ad[c[f+28>>2]&127](n,k)}k=n;f=a[k]|0;if((f&1)==0){h=n+4|0;p=h;q=h;r=n+8|0}else{h=n+8|0;p=c[h>>2]|0;q=n+4|0;r=h}h=e|0;e=p;p=f;while(1){if((p&1)==0){s=(p&255)>>>1;t=q}else{s=c[q>>2]|0;t=c[r>>2]|0}if((e|0)==(t+(s<<2)|0)){break}f=c[e>>2]|0;m=c[h>>2]|0;if((m|0)!=0){g=m+24|0;l=c[g>>2]|0;if((l|0)==(c[m+28>>2]|0)){u=Bd[c[(c[m>>2]|0)+52>>2]&127](m,f)|0}else{c[g>>2]=l+4;c[l>>2]=f;u=f}if((u|0)==-1){c[h>>2]=0}}e=e+4|0;p=a[k]|0}c[b>>2]=c[h>>2];Vk(n);i=j;return}j=dd(4)|0;ht(j);ac(j|0,18472,230)}function qn(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+144|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+112|0;n=d+120|0;o=d+128|0;p=d+136|0;q=j|0;a[q]=a[5544]|0;a[q+1|0]=a[5545]|0;a[q+2|0]=a[5546]|0;a[q+3|0]=a[5547]|0;a[q+4|0]=a[5548]|0;a[q+5|0]=a[5549]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);u=k|0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}t=rs(u,12,c[6072]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==32){w=q}else if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if((t|0)>1&s<<24>>24==48?(s=a[k+1|0]|0,(s<<24>>24|0)==120|(s<<24>>24|0)==88):0){w=k+2|0}else{x=22}}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;dl(o,f);rn(u,w,q,x,m,n,o);fk(c[o>>2]|0)|0;c[p>>2]=c[e>>2];ts(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function rn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;k=i;i=i+48|0;l=k|0;m=k+16|0;n=k+32|0;o=j|0;j=c[o>>2]|0;if(!((c[6534]|0)==-1)){c[m>>2]=26136;c[m+4>>2]=30;c[m+8>>2]=0;Ck(26136,m,160)}m=(c[6535]|0)-1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=dd(4)|0;r=q;ht(r);ac(q|0,18472,230)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=dd(4)|0;r=q;ht(r);ac(q|0,18472,230)}q=j;r=c[o>>2]|0;if(!((c[6438]|0)==-1)){c[l>>2]=25752;c[l+4>>2]=30;c[l+8>>2]=0;Ck(25752,l,160)}l=(c[6439]|0)-1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=dd(4)|0;t=s;ht(t);ac(s|0,18472,230)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=dd(4)|0;t=s;ht(t);ac(s|0,18472,230)}s=r;Ad[c[(c[r>>2]|0)+20>>2]&127](n,s);t=n;l=a[t]|0;if((l&1)==0){u=(l&255)>>>1}else{u=c[n+4>>2]|0}if((u|0)!=0){c[h>>2]=f;u=a[b]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){l=Bd[c[(c[j>>2]|0)+44>>2]&127](q,u)|0;u=c[h>>2]|0;c[h>>2]=u+4;c[u>>2]=l;v=b+1|0}else{v=b}if(((e-v|0)>1?(a[v]|0)==48:0)?(l=v+1|0,u=a[l]|0,(u<<24>>24|0)==120|(u<<24>>24|0)==88):0){u=j;o=Bd[c[(c[u>>2]|0)+44>>2]&127](q,48)|0;m=c[h>>2]|0;c[h>>2]=m+4;c[m>>2]=o;o=Bd[c[(c[u>>2]|0)+44>>2]&127](q,a[l]|0)|0;l=c[h>>2]|0;c[h>>2]=l+4;c[l>>2]=o;w=v+2|0}else{w=v}if((w|0)!=(e|0)?(v=e-1|0,v>>>0>w>>>0):0){o=w;l=v;do{v=a[o]|0;a[o]=a[l]|0;a[l]=v;o=o+1|0;l=l-1|0}while(o>>>0<l>>>0)}l=Ed[c[(c[r>>2]|0)+16>>2]&255](s)|0;if(w>>>0<e>>>0){s=n+1|0;r=j;o=n+4|0;v=n+8|0;u=0;m=0;p=w;while(1){x=(a[t]&1)==0;if((a[(x?s:c[v>>2]|0)+m|0]|0)!=0?(u|0)==(a[(x?s:c[v>>2]|0)+m|0]|0):0){x=c[h>>2]|0;c[h>>2]=x+4;c[x>>2]=l;x=a[t]|0;if((x&1)==0){y=(x&255)>>>1}else{y=c[o>>2]|0}z=(m>>>0<(y-1|0)>>>0)+m|0;A=0}else{z=m;A=u}x=Bd[c[(c[r>>2]|0)+44>>2]&127](q,a[p]|0)|0;B=c[h>>2]|0;C=B+4|0;c[h>>2]=C;c[B>>2]=x;x=p+1|0;if(x>>>0<e>>>0){u=A+1|0;m=z;p=x}else{D=C;break}}}else{D=c[h>>2]|0}p=f+(w-b<<2)|0;if((p|0)!=(D|0)?(w=D-4|0,w>>>0>p>>>0):0){z=p;p=w;while(1){w=c[z>>2]|0;c[z>>2]=c[p>>2];c[p>>2]=w;w=z+4|0;m=p-4|0;if(w>>>0<m>>>0){z=w;p=m}else{E=D;break}}}else{E=D}}else{Md[c[(c[j>>2]|0)+48>>2]&15](q,b,e,f)|0;q=f+(e-b<<2)|0;c[h>>2]=q;E=q}if((d|0)==(e|0)){F=E;c[g>>2]=F;Ik(n);i=k;return}F=f+(d-b<<2)|0;c[g>>2]=F;Ik(n);i=k;return}function sn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+232|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+200|0;o=d+208|0;p=d+216|0;q=d+224|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=100}}while(0);u=l|0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}v=rs(u,22,c[6072]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+v|0;j=c[s>>2]&176;do{if((j|0)==32){w=r}else if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if((v|0)>1&s<<24>>24==48?(s=a[l+1|0]|0,(s<<24>>24|0)==120|(s<<24>>24|0)==88):0){w=l+2|0}else{x=22}}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;dl(p,f);rn(u,w,r,x,n,o,p);fk(c[p>>2]|0)|0;c[q>>2]=c[e>>2];ts(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function tn(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+144|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+112|0;n=d+120|0;o=d+128|0;p=d+136|0;q=j|0;a[q]=a[5544]|0;a[q+1|0]=a[5545]|0;a[q+2|0]=a[5546]|0;a[q+3|0]=a[5547]|0;a[q+4|0]=a[5548]|0;a[q+5|0]=a[5549]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=k|0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}t=rs(u,12,c[6072]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==32){w=q}else if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if((t|0)>1&s<<24>>24==48?(s=a[k+1|0]|0,(s<<24>>24|0)==120|(s<<24>>24|0)==88):0){w=k+2|0}else{x=22}}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;dl(o,f);rn(u,w,q,x,m,n,o);fk(c[o>>2]|0)|0;c[p>>2]=c[e>>2];ts(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function un(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+240|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+208|0;o=d+216|0;p=d+224|0;q=d+232|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=l|0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}t=rs(u,23,c[6072]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+t|0;j=c[s>>2]&176;do{if((j|0)==32){w=r}else if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if((t|0)>1&s<<24>>24==48?(s=a[l+1|0]|0,(s<<24>>24|0)==120|(s<<24>>24|0)==88):0){w=l+2|0}else{x=22}}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;dl(p,f);rn(u,w,r,x,n,o,p);fk(c[p>>2]|0)|0;c[q>>2]=c[e>>2];ts(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function vn(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+320|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+280|0;p=d+288|0;q=d+296|0;r=d+304|0;s=d+312|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){if((k&1|0)==0){a[x]=97;y=0;break}else{a[x]=65;y=0;break}}else{a[x]=46;v=x+2|0;a[x+1|0]=42;if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}l=c[6072]|0;if(y){w=rs(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=rs(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}if((A|0)>29){w=(a[26952]|0)==0;if(y){if(w?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}y=ss(m,c[6072]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=y}else{if(w?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}w=ss(m,c[6072]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)==0){St();z=c[m>>2]|0;C=B;D=z;E=z}else{C=B;D=w;E=w}}else{C=A;D=0;E=c[m>>2]|0}A=E+C|0;w=c[u>>2]&176;do{if((w|0)==32){F=A}else if((w|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if((C|0)>1&u<<24>>24==48?(u=a[E+1|0]|0,(u<<24>>24|0)==120|(u<<24>>24|0)==88):0){F=E+2|0}else{G=53}}else{G=53}}while(0);if((G|0)==53){F=E}if((E|0)!=(k|0)){G=It(C<<3)|0;C=G;if((G|0)==0){St();H=C;I=C;J=c[m>>2]|0}else{H=C;I=C;J=E}}else{H=n|0;I=0;J=k}dl(q,f);wn(J,F,A,H,o,p,q);fk(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];ts(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){Jt(I)}if((D|0)==0){i=d;return}Jt(D);i=d;return}function wn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;k=i;i=i+48|0;l=k|0;m=k+16|0;n=k+32|0;o=j|0;j=c[o>>2]|0;if(!((c[6534]|0)==-1)){c[m>>2]=26136;c[m+4>>2]=30;c[m+8>>2]=0;Ck(26136,m,160)}m=(c[6535]|0)-1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=dd(4)|0;r=q;ht(r);ac(q|0,18472,230)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=dd(4)|0;r=q;ht(r);ac(q|0,18472,230)}q=j;r=c[o>>2]|0;if(!((c[6438]|0)==-1)){c[l>>2]=25752;c[l+4>>2]=30;c[l+8>>2]=0;Ck(25752,l,160)}l=(c[6439]|0)-1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=dd(4)|0;t=s;ht(t);ac(s|0,18472,230)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=dd(4)|0;t=s;ht(t);ac(s|0,18472,230)}s=r;Ad[c[(c[r>>2]|0)+20>>2]&127](n,s);c[h>>2]=f;t=a[b]|0;if((t<<24>>24|0)==45|(t<<24>>24|0)==43){l=Bd[c[(c[j>>2]|0)+44>>2]&127](q,t)|0;t=c[h>>2]|0;c[h>>2]=t+4;c[t>>2]=l;u=b+1|0}else{u=b}l=e;a:do{if(((l-u|0)>1?(a[u]|0)==48:0)?(t=u+1|0,o=a[t]|0,(o<<24>>24|0)==120|(o<<24>>24|0)==88):0){o=j;m=Bd[c[(c[o>>2]|0)+44>>2]&127](q,48)|0;p=c[h>>2]|0;c[h>>2]=p+4;c[p>>2]=m;m=u+2|0;p=Bd[c[(c[o>>2]|0)+44>>2]&127](q,a[t]|0)|0;t=c[h>>2]|0;c[h>>2]=t+4;c[t>>2]=p;if(m>>>0<e>>>0){p=m;while(1){t=a[p]|0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}o=p+1|0;if((Ya(t<<24>>24|0,c[6072]|0)|0)==0){v=m;w=p;break a}if(o>>>0<e>>>0){p=o}else{v=m;w=o;break}}}else{v=m;w=m}}else{x=21}}while(0);b:do{if((x|0)==21){if(u>>>0<e>>>0){p=u;while(1){o=a[p]|0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}t=p+1|0;if((md(o<<24>>24|0,c[6072]|0)|0)==0){v=u;w=p;break b}if(t>>>0<e>>>0){p=t}else{v=u;w=t;break}}}else{v=u;w=u}}}while(0);u=n;x=a[u]|0;if((x&1)==0){y=(x&255)>>>1}else{y=c[n+4>>2]|0}if((y|0)!=0){if((v|0)!=(w|0)?(y=w-1|0,y>>>0>v>>>0):0){x=v;p=y;do{y=a[x]|0;a[x]=a[p]|0;a[p]=y;x=x+1|0;p=p-1|0}while(x>>>0<p>>>0)}p=Ed[c[(c[r>>2]|0)+16>>2]&255](s)|0;if(v>>>0<w>>>0){x=n+1|0;y=n+4|0;m=n+8|0;t=j;o=0;z=0;A=v;while(1){B=(a[u]&1)==0;if((a[(B?x:c[m>>2]|0)+z|0]|0)>0?(o|0)==(a[(B?x:c[m>>2]|0)+z|0]|0):0){B=c[h>>2]|0;c[h>>2]=B+4;c[B>>2]=p;B=a[u]|0;if((B&1)==0){C=(B&255)>>>1}else{C=c[y>>2]|0}D=(z>>>0<(C-1|0)>>>0)+z|0;E=0}else{D=z;E=o}B=Bd[c[(c[t>>2]|0)+44>>2]&127](q,a[A]|0)|0;F=c[h>>2]|0;G=F+4|0;c[h>>2]=G;c[F>>2]=B;B=A+1|0;if(B>>>0<w>>>0){o=E+1|0;z=D;A=B}else{H=G;break}}}else{H=c[h>>2]|0}A=f+(v-b<<2)|0;if((A|0)!=(H|0)?(D=H-4|0,D>>>0>A>>>0):0){z=A;A=D;while(1){D=c[z>>2]|0;c[z>>2]=c[A>>2];c[A>>2]=D;D=z+4|0;E=A-4|0;if(D>>>0<E>>>0){z=D;A=E}else{I=H;break}}}else{I=H}}else{Md[c[(c[j>>2]|0)+48>>2]&15](q,v,w,c[h>>2]|0)|0;H=(c[h>>2]|0)+(w-v<<2)|0;c[h>>2]=H;I=H}c:do{if(w>>>0<e>>>0){H=j;v=w;while(1){A=a[v]|0;if(A<<24>>24==46){break}z=Bd[c[(c[H>>2]|0)+44>>2]&127](q,A)|0;A=c[h>>2]|0;E=A+4|0;c[h>>2]=E;c[A>>2]=z;z=v+1|0;if(z>>>0<e>>>0){v=z}else{J=z;K=E;break c}}H=Ed[c[(c[r>>2]|0)+12>>2]&255](s)|0;E=c[h>>2]|0;z=E+4|0;c[h>>2]=z;c[E>>2]=H;J=v+1|0;K=z}else{J=w;K=I}}while(0);Md[c[(c[j>>2]|0)+48>>2]&15](q,J,e,K)|0;K=(c[h>>2]|0)+(l-J<<2)|0;c[h>>2]=K;if((d|0)==(e|0)){L=K;c[g>>2]=L;Ik(n);i=k;return}L=f+(d-b<<2)|0;c[g>>2]=L;Ik(n);i=k;return}function xn(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+320|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+280|0;p=d+288|0;q=d+296|0;r=d+304|0;s=d+312|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){a[x]=76;v=x+1|0;if((k&1|0)==0){a[v]=97;y=0;break}else{a[v]=65;y=0;break}}else{a[x]=46;a[x+1|0]=42;a[x+2|0]=76;v=x+3|0;if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}l=c[6072]|0;if(y){w=rs(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=rs(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}if((A|0)>29){w=(a[26952]|0)==0;if(y){if(w?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}y=ss(m,c[6072]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=y}else{if(w?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}w=ss(m,c[6072]|0,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)==0){St();z=c[m>>2]|0;C=B;D=z;E=z}else{C=B;D=w;E=w}}else{C=A;D=0;E=c[m>>2]|0}A=E+C|0;w=c[u>>2]&176;do{if((w|0)==32){F=A}else if((w|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if((C|0)>1&u<<24>>24==48?(u=a[E+1|0]|0,(u<<24>>24|0)==120|(u<<24>>24|0)==88):0){F=E+2|0}else{G=53}}else{G=53}}while(0);if((G|0)==53){F=E}if((E|0)!=(k|0)){G=It(C<<3)|0;C=G;if((G|0)==0){St();H=C;I=C;J=c[m>>2]|0}else{H=C;I=C;J=E}}else{H=n|0;I=0;J=k}dl(q,f);wn(J,F,A,H,o,p,q);fk(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];ts(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){Jt(I)}if((D|0)==0){i=d;return}Jt(D);i=d;return}function yn(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;d=i;i=i+216|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+24|0;l=d+48|0;m=d+200|0;n=d+208|0;o=d+16|0;a[o]=a[5552]|0;a[o+1|0]=a[5553]|0;a[o+2|0]=a[5554]|0;a[o+3|0]=a[5555]|0;a[o+4|0]=a[5556]|0;a[o+5|0]=a[5557]|0;p=k|0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}q=rs(p,20,c[6072]|0,o,(o=i,i=i+8|0,c[o>>2]=h,o)|0)|0;i=o;o=k+q|0;h=c[f+4>>2]&176;do{if((h|0)==16){r=a[p]|0;if((r<<24>>24|0)==45|(r<<24>>24|0)==43){s=k+1|0;break}if((q|0)>1&r<<24>>24==48?(r=a[k+1|0]|0,(r<<24>>24|0)==120|(r<<24>>24|0)==88):0){s=k+2|0}else{t=12}}else if((h|0)==32){s=o}else{t=12}}while(0);if((t|0)==12){s=p}dl(m,f);t=m|0;m=c[t>>2]|0;if(!((c[6534]|0)==-1)){c[j>>2]=26136;c[j+4>>2]=30;c[j+8>>2]=0;Ck(26136,j,160)}j=(c[6535]|0)-1|0;h=c[m+8>>2]|0;if((c[m+12>>2]|0)-h>>2>>>0>j>>>0?(m=c[h+(j<<2)>>2]|0,(m|0)!=0):0){fk(c[t>>2]|0)|0;t=l|0;Md[c[(c[m>>2]|0)+48>>2]&15](m,p,o,t)|0;p=l+(q<<2)|0;if((s|0)==(o|0)){u=p;v=e|0;w=c[v>>2]|0;x=n|0;c[x>>2]=w;ts(b,n,t,u,p,f,g);y=148;z=0;i=d;return}u=l+(s-k<<2)|0;v=e|0;w=c[v>>2]|0;x=n|0;c[x>>2]=w;ts(b,n,t,u,p,f,g);y=148;z=0;i=d;return}d=dd(4)|0;ht(d);ac(d|0,18472,230)}function zn(d,e,f,g,h,j,k,l,m){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0;n=i;i=i+48|0;o=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[o>>2];o=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[o>>2];o=n|0;p=n+16|0;q=n+24|0;r=n+32|0;s=n+40|0;dl(p,h);t=p|0;p=c[t>>2]|0;if(!((c[6536]|0)==-1)){c[o>>2]=26144;c[o+4>>2]=30;c[o+8>>2]=0;Ck(26144,o,160)}o=(c[6537]|0)-1|0;u=c[p+8>>2]|0;if((c[p+12>>2]|0)-u>>2>>>0>o>>>0?(p=c[u+(o<<2)>>2]|0,(p|0)!=0):0){o=p;fk(c[t>>2]|0)|0;c[j>>2]=0;t=f|0;a:do{if((l|0)!=(m|0)){u=g|0;v=p;w=p+8|0;x=p;y=e;z=r|0;A=s|0;B=q|0;C=l;D=0;b:while(1){E=D;while(1){if((E|0)!=0){F=67;break a}G=c[t>>2]|0;if((G|0)!=0){if((c[G+12>>2]|0)==(c[G+16>>2]|0)?(Ed[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1:0){c[t>>2]=0;H=0}else{H=G}}else{H=0}G=(H|0)==0;I=c[u>>2]|0;do{if((I|0)!=0){if((c[I+12>>2]|0)==(c[I+16>>2]|0)?(Ed[c[(c[I>>2]|0)+36>>2]&255](I)|0)==-1:0){c[u>>2]=0;F=20;break}if(G){J=I}else{F=21;break b}}else{F=20}}while(0);if((F|0)==20){F=0;if(G){F=21;break b}else{J=0}}if((Cd[c[(c[v>>2]|0)+36>>2]&63](o,a[C]|0,0)|0)<<24>>24==37){F=24;break}I=a[C]|0;if(I<<24>>24>-1?(K=c[w>>2]|0,!((b[K+(I<<24>>24<<1)>>1]&8192)==0)):0){L=C;F=35;break}M=H+12|0;I=c[M>>2]|0;N=H+16|0;if((I|0)==(c[N>>2]|0)){O=(Ed[c[(c[H>>2]|0)+36>>2]&255](H)|0)&255}else{O=a[I]|0}I=Bd[c[(c[x>>2]|0)+12>>2]&127](o,O)|0;if(I<<24>>24==(Bd[c[(c[x>>2]|0)+12>>2]&127](o,a[C]|0)|0)<<24>>24){F=62;break}c[j>>2]=4;E=4}c:do{if((F|0)==24){F=0;E=C+1|0;if((E|0)==(m|0)){F=25;break b}I=Cd[c[(c[v>>2]|0)+36>>2]&63](o,a[E]|0,0)|0;if((I<<24>>24|0)==69|(I<<24>>24|0)==48){P=C+2|0;if((P|0)==(m|0)){F=28;break b}Q=I;R=Cd[c[(c[v>>2]|0)+36>>2]&63](o,a[P]|0,0)|0;S=P}else{Q=0;R=I;S=E}E=c[(c[y>>2]|0)+36>>2]|0;c[z>>2]=H;c[A>>2]=J;Jd[E&7](q,e,r,s,h,j,k,R,Q);c[t>>2]=c[B>>2];T=S+1|0}else if((F|0)==35){while(1){F=0;E=L+1|0;if((E|0)==(m|0)){U=m;break}I=a[E]|0;if(!(I<<24>>24>-1)){U=E;break}if((b[K+(I<<24>>24<<1)>>1]&8192)==0){U=E;break}else{L=E;F=35}}G=H;E=J;I=J;while(1){if((G|0)!=0){if((c[G+12>>2]|0)==(c[G+16>>2]|0)?(Ed[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1:0){c[t>>2]=0;V=0}else{V=G}}else{V=0}P=(V|0)==0;do{if((E|0)!=0){if((c[E+12>>2]|0)!=(c[E+16>>2]|0)){if(P){W=E;X=I;break}else{T=U;break c}}if(!((Ed[c[(c[E>>2]|0)+36>>2]&255](E)|0)==-1)){if(P^(I|0)==0){W=I;X=I;break}else{T=U;break c}}else{c[u>>2]=0;Y=0;F=48;break}}else{Y=I;F=48}}while(0);if((F|0)==48){F=0;if(P){T=U;break c}else{W=0;X=Y}}Z=V+12|0;_=c[Z>>2]|0;$=V+16|0;if((_|0)==(c[$>>2]|0)){aa=(Ed[c[(c[V>>2]|0)+36>>2]&255](V)|0)&255}else{aa=a[_]|0}if(!(aa<<24>>24>-1)){T=U;break c}if((b[(c[w>>2]|0)+(aa<<24>>24<<1)>>1]&8192)==0){T=U;break c}_=c[Z>>2]|0;if((_|0)==(c[$>>2]|0)){Ed[c[(c[V>>2]|0)+40>>2]&255](V)|0;G=V;E=W;I=X;continue}else{c[Z>>2]=_+1;G=V;E=W;I=X;continue}}}else if((F|0)==62){F=0;I=c[M>>2]|0;if((I|0)==(c[N>>2]|0)){Ed[c[(c[H>>2]|0)+40>>2]&255](H)|0}else{c[M>>2]=I+1}T=C+1|0}}while(0);if((T|0)==(m|0)){F=67;break a}C=T;D=c[j>>2]|0}if((F|0)==21){c[j>>2]=4;ba=H;break}else if((F|0)==25){c[j>>2]=4;ba=H;break}else if((F|0)==28){c[j>>2]=4;ba=H;break}}else{F=67}}while(0);if((F|0)==67){ba=c[t>>2]|0}t=f|0;if((ba|0)!=0){if((c[ba+12>>2]|0)==(c[ba+16>>2]|0)?(Ed[c[(c[ba>>2]|0)+36>>2]&255](ba)|0)==-1:0){c[t>>2]=0;ca=0}else{ca=ba}}else{ca=0}ba=(ca|0)==0;t=g|0;g=c[t>>2]|0;do{if((g|0)!=0){if((c[g+12>>2]|0)==(c[g+16>>2]|0)?(Ed[c[(c[g>>2]|0)+36>>2]&255](g)|0)==-1:0){c[t>>2]=0;F=77;break}if(ba){da=d|0;c[da>>2]=ca;i=n;return}}else{F=77}}while(0);if((F|0)==77?!ba:0){da=d|0;c[da>>2]=ca;i=n;return}c[j>>2]=c[j>>2]|2;da=d|0;c[da>>2]=ca;i=n;return}n=dd(4)|0;ht(n);ac(n|0,18472,230)}function An(a){a=a|0;dk(a|0);Nt(a);return}function Bn(a){a=a|0;dk(a|0);return}function Cn(a){a=a|0;return 2}function Dn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];zn(a,b,k,l,f,g,h,5536,5544);i=j;return}function En(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+8|0;n=d+8|0;o=Ed[c[(c[n>>2]|0)+20>>2]&255](n)|0;c[l>>2]=c[e>>2];c[m>>2]=c[f>>2];f=a[o]|0;if((f&1)==0){p=(f&255)>>>1;q=o+1|0;r=o+1|0}else{f=c[o+8>>2]|0;p=c[o+4>>2]|0;q=f;r=f}zn(b,d,l,m,g,h,j,q,r+p|0);i=k;return}function Fn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;dl(m,f);f=m|0;m=c[f>>2]|0;if(!((c[6536]|0)==-1)){c[l>>2]=26144;c[l+4>>2]=30;c[l+8>>2]=0;Ck(26144,l,160)}l=(c[6537]|0)-1|0;n=c[m+8>>2]|0;if((c[m+12>>2]|0)-n>>2>>>0>l>>>0?(m=c[n+(l<<2)>>2]|0,(m|0)!=0):0){fk(c[f>>2]|0)|0;f=c[e>>2]|0;e=b+8|0;b=Ed[c[c[e>>2]>>2]&255](e)|0;c[k>>2]=f;f=(Yr(d,k,b,b+168|0,m,g,0)|0)-b|0;if((f|0)>=168){o=4;p=0;q=d|0;r=c[q>>2]|0;s=a|0;c[s>>2]=r;i=j;return}c[h+24>>2]=((f|0)/12|0|0)%7|0;o=4;p=0;q=d|0;r=c[q>>2]|0;s=a|0;c[s>>2]=r;i=j;return}j=dd(4)|0;ht(j);ac(j|0,18472,230)}function Gn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;dl(m,f);f=m|0;m=c[f>>2]|0;if(!((c[6536]|0)==-1)){c[l>>2]=26144;c[l+4>>2]=30;c[l+8>>2]=0;Ck(26144,l,160)}l=(c[6537]|0)-1|0;n=c[m+8>>2]|0;if((c[m+12>>2]|0)-n>>2>>>0>l>>>0?(m=c[n+(l<<2)>>2]|0,(m|0)!=0):0){fk(c[f>>2]|0)|0;f=c[e>>2]|0;e=b+8|0;b=Ed[c[(c[e>>2]|0)+4>>2]&255](e)|0;c[k>>2]=f;f=(Yr(d,k,b,b+288|0,m,g,0)|0)-b|0;if((f|0)>=288){o=4;p=0;q=d|0;r=c[q>>2]|0;s=a|0;c[s>>2]=r;i=j;return}c[h+16>>2]=((f|0)/12|0|0)%12|0;o=4;p=0;q=d|0;r=c[q>>2]|0;s=a|0;c[s>>2]=r;i=j;return}j=dd(4)|0;ht(j);ac(j|0,18472,230)}function Hn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+32|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;l=b+24|0;dl(l,f);f=l|0;l=c[f>>2]|0;if(!((c[6536]|0)==-1)){c[k>>2]=26144;c[k+4>>2]=30;c[k+8>>2]=0;Ck(26144,k,160)}k=(c[6537]|0)-1|0;m=c[l+8>>2]|0;if((c[l+12>>2]|0)-m>>2>>>0>k>>>0?(l=c[m+(k<<2)>>2]|0,(l|0)!=0):0){fk(c[f>>2]|0)|0;c[j>>2]=c[e>>2];e=us(d,j,g,l,4)|0;if((c[g>>2]&4|0)!=0){n=4;o=0;p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}if((e|0)<69){s=e+2e3|0}else{s=(e-69|0)>>>0<31>>>0?e+1900|0:e}c[h+20>>2]=s-1900;n=4;o=0;p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}b=dd(4)|0;ht(b);ac(b|0,18472,230)}function In(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0;l=i;i=i+328|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;t=l+56|0;u=l+64|0;v=l+72|0;w=l+80|0;x=l+88|0;y=l+96|0;z=l+104|0;A=l+120|0;B=l+128|0;C=l+136|0;D=l+144|0;E=l+152|0;F=l+160|0;G=l+168|0;H=l+176|0;I=l+184|0;J=l+192|0;K=l+200|0;L=l+208|0;M=l+216|0;N=l+224|0;O=l+232|0;P=l+240|0;Q=l+248|0;R=l+256|0;S=l+264|0;T=l+272|0;U=l+280|0;V=l+288|0;W=l+296|0;X=l+304|0;Y=l+312|0;Z=l+320|0;c[h>>2]=0;dl(A,g);_=A|0;A=c[_>>2]|0;if(!((c[6536]|0)==-1)){c[z>>2]=26144;c[z+4>>2]=30;c[z+8>>2]=0;Ck(26144,z,160)}z=(c[6537]|0)-1|0;$=c[A+8>>2]|0;if((c[A+12>>2]|0)-$>>2>>>0>z>>>0?(A=c[$+(z<<2)>>2]|0,(A|0)!=0):0){z=A;fk(c[_>>2]|0)|0;a:switch(k<<24>>24|0){case 100:case 101:{c[w>>2]=c[f>>2];k=us(e,w,h,z,2)|0;w=c[h>>2]|0;if((w&4|0)==0&(k|0)>0&(k|0)<32){c[j+12>>2]=k;break a}else{c[h>>2]=w|4;break a}break};case 99:{w=d+8|0;k=Ed[c[(c[w>>2]|0)+12>>2]&255](w)|0;w=e|0;c[C>>2]=c[w>>2];c[D>>2]=c[f>>2];_=a[k]|0;if((_&1)==0){aa=(_&255)>>>1;ba=k+1|0;ca=k+1|0}else{_=c[k+8>>2]|0;aa=c[k+4>>2]|0;ba=_;ca=_}zn(B,d,C,D,g,h,j,ba,ca+aa|0);c[w>>2]=c[B>>2];break};case 109:{c[s>>2]=c[f>>2];B=us(e,s,h,z,2)|0;s=c[h>>2]|0;if((s&4|0)==0&(B|0)<13){c[j+16>>2]=B-1;break a}else{c[h>>2]=s|4;break a}break};case 37:{c[Z>>2]=c[f>>2];Kn(d,e,Z,h,z);break};case 68:{Z=e|0;c[F>>2]=c[Z>>2];c[G>>2]=c[f>>2];zn(E,d,F,G,g,h,j,5528,5536);c[Z>>2]=c[E>>2];break};case 77:{c[r>>2]=c[f>>2];E=us(e,r,h,z,2)|0;r=c[h>>2]|0;if((r&4|0)==0&(E|0)<60){c[j+4>>2]=E;break a}else{c[h>>2]=r|4;break a}break};case 121:{r=j+20|0;c[n>>2]=c[f>>2];E=us(e,n,h,z,4)|0;if((c[h>>2]&4|0)==0){if((E|0)<69){da=E+2e3|0}else{da=(E-69|0)>>>0<31>>>0?E+1900|0:E}c[r>>2]=da-1900}break};case 88:{da=d+8|0;r=Ed[c[(c[da>>2]|0)+24>>2]&255](da)|0;da=e|0;c[X>>2]=c[da>>2];c[Y>>2]=c[f>>2];E=a[r]|0;if((E&1)==0){ea=(E&255)>>>1;fa=r+1|0;ga=r+1|0}else{E=c[r+8>>2]|0;ea=c[r+4>>2]|0;fa=E;ga=E}zn(W,d,X,Y,g,h,j,fa,ga+ea|0);c[da>>2]=c[W>>2];break};case 70:{W=e|0;c[I>>2]=c[W>>2];c[J>>2]=c[f>>2];zn(H,d,I,J,g,h,j,5520,5528);c[W>>2]=c[H>>2];break};case 97:case 65:{H=c[f>>2]|0;W=d+8|0;J=Ed[c[c[W>>2]>>2]&255](W)|0;c[y>>2]=H;H=(Yr(e,y,J,J+168|0,z,h,0)|0)-J|0;if((H|0)<168){c[j+24>>2]=((H|0)/12|0|0)%7|0}break};case 89:{c[m>>2]=c[f>>2];H=us(e,m,h,z,4)|0;if((c[h>>2]&4|0)==0){c[j+20>>2]=H-1900}break};case 119:{c[o>>2]=c[f>>2];H=us(e,o,h,z,1)|0;o=c[h>>2]|0;if((o&4|0)==0&(H|0)<7){c[j+24>>2]=H;break a}else{c[h>>2]=o|4;break a}break};case 120:{o=c[(c[d>>2]|0)+20>>2]|0;c[U>>2]=c[e>>2];c[V>>2]=c[f>>2];xd[o&127](b,d,U,V,g,h,j);i=l;return};case 83:{c[p>>2]=c[f>>2];V=us(e,p,h,z,2)|0;p=c[h>>2]|0;if((p&4|0)==0&(V|0)<61){c[j>>2]=V;break a}else{c[h>>2]=p|4;break a}break};case 98:case 66:case 104:{p=c[f>>2]|0;V=d+8|0;U=Ed[c[(c[V>>2]|0)+4>>2]&255](V)|0;c[x>>2]=p;p=(Yr(e,x,U,U+288|0,z,h,0)|0)-U|0;if((p|0)<288){c[j+16>>2]=((p|0)/12|0|0)%12|0}break};case 72:{c[v>>2]=c[f>>2];p=us(e,v,h,z,2)|0;v=c[h>>2]|0;if((v&4|0)==0&(p|0)<24){c[j+8>>2]=p;break a}else{c[h>>2]=v|4;break a}break};case 106:{c[t>>2]=c[f>>2];v=us(e,t,h,z,3)|0;t=c[h>>2]|0;if((t&4|0)==0&(v|0)<366){c[j+28>>2]=v;break a}else{c[h>>2]=t|4;break a}break};case 110:case 116:{c[K>>2]=c[f>>2];Jn(d,e,K,h,z);break};case 114:{K=e|0;c[M>>2]=c[K>>2];c[N>>2]=c[f>>2];zn(L,d,M,N,g,h,j,5504,5515);c[K>>2]=c[L>>2];break};case 82:{L=e|0;c[P>>2]=c[L>>2];c[Q>>2]=c[f>>2];zn(O,d,P,Q,g,h,j,5496,5501);c[L>>2]=c[O>>2];break};case 73:{c[u>>2]=c[f>>2];O=us(e,u,h,z,2)|0;u=c[h>>2]|0;if((u&4|0)==0&(O|0)>0&(O|0)<13){c[j+8>>2]=O;break a}else{c[h>>2]=u|4;break a}break};case 112:{u=j+8|0;O=c[f>>2]|0;L=d+8|0;Q=Ed[c[(c[L>>2]|0)+8>>2]&255](L)|0;L=a[Q]|0;if((L&1)==0){ha=(L&255)>>>1}else{ha=c[Q+4>>2]|0}L=a[Q+12|0]|0;if((L&1)==0){ia=(L&255)>>>1}else{ia=c[Q+16>>2]|0}if((ha|0)==(-ia|0)){c[h>>2]=c[h>>2]|4;break a}c[q>>2]=O;O=Yr(e,q,Q,Q+24|0,z,h,0)|0;z=O-Q|0;if((O|0)==(Q|0)?(c[u>>2]|0)==12:0){c[u>>2]=0;break a}if((z|0)==12?(z=c[u>>2]|0,(z|0)<12):0){c[u>>2]=z+12}break};case 84:{z=e|0;c[S>>2]=c[z>>2];c[T>>2]=c[f>>2];zn(R,d,S,T,g,h,j,5488,5496);c[z>>2]=c[R>>2];break};default:{c[h>>2]=c[h>>2]|4}}c[b>>2]=c[e>>2];i=l;return}l=dd(4)|0;ht(l);ac(l|0,18472,230)}function Jn(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;j=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[j>>2];j=e|0;e=f|0;f=h+8|0;a:while(1){h=c[j>>2]|0;do{if((h|0)!=0){if((c[h+12>>2]|0)==(c[h+16>>2]|0)){if((Ed[c[(c[h>>2]|0)+36>>2]&255](h)|0)==-1){c[j>>2]=0;k=0;break}else{k=c[j>>2]|0;break}}else{k=h}}else{k=0}}while(0);h=(k|0)==0;l=c[e>>2]|0;do{if((l|0)!=0){if((c[l+12>>2]|0)!=(c[l+16>>2]|0)){if(h){m=l;break}else{n=l;break a}}if(!((Ed[c[(c[l>>2]|0)+36>>2]&255](l)|0)==-1)){if(h){m=l;break}else{n=l;break a}}else{c[e>>2]=0;o=12;break}}else{o=12}}while(0);if((o|0)==12){o=0;if(h){n=0;break}else{m=0}}l=c[j>>2]|0;p=c[l+12>>2]|0;if((p|0)==(c[l+16>>2]|0)){q=(Ed[c[(c[l>>2]|0)+36>>2]&255](l)|0)&255}else{q=a[p]|0}if(!(q<<24>>24>-1)){n=m;break}if((b[(c[f>>2]|0)+(q<<24>>24<<1)>>1]&8192)==0){n=m;break}p=c[j>>2]|0;l=p+12|0;r=c[l>>2]|0;if((r|0)==(c[p+16>>2]|0)){Ed[c[(c[p>>2]|0)+40>>2]&255](p)|0;continue}else{c[l>>2]=r+1;continue}}m=c[j>>2]|0;do{if((m|0)!=0){if((c[m+12>>2]|0)==(c[m+16>>2]|0)){if((Ed[c[(c[m>>2]|0)+36>>2]&255](m)|0)==-1){c[j>>2]=0;s=0;break}else{s=c[j>>2]|0;break}}else{s=m}}else{s=0}}while(0);m=(s|0)==0;do{if((n|0)!=0){if((c[n+12>>2]|0)==(c[n+16>>2]|0)?(Ed[c[(c[n>>2]|0)+36>>2]&255](n)|0)==-1:0){c[e>>2]=0;o=32;break}if(m){i=d;return}}else{o=32}}while(0);if((o|0)==32?!m:0){i=d;return}c[g>>2]=c[g>>2]|2;i=d;return}function Kn(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;b=i;h=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[h>>2];h=d|0;d=c[h>>2]|0;do{if((d|0)!=0){if((c[d+12>>2]|0)==(c[d+16>>2]|0)){if((Ed[c[(c[d>>2]|0)+36>>2]&255](d)|0)==-1){c[h>>2]=0;j=0;break}else{j=c[h>>2]|0;break}}else{j=d}}else{j=0}}while(0);d=(j|0)==0;j=e|0;e=c[j>>2]|0;do{if((e|0)!=0){if((c[e+12>>2]|0)==(c[e+16>>2]|0)?(Ed[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1:0){c[j>>2]=0;k=11;break}if(d){l=e}else{k=12}}else{k=11}}while(0);if((k|0)==11){if(d){k=12}else{l=0}}if((k|0)==12){c[f>>2]=c[f>>2]|6;i=b;return}d=c[h>>2]|0;e=c[d+12>>2]|0;if((e|0)==(c[d+16>>2]|0)){m=(Ed[c[(c[d>>2]|0)+36>>2]&255](d)|0)&255}else{m=a[e]|0}if(!((Cd[c[(c[g>>2]|0)+36>>2]&63](g,m,0)|0)<<24>>24==37)){c[f>>2]=c[f>>2]|4;i=b;return}m=c[h>>2]|0;g=m+12|0;e=c[g>>2]|0;if((e|0)==(c[m+16>>2]|0)){Ed[c[(c[m>>2]|0)+40>>2]&255](m)|0;n=c[h>>2]|0}else{c[g>>2]=e+1;n=m}do{if((n|0)!=0){if((c[n+12>>2]|0)==(c[n+16>>2]|0)){if((Ed[c[(c[n>>2]|0)+36>>2]&255](n)|0)==-1){c[h>>2]=0;o=0;break}else{o=c[h>>2]|0;break}}else{o=n}}else{o=0}}while(0);n=(o|0)==0;do{if((l|0)!=0){if((c[l+12>>2]|0)==(c[l+16>>2]|0)?(Ed[c[(c[l>>2]|0)+36>>2]&255](l)|0)==-1:0){c[j>>2]=0;k=31;break}if(n){i=b;return}}else{k=31}}while(0);if((k|0)==31?!n:0){i=b;return}c[f>>2]=c[f>>2]|2;i=b;return}function Ln(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0;l=i;i=i+48|0;m=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[m>>2];m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=l|0;n=l+16|0;o=l+24|0;p=l+32|0;q=l+40|0;dl(n,f);r=n|0;n=c[r>>2]|0;if(!((c[6534]|0)==-1)){c[m>>2]=26136;c[m+4>>2]=30;c[m+8>>2]=0;Ck(26136,m,160)}m=(c[6535]|0)-1|0;s=c[n+8>>2]|0;if((c[n+12>>2]|0)-s>>2>>>0>m>>>0?(n=c[s+(m<<2)>>2]|0,(n|0)!=0):0){m=n;fk(c[r>>2]|0)|0;c[g>>2]=0;r=d|0;a:do{if((j|0)!=(k|0)){s=e|0;t=n;u=n;v=n;w=b;x=p|0;y=q|0;z=o|0;A=j;B=0;b:while(1){C=B;while(1){if((C|0)!=0){D=71;break a}E=c[r>>2]|0;if((E|0)!=0){F=c[E+12>>2]|0;if((F|0)==(c[E+16>>2]|0)){G=Ed[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[r>>2]=0;H=1;I=0}else{H=0;I=E}}else{H=1;I=0}E=c[s>>2]|0;do{if((E|0)!=0){F=c[E+12>>2]|0;if((F|0)==(c[E+16>>2]|0)){J=Ed[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{J=c[F>>2]|0}if(!((J|0)==-1)){if(H){K=E;break}else{D=25;break b}}else{c[s>>2]=0;D=23;break}}else{D=23}}while(0);if((D|0)==23){D=0;if(H){D=25;break b}else{K=0}}if((Cd[c[(c[t>>2]|0)+52>>2]&63](m,c[A>>2]|0,0)|0)<<24>>24==37){D=28;break}if(Cd[c[(c[u>>2]|0)+12>>2]&63](m,8192,c[A>>2]|0)|0){L=A;D=38;break}M=I+12|0;E=c[M>>2]|0;N=I+16|0;if((E|0)==(c[N>>2]|0)){O=Ed[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{O=c[E>>2]|0}E=Bd[c[(c[v>>2]|0)+28>>2]&127](m,O)|0;if((E|0)==(Bd[c[(c[v>>2]|0)+28>>2]&127](m,c[A>>2]|0)|0)){D=66;break}c[g>>2]=4;C=4}c:do{if((D|0)==28){D=0;C=A+4|0;if((C|0)==(k|0)){D=29;break b}E=Cd[c[(c[t>>2]|0)+52>>2]&63](m,c[C>>2]|0,0)|0;if((E<<24>>24|0)==69|(E<<24>>24|0)==48){F=A+8|0;if((F|0)==(k|0)){D=32;break b}P=E;Q=Cd[c[(c[t>>2]|0)+52>>2]&63](m,c[F>>2]|0,0)|0;R=F}else{P=0;Q=E;R=C}C=c[(c[w>>2]|0)+36>>2]|0;c[x>>2]=I;c[y>>2]=K;Jd[C&7](o,b,p,q,f,g,h,Q,P);c[r>>2]=c[z>>2];S=R+4|0}else if((D|0)==38){while(1){D=0;C=L+4|0;if((C|0)==(k|0)){T=k;break}if(Cd[c[(c[u>>2]|0)+12>>2]&63](m,8192,c[C>>2]|0)|0){L=C;D=38}else{T=C;break}}C=I;E=K;F=K;while(1){if((C|0)!=0){U=c[C+12>>2]|0;if((U|0)==(c[C+16>>2]|0)){V=Ed[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{V=c[U>>2]|0}if((V|0)==-1){c[r>>2]=0;W=1;X=0}else{W=0;X=C}}else{W=1;X=0}do{if((E|0)!=0){U=c[E+12>>2]|0;if((U|0)==(c[E+16>>2]|0)){Y=Ed[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{Y=c[U>>2]|0}if(!((Y|0)==-1)){if(W^(F|0)==0){Z=F;_=F;break}else{S=T;break c}}else{c[s>>2]=0;$=0;D=53;break}}else{$=F;D=53}}while(0);if((D|0)==53){D=0;if(W){S=T;break c}else{Z=0;_=$}}U=X+12|0;aa=c[U>>2]|0;ba=X+16|0;if((aa|0)==(c[ba>>2]|0)){ca=Ed[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{ca=c[aa>>2]|0}if(!(Cd[c[(c[u>>2]|0)+12>>2]&63](m,8192,ca)|0)){S=T;break c}aa=c[U>>2]|0;if((aa|0)==(c[ba>>2]|0)){Ed[c[(c[X>>2]|0)+40>>2]&255](X)|0;C=X;E=Z;F=_;continue}else{c[U>>2]=aa+4;C=X;E=Z;F=_;continue}}}else if((D|0)==66){D=0;F=c[M>>2]|0;if((F|0)==(c[N>>2]|0)){Ed[c[(c[I>>2]|0)+40>>2]&255](I)|0}else{c[M>>2]=F+4}S=A+4|0}}while(0);if((S|0)==(k|0)){D=71;break a}A=S;B=c[g>>2]|0}if((D|0)==25){c[g>>2]=4;da=I;break}else if((D|0)==29){c[g>>2]=4;da=I;break}else if((D|0)==32){c[g>>2]=4;da=I;break}}else{D=71}}while(0);if((D|0)==71){da=c[r>>2]|0}r=d|0;if((da|0)!=0){d=c[da+12>>2]|0;if((d|0)==(c[da+16>>2]|0)){ea=Ed[c[(c[da>>2]|0)+36>>2]&255](da)|0}else{ea=c[d>>2]|0}if((ea|0)==-1){c[r>>2]=0;fa=1;ga=0}else{fa=0;ga=da}}else{fa=1;ga=0}da=e|0;e=c[da>>2]|0;do{if((e|0)!=0){r=c[e+12>>2]|0;if((r|0)==(c[e+16>>2]|0)){ha=Ed[c[(c[e>>2]|0)+36>>2]&255](e)|0}else{ha=c[r>>2]|0}if((ha|0)==-1){c[da>>2]=0;D=84;break}if(fa){ia=a|0;c[ia>>2]=ga;i=l;return}}else{D=84}}while(0);if((D|0)==84?!fa:0){ia=a|0;c[ia>>2]=ga;i=l;return}c[g>>2]=c[g>>2]|2;ia=a|0;c[ia>>2]=ga;i=l;return}l=dd(4)|0;ht(l);ac(l|0,18472,230)}function Mn(a){a=a|0;dk(a|0);Nt(a);return}function Nn(a){a=a|0;dk(a|0);return}function On(a){a=a|0;return 2}function Pn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];Ln(a,b,k,l,f,g,h,5456,5488);i=j;return}function Qn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+8|0;n=d+8|0;o=Ed[c[(c[n>>2]|0)+20>>2]&255](n)|0;c[l>>2]=c[e>>2];c[m>>2]=c[f>>2];f=a[o]|0;if((f&1)==0){p=(f&255)>>>1;q=o+4|0;r=o+4|0}else{f=c[o+8>>2]|0;p=c[o+4>>2]|0;q=f;r=f}Ln(b,d,l,m,g,h,j,q,r+(p<<2)|0);i=k;return}function Rn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;dl(m,f);f=m|0;m=c[f>>2]|0;if(!((c[6534]|0)==-1)){c[l>>2]=26136;c[l+4>>2]=30;c[l+8>>2]=0;Ck(26136,l,160)}l=(c[6535]|0)-1|0;n=c[m+8>>2]|0;if((c[m+12>>2]|0)-n>>2>>>0>l>>>0?(m=c[n+(l<<2)>>2]|0,(m|0)!=0):0){fk(c[f>>2]|0)|0;f=c[e>>2]|0;e=b+8|0;b=Ed[c[c[e>>2]>>2]&255](e)|0;c[k>>2]=f;f=(hs(d,k,b,b+168|0,m,g,0)|0)-b|0;if((f|0)>=168){o=4;p=0;q=d|0;r=c[q>>2]|0;s=a|0;c[s>>2]=r;i=j;return}c[h+24>>2]=((f|0)/12|0|0)%7|0;o=4;p=0;q=d|0;r=c[q>>2]|0;s=a|0;c[s>>2]=r;i=j;return}j=dd(4)|0;ht(j);ac(j|0,18472,230)}function Sn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;dl(m,f);f=m|0;m=c[f>>2]|0;if(!((c[6534]|0)==-1)){c[l>>2]=26136;c[l+4>>2]=30;c[l+8>>2]=0;Ck(26136,l,160)}l=(c[6535]|0)-1|0;n=c[m+8>>2]|0;if((c[m+12>>2]|0)-n>>2>>>0>l>>>0?(m=c[n+(l<<2)>>2]|0,(m|0)!=0):0){fk(c[f>>2]|0)|0;f=c[e>>2]|0;e=b+8|0;b=Ed[c[(c[e>>2]|0)+4>>2]&255](e)|0;c[k>>2]=f;f=(hs(d,k,b,b+288|0,m,g,0)|0)-b|0;if((f|0)>=288){o=4;p=0;q=d|0;r=c[q>>2]|0;s=a|0;c[s>>2]=r;i=j;return}c[h+16>>2]=((f|0)/12|0|0)%12|0;o=4;p=0;q=d|0;r=c[q>>2]|0;s=a|0;c[s>>2]=r;i=j;return}j=dd(4)|0;ht(j);ac(j|0,18472,230)}function Tn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+32|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;l=b+24|0;dl(l,f);f=l|0;l=c[f>>2]|0;if(!((c[6534]|0)==-1)){c[k>>2]=26136;c[k+4>>2]=30;c[k+8>>2]=0;Ck(26136,k,160)}k=(c[6535]|0)-1|0;m=c[l+8>>2]|0;if((c[l+12>>2]|0)-m>>2>>>0>k>>>0?(l=c[m+(k<<2)>>2]|0,(l|0)!=0):0){fk(c[f>>2]|0)|0;c[j>>2]=c[e>>2];e=vs(d,j,g,l,4)|0;if((c[g>>2]&4|0)!=0){n=4;o=0;p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}if((e|0)<69){s=e+2e3|0}else{s=(e-69|0)>>>0<31>>>0?e+1900|0:e}c[h+20>>2]=s-1900;n=4;o=0;p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}b=dd(4)|0;ht(b);ac(b|0,18472,230)}function Un(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0;l=i;i=i+328|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;t=l+56|0;u=l+64|0;v=l+72|0;w=l+80|0;x=l+88|0;y=l+96|0;z=l+104|0;A=l+120|0;B=l+128|0;C=l+136|0;D=l+144|0;E=l+152|0;F=l+160|0;G=l+168|0;H=l+176|0;I=l+184|0;J=l+192|0;K=l+200|0;L=l+208|0;M=l+216|0;N=l+224|0;O=l+232|0;P=l+240|0;Q=l+248|0;R=l+256|0;S=l+264|0;T=l+272|0;U=l+280|0;V=l+288|0;W=l+296|0;X=l+304|0;Y=l+312|0;Z=l+320|0;c[h>>2]=0;dl(A,g);_=A|0;A=c[_>>2]|0;if(!((c[6534]|0)==-1)){c[z>>2]=26136;c[z+4>>2]=30;c[z+8>>2]=0;Ck(26136,z,160)}z=(c[6535]|0)-1|0;$=c[A+8>>2]|0;if((c[A+12>>2]|0)-$>>2>>>0>z>>>0?(A=c[$+(z<<2)>>2]|0,(A|0)!=0):0){z=A;fk(c[_>>2]|0)|0;a:switch(k<<24>>24|0){case 68:{k=e|0;c[F>>2]=c[k>>2];c[G>>2]=c[f>>2];Ln(E,d,F,G,g,h,j,5424,5456);c[k>>2]=c[E>>2];break};case 98:case 66:case 104:{E=c[f>>2]|0;k=d+8|0;G=Ed[c[(c[k>>2]|0)+4>>2]&255](k)|0;c[x>>2]=E;E=(hs(e,x,G,G+288|0,z,h,0)|0)-G|0;if((E|0)<288){c[j+16>>2]=((E|0)/12|0|0)%12|0}break};case 99:{E=d+8|0;G=Ed[c[(c[E>>2]|0)+12>>2]&255](E)|0;E=e|0;c[C>>2]=c[E>>2];c[D>>2]=c[f>>2];x=a[G]|0;if((x&1)==0){aa=(x&255)>>>1;ba=G+4|0;ca=G+4|0}else{x=c[G+8>>2]|0;aa=c[G+4>>2]|0;ba=x;ca=x}Ln(B,d,C,D,g,h,j,ba,ca+(aa<<2)|0);c[E>>2]=c[B>>2];break};case 109:{c[s>>2]=c[f>>2];B=vs(e,s,h,z,2)|0;s=c[h>>2]|0;if((s&4|0)==0&(B|0)<13){c[j+16>>2]=B-1;break a}else{c[h>>2]=s|4;break a}break};case 70:{s=e|0;c[I>>2]=c[s>>2];c[J>>2]=c[f>>2];Ln(H,d,I,J,g,h,j,5392,5424);c[s>>2]=c[H>>2];break};case 121:{H=j+20|0;c[n>>2]=c[f>>2];s=vs(e,n,h,z,4)|0;if((c[h>>2]&4|0)==0){if((s|0)<69){da=s+2e3|0}else{da=(s-69|0)>>>0<31>>>0?s+1900|0:s}c[H>>2]=da-1900}break};case 84:{da=e|0;c[S>>2]=c[da>>2];c[T>>2]=c[f>>2];Ln(R,d,S,T,g,h,j,5288,5320);c[da>>2]=c[R>>2];break};case 100:case 101:{c[w>>2]=c[f>>2];R=vs(e,w,h,z,2)|0;w=c[h>>2]|0;if((w&4|0)==0&(R|0)>0&(R|0)<32){c[j+12>>2]=R;break a}else{c[h>>2]=w|4;break a}break};case 89:{c[m>>2]=c[f>>2];w=vs(e,m,h,z,4)|0;if((c[h>>2]&4|0)==0){c[j+20>>2]=w-1900}break};case 37:{c[Z>>2]=c[f>>2];Wn(d,e,Z,h,z);break};case 119:{c[o>>2]=c[f>>2];Z=vs(e,o,h,z,1)|0;o=c[h>>2]|0;if((o&4|0)==0&(Z|0)<7){c[j+24>>2]=Z;break a}else{c[h>>2]=o|4;break a}break};case 120:{o=c[(c[d>>2]|0)+20>>2]|0;c[U>>2]=c[e>>2];c[V>>2]=c[f>>2];xd[o&127](b,d,U,V,g,h,j);i=l;return};case 88:{V=d+8|0;U=Ed[c[(c[V>>2]|0)+24>>2]&255](V)|0;V=e|0;c[X>>2]=c[V>>2];c[Y>>2]=c[f>>2];o=a[U]|0;if((o&1)==0){ea=(o&255)>>>1;fa=U+4|0;ga=U+4|0}else{o=c[U+8>>2]|0;ea=c[U+4>>2]|0;fa=o;ga=o}Ln(W,d,X,Y,g,h,j,fa,ga+(ea<<2)|0);c[V>>2]=c[W>>2];break};case 112:{W=j+8|0;V=c[f>>2]|0;ea=d+8|0;ga=Ed[c[(c[ea>>2]|0)+8>>2]&255](ea)|0;ea=a[ga]|0;if((ea&1)==0){ha=(ea&255)>>>1}else{ha=c[ga+4>>2]|0}ea=a[ga+12|0]|0;if((ea&1)==0){ia=(ea&255)>>>1}else{ia=c[ga+16>>2]|0}if((ha|0)==(-ia|0)){c[h>>2]=c[h>>2]|4;break a}c[q>>2]=V;V=hs(e,q,ga,ga+24|0,z,h,0)|0;q=V-ga|0;if((V|0)==(ga|0)?(c[W>>2]|0)==12:0){c[W>>2]=0;break a}if((q|0)==12?(q=c[W>>2]|0,(q|0)<12):0){c[W>>2]=q+12}break};case 114:{q=e|0;c[M>>2]=c[q>>2];c[N>>2]=c[f>>2];Ln(L,d,M,N,g,h,j,5344,5388);c[q>>2]=c[L>>2];break};case 97:case 65:{L=c[f>>2]|0;q=d+8|0;N=Ed[c[c[q>>2]>>2]&255](q)|0;c[y>>2]=L;L=(hs(e,y,N,N+168|0,z,h,0)|0)-N|0;if((L|0)<168){c[j+24>>2]=((L|0)/12|0|0)%7|0}break};case 72:{c[v>>2]=c[f>>2];L=vs(e,v,h,z,2)|0;v=c[h>>2]|0;if((v&4|0)==0&(L|0)<24){c[j+8>>2]=L;break a}else{c[h>>2]=v|4;break a}break};case 73:{c[u>>2]=c[f>>2];v=vs(e,u,h,z,2)|0;u=c[h>>2]|0;if((u&4|0)==0&(v|0)>0&(v|0)<13){c[j+8>>2]=v;break a}else{c[h>>2]=u|4;break a}break};case 106:{c[t>>2]=c[f>>2];u=vs(e,t,h,z,3)|0;t=c[h>>2]|0;if((t&4|0)==0&(u|0)<366){c[j+28>>2]=u;break a}else{c[h>>2]=t|4;break a}break};case 77:{c[r>>2]=c[f>>2];t=vs(e,r,h,z,2)|0;r=c[h>>2]|0;if((r&4|0)==0&(t|0)<60){c[j+4>>2]=t;break a}else{c[h>>2]=r|4;break a}break};case 83:{c[p>>2]=c[f>>2];r=vs(e,p,h,z,2)|0;p=c[h>>2]|0;if((p&4|0)==0&(r|0)<61){c[j>>2]=r;break a}else{c[h>>2]=p|4;break a}break};case 82:{p=e|0;c[P>>2]=c[p>>2];c[Q>>2]=c[f>>2];Ln(O,d,P,Q,g,h,j,5320,5340);c[p>>2]=c[O>>2];break};case 110:case 116:{c[K>>2]=c[f>>2];Vn(d,e,K,h,z);break};default:{c[h>>2]=c[h>>2]|4}}c[b>>2]=c[e>>2];i=l;return}l=dd(4)|0;ht(l);ac(l|0,18472,230)}function Vn(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;a=i;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=b|0;b=d|0;d=f;a:while(1){h=c[g>>2]|0;do{if((h|0)!=0){j=c[h+12>>2]|0;if((j|0)==(c[h+16>>2]|0)){k=Ed[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{k=c[j>>2]|0}if((k|0)==-1){c[g>>2]=0;l=1;break}else{l=(c[g>>2]|0)==0;break}}else{l=1}}while(0);h=c[b>>2]|0;do{if((h|0)!=0){j=c[h+12>>2]|0;if((j|0)==(c[h+16>>2]|0)){m=Ed[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{m=c[j>>2]|0}if(!((m|0)==-1)){if(l){n=h;break}else{o=h;break a}}else{c[b>>2]=0;p=15;break}}else{p=15}}while(0);if((p|0)==15){p=0;if(l){o=0;break}else{n=0}}h=c[g>>2]|0;j=c[h+12>>2]|0;if((j|0)==(c[h+16>>2]|0)){q=Ed[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{q=c[j>>2]|0}if(!(Cd[c[(c[d>>2]|0)+12>>2]&63](f,8192,q)|0)){o=n;break}j=c[g>>2]|0;h=j+12|0;r=c[h>>2]|0;if((r|0)==(c[j+16>>2]|0)){Ed[c[(c[j>>2]|0)+40>>2]&255](j)|0;continue}else{c[h>>2]=r+4;continue}}n=c[g>>2]|0;do{if((n|0)!=0){q=c[n+12>>2]|0;if((q|0)==(c[n+16>>2]|0)){s=Ed[c[(c[n>>2]|0)+36>>2]&255](n)|0}else{s=c[q>>2]|0}if((s|0)==-1){c[g>>2]=0;t=1;break}else{t=(c[g>>2]|0)==0;break}}else{t=1}}while(0);do{if((o|0)!=0){g=c[o+12>>2]|0;if((g|0)==(c[o+16>>2]|0)){u=Ed[c[(c[o>>2]|0)+36>>2]&255](o)|0}else{u=c[g>>2]|0}if((u|0)==-1){c[b>>2]=0;p=37;break}if(t){i=a;return}}else{p=37}}while(0);if((p|0)==37?!t:0){i=a;return}c[e>>2]=c[e>>2]|2;i=a;return}function Wn(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;a=i;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=b|0;b=c[g>>2]|0;do{if((b|0)!=0){h=c[b+12>>2]|0;if((h|0)==(c[b+16>>2]|0)){j=Ed[c[(c[b>>2]|0)+36>>2]&255](b)|0}else{j=c[h>>2]|0}if((j|0)==-1){c[g>>2]=0;k=1;break}else{k=(c[g>>2]|0)==0;break}}else{k=1}}while(0);j=d|0;d=c[j>>2]|0;do{if((d|0)!=0){b=c[d+12>>2]|0;if((b|0)==(c[d+16>>2]|0)){l=Ed[c[(c[d>>2]|0)+36>>2]&255](d)|0}else{l=c[b>>2]|0}if(!((l|0)==-1)){if(k){m=d;break}else{n=16;break}}else{c[j>>2]=0;n=14;break}}else{n=14}}while(0);if((n|0)==14){if(k){n=16}else{m=0}}if((n|0)==16){c[e>>2]=c[e>>2]|6;i=a;return}k=c[g>>2]|0;d=c[k+12>>2]|0;if((d|0)==(c[k+16>>2]|0)){o=Ed[c[(c[k>>2]|0)+36>>2]&255](k)|0}else{o=c[d>>2]|0}if(!((Cd[c[(c[f>>2]|0)+52>>2]&63](f,o,0)|0)<<24>>24==37)){c[e>>2]=c[e>>2]|4;i=a;return}o=c[g>>2]|0;f=o+12|0;d=c[f>>2]|0;if((d|0)==(c[o+16>>2]|0)){Ed[c[(c[o>>2]|0)+40>>2]&255](o)|0;p=c[g>>2]|0}else{c[f>>2]=d+4;p=o}do{if((p|0)!=0){o=c[p+12>>2]|0;if((o|0)==(c[p+16>>2]|0)){q=Ed[c[(c[p>>2]|0)+36>>2]&255](p)|0}else{q=c[o>>2]|0}if((q|0)==-1){c[g>>2]=0;r=1;break}else{r=(c[g>>2]|0)==0;break}}else{r=1}}while(0);do{if((m|0)!=0){g=c[m+12>>2]|0;if((g|0)==(c[m+16>>2]|0)){s=Ed[c[(c[m>>2]|0)+36>>2]&255](m)|0}else{s=c[g>>2]|0}if((s|0)==-1){c[j>>2]=0;n=38;break}if(r){i=a;return}}else{n=38}}while(0);if((n|0)==38?!r:0){i=a;return}c[e>>2]=c[e>>2]|2;i=a;return}function Xn(a){a=a|0;Zn(a+8|0);dk(a|0);Nt(a);return}function Yn(a){a=a|0;Zn(a+8|0);dk(a|0);return}function Zn(b){b=b|0;var d=0;d=b|0;b=c[d>>2]|0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}if((b|0)==(c[6072]|0)){return}Db(c[d>>2]|0);return}function _n(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;g=i;i=i+112|0;f=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[f>>2];f=g|0;l=g+8|0;m=l|0;n=f|0;a[n]=37;o=f+1|0;a[o]=j;p=f+2|0;a[p]=k;a[f+3|0]=0;if(!(k<<24>>24==0)){a[o]=k;a[p]=j}j=Tc(m|0,100,n|0,h|0,c[d+8>>2]|0)|0;d=l+j|0;l=c[e>>2]|0;if((j|0)==0){q=l;r=b|0;c[r>>2]=q;s=100;t=0;i=g;return}else{u=m;v=l}while(1){l=a[u]|0;do{if((v|0)!=0){m=v+24|0;j=c[m>>2]|0;if((j|0)==(c[v+28>>2]|0)){e=(Bd[c[(c[v>>2]|0)+52>>2]&127](v,l&255)|0)==-1;w=e?0:v;break}else{c[m>>2]=j+1;a[j]=l;w=v;break}}else{w=0}}while(0);l=u+1|0;if((l|0)==(d|0)){q=w;break}else{u=l;v=w}}r=b|0;c[r>>2]=q;s=100;t=0;i=g;return}function $n(a){a=a|0;Zn(a+8|0);dk(a|0);Nt(a);return}function ao(a){a=a|0;Zn(a+8|0);dk(a|0);return}function bo(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+408|0;e=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[e>>2];e=f|0;k=f+400|0;l=e|0;c[k>>2]=e+400;co(b+8|0,l,k,g,h,j);j=c[k>>2]|0;k=c[d>>2]|0;if((l|0)==(j|0)){m=k;n=a|0;c[n>>2]=m;o=400;p=0;i=f;return}else{q=l;r=k}while(1){k=c[q>>2]|0;if((r|0)==0){s=0}else{l=r+24|0;d=c[l>>2]|0;if((d|0)==(c[r+28>>2]|0)){t=Bd[c[(c[r>>2]|0)+52>>2]&127](r,k)|0}else{c[l>>2]=d+4;c[d>>2]=k;t=k}s=(t|0)==-1?0:r}k=q+4|0;if((k|0)==(j|0)){m=s;break}else{q=k;r=s}}n=a|0;c[n>>2]=m;o=400;p=0;i=f;return}function co(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+120|0;k=j|0;l=j+112|0;m=i;i=i+4|0;i=i+7&-8;n=j+8|0;o=k|0;a[o]=37;p=k+1|0;a[p]=g;q=k+2|0;a[q]=h;a[k+3|0]=0;if(!(h<<24>>24==0)){a[p]=h;a[q]=g}g=b|0;Tc(n|0,100,o|0,f|0,c[g>>2]|0)|0;c[l>>2]=0;c[l+4>>2]=0;c[m>>2]=n;n=(c[e>>2]|0)-d>>2;f=Kc(c[g>>2]|0)|0;g=Zs(d,m,n,l)|0;if((f|0)!=0){Kc(f|0)|0}if((g|0)==-1){$o(2288)}else{c[e>>2]=d+(g<<2);i=j;return}}function eo(a){a=a|0;dk(a|0);Nt(a);return}function fo(a){a=a|0;dk(a|0);return}function go(a){a=a|0;return 127}function ho(a){a=a|0;return 127}function io(a,b){a=a|0;b=b|0;eu(a|0,0,12)|0;return}function jo(a,b){a=a|0;b=b|0;eu(a|0,0,12)|0;return}function ko(a,b){a=a|0;b=b|0;eu(a|0,0,12)|0;return}function lo(a,b){a=a|0;b=b|0;Hk(a,1,45);return}function mo(a){a=a|0;return 0}function no(b,c){b=b|0;c=c|0;c=b;D=67109634;a[c]=D;D=D>>8;a[c+1|0]=D;D=D>>8;a[c+2|0]=D;D=D>>8;a[c+3|0]=D;return}function oo(b,c){b=b|0;c=c|0;c=b;D=67109634;a[c]=D;D=D>>8;a[c+1|0]=D;D=D>>8;a[c+2|0]=D;D=D>>8;a[c+3|0]=D;return}function po(a){a=a|0;dk(a|0);Nt(a);return}function qo(a){a=a|0;dk(a|0);return}function ro(a){a=a|0;return 127}function so(a){a=a|0;return 127}function to(a,b){a=a|0;b=b|0;eu(a|0,0,12)|0;return}function uo(a,b){a=a|0;b=b|0;eu(a|0,0,12)|0;return}function vo(a,b){a=a|0;b=b|0;eu(a|0,0,12)|0;return}function wo(a,b){a=a|0;b=b|0;Hk(a,1,45);return}function xo(a){a=a|0;return 0}function yo(b,c){b=b|0;c=c|0;c=b;D=67109634;a[c]=D;D=D>>8;a[c+1|0]=D;D=D>>8;a[c+2|0]=D;D=D>>8;a[c+3|0]=D;return}function zo(b,c){b=b|0;c=c|0;c=b;D=67109634;a[c]=D;D=D>>8;a[c+1|0]=D;D=D>>8;a[c+2|0]=D;D=D>>8;a[c+3|0]=D;return}function Ao(a){a=a|0;dk(a|0);Nt(a);return}function Bo(a){a=a|0;dk(a|0);return}function Co(a){a=a|0;return 2147483647}function Do(a){a=a|0;return 2147483647}function Eo(a,b){a=a|0;b=b|0;eu(a|0,0,12)|0;return}function Fo(a,b){a=a|0;b=b|0;eu(a|0,0,12)|0;return}function Go(a,b){a=a|0;b=b|0;eu(a|0,0,12)|0;return}function Ho(a,b){a=a|0;b=b|0;Uk(a,1,45);return}function Io(a){a=a|0;return 0}function Jo(b,c){b=b|0;c=c|0;c=b;D=67109634;a[c]=D;D=D>>8;a[c+1|0]=D;D=D>>8;a[c+2|0]=D;D=D>>8;a[c+3|0]=D;return}function Ko(b,c){b=b|0;c=c|0;c=b;D=67109634;a[c]=D;D=D>>8;a[c+1|0]=D;D=D>>8;a[c+2|0]=D;D=D>>8;a[c+3|0]=D;return}function Lo(a){a=a|0;dk(a|0);Nt(a);return}function Mo(a){a=a|0;dk(a|0);return}function No(a){a=a|0;return 2147483647}function Oo(a){a=a|0;return 2147483647}function Po(a,b){a=a|0;b=b|0;eu(a|0,0,12)|0;return}function Qo(a,b){a=a|0;b=b|0;eu(a|0,0,12)|0;return}function Ro(a,b){a=a|0;b=b|0;eu(a|0,0,12)|0;return}function So(a,b){a=a|0;b=b|0;Uk(a,1,45);return}function To(a){a=a|0;return 0}function Uo(b,c){b=b|0;c=c|0;c=b;D=67109634;a[c]=D;D=D>>8;a[c+1|0]=D;D=D>>8;a[c+2|0]=D;D=D>>8;a[c+3|0]=D;return}function Vo(b,c){b=b|0;c=c|0;c=b;D=67109634;a[c]=D;D=D>>8;a[c+1|0]=D;D=D>>8;a[c+2|0]=D;D=D>>8;a[c+3|0]=D;return}function Wo(a){a=a|0;dk(a|0);Nt(a);return}function Xo(a){a=a|0;dk(a|0);return}function Yo(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+120|0;o=d+128|0;p=d+136|0;q=d+144|0;r=d+152|0;s=d+160|0;t=d+176|0;u=n|0;c[u>>2]=m;v=n+4|0;c[v>>2]=268;w=m+100|0;dl(p,h);m=p|0;x=c[m>>2]|0;if(!((c[6536]|0)==-1)){c[l>>2]=26144;c[l+4>>2]=30;c[l+8>>2]=0;Ck(26144,l,160)}l=(c[6537]|0)-1|0;y=c[x+8>>2]|0;if((c[x+12>>2]|0)-y>>2>>>0>l>>>0?(x=c[y+(l<<2)>>2]|0,(x|0)!=0):0){l=x;a[q]=0;y=f|0;c[r>>2]=c[y>>2];do{if(_o(e,r,g,p,c[h+4>>2]|0,j,q,l,n,o,w)|0){f=s|0;Md[c[(c[x>>2]|0)+32>>2]&15](l,5272,5282,f)|0;z=t|0;A=c[o>>2]|0;B=c[u>>2]|0;C=A-B|0;if((C|0)>98){D=It(C+2|0)|0;if((D|0)==0){St();E=0;F=0}else{E=D;F=D}}else{E=z;F=0}if((a[q]|0)==0){G=E}else{a[E]=45;G=E+1|0}if(B>>>0<A>>>0){A=s+10|0;D=s;C=G;H=B;while(1){B=a[H]|0;I=f;while(1){J=I+1|0;if((a[I]|0)==B<<24>>24){K=I;break}if((J|0)==(A|0)){K=A;break}else{I=J}}a[C]=a[5272+(K-D)|0]|0;I=H+1|0;B=C+1|0;if(I>>>0<(c[o>>2]|0)>>>0){C=B;H=I}else{L=B;break}}}else{L=G}a[L]=0;H=Nc(z|0,1624,(C=i,i=i+8|0,c[C>>2]=k,C)|0)|0;i=C;if((H|0)==1){if((F|0)==0){break}Jt(F);break}H=dd(8)|0;lk(H,1224);ac(H|0,18504,40)}}while(0);F=e|0;e=c[F>>2]|0;do{if((e|0)!=0){if((c[e+12>>2]|0)==(c[e+16>>2]|0)){if((Ed[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1){c[F>>2]=0;M=0;break}else{M=c[F>>2]|0;break}}else{M=e}}else{M=0}}while(0);e=(M|0)==0;M=c[y>>2]|0;do{if((M|0)!=0){if((c[M+12>>2]|0)!=(c[M+16>>2]|0)){if(e){break}else{N=48;break}}if(!((Ed[c[(c[M>>2]|0)+36>>2]&255](M)|0)==-1)){if(e){break}else{N=48;break}}else{c[y>>2]=0;N=46;break}}else{N=46}}while(0);if((N|0)==46?e:0){N=48}if((N|0)==48){c[j>>2]=c[j>>2]|2}c[b>>2]=c[F>>2];fk(c[m>>2]|0)|0;m=c[u>>2]|0;c[u>>2]=0;if((m|0)==0){O=100;P=0;i=d;return}zd[c[v>>2]&511](m);O=100;P=0;i=d;return}d=dd(4)|0;ht(d);ac(d|0,18472,230)}function Zo(a){a=a|0;return}function _o(e,f,g,h,j,k,l,m,n,o,p){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0;q=i;i=i+408|0;r=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[r>>2];r=q|0;s=q+400|0;t=i;i=i+1|0;i=i+7&-8;u=i;i=i+1|0;i=i+7&-8;v=i;i=i+12|0;i=i+7&-8;w=i;i=i+12|0;i=i+7&-8;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+12|0;i=i+7&-8;z=i;i=i+12|0;i=i+7&-8;A=i;i=i+4|0;i=i+7&-8;B=r|0;c[s>>2]=0;C=v;eu(C|0,0,12)|0;D=w;eu(D|0,0,12)|0;E=x;eu(E|0,0,12)|0;F=y;eu(F|0,0,12)|0;G=z;eu(G|0,0,12)|0;bp(g,h,s,t,u,v,w,x,y,A);h=n|0;c[o>>2]=c[h>>2];g=e|0;e=f|0;f=s;s=m+8|0;m=y+1|0;H=y+4|0;I=y+8|0;J=x+1|0;K=x+4|0;L=x+8|0;M=(j&512|0)!=0;j=w+1|0;N=w+8|0;O=w+4|0;P=z;Q=P+1|0;R=z+8|0;S=z+4|0;T=f+3|0;U=n+4|0;n=v+4|0;V=p;p=268;W=B;X=B;B=r+400|0;r=0;Y=0;a:while(1){Z=c[g>>2]|0;do{if((Z|0)!=0){if((c[Z+12>>2]|0)==(c[Z+16>>2]|0)){if((Ed[c[(c[Z>>2]|0)+36>>2]&255](Z)|0)==-1){c[g>>2]=0;_=0;break}else{_=c[g>>2]|0;break}}else{_=Z}}else{_=0}}while(0);Z=(_|0)==0;$=c[e>>2]|0;do{if(($|0)!=0){if((c[$+12>>2]|0)!=(c[$+16>>2]|0)){if(Z){aa=$;break}else{ba=p;ca=W;da=X;ea=Y;fa=309;break a}}if(!((Ed[c[(c[$>>2]|0)+36>>2]&255]($)|0)==-1)){if(Z){aa=$;break}else{ba=p;ca=W;da=X;ea=Y;fa=309;break a}}else{c[e>>2]=0;fa=15;break}}else{fa=15}}while(0);if((fa|0)==15){fa=0;if(Z){ba=p;ca=W;da=X;ea=Y;fa=309;break}else{aa=0}}b:do{switch(a[f+r|0]|0){case 1:{if((r|0)==3){ba=p;ca=W;da=X;ea=Y;fa=309;break a}$=c[g>>2]|0;ga=c[$+12>>2]|0;if((ga|0)==(c[$+16>>2]|0)){ha=(Ed[c[(c[$>>2]|0)+36>>2]&255]($)|0)&255}else{ha=a[ga]|0}if(!(ha<<24>>24>-1)){fa=41;break a}if((b[(c[s>>2]|0)+(ha<<24>>24<<1)>>1]&8192)==0){fa=41;break a}ga=c[g>>2]|0;$=ga+12|0;ia=c[$>>2]|0;if((ia|0)==(c[ga+16>>2]|0)){ja=(Ed[c[(c[ga>>2]|0)+40>>2]&255](ga)|0)&255}else{c[$>>2]=ia+1;ja=a[ia]|0}Pk(z,ja);fa=42;break};case 0:{fa=42;break};case 3:{ia=a[E]|0;$=(ia&1)==0;if($){ka=(ia&255)>>>1}else{ka=c[K>>2]|0}ga=a[F]|0;la=(ga&1)==0;if(la){ma=(ga&255)>>>1}else{ma=c[H>>2]|0}if((ka|0)==(-ma|0)){na=Y;oa=B;pa=X;qa=W;ra=p;sa=V}else{if($){ta=(ia&255)>>>1}else{ta=c[K>>2]|0}if((ta|0)!=0){if(la){ua=(ga&255)>>>1}else{ua=c[H>>2]|0}if((ua|0)!=0){la=c[g>>2]|0;va=c[la+12>>2]|0;wa=c[la+16>>2]|0;if((va|0)==(wa|0)){xa=(Ed[c[(c[la>>2]|0)+36>>2]&255](la)|0)&255;ya=c[g>>2]|0;za=xa;Aa=a[E]|0;Ba=ya;Ca=c[ya+12>>2]|0;Da=c[ya+16>>2]|0}else{za=a[va]|0;Aa=ia;Ba=la;Ca=va;Da=wa}wa=Ba+12|0;va=(Ca|0)==(Da|0);if(za<<24>>24==(a[(Aa&1)==0?J:c[L>>2]|0]|0)){if(va){Ed[c[(c[Ba>>2]|0)+40>>2]&255](Ba)|0}else{c[wa>>2]=Ca+1}wa=a[E]|0;if((wa&1)==0){Ea=(wa&255)>>>1}else{Ea=c[K>>2]|0}na=Ea>>>0>1>>>0?x:Y;oa=B;pa=X;qa=W;ra=p;sa=V;break b}if(va){Fa=(Ed[c[(c[Ba>>2]|0)+36>>2]&255](Ba)|0)&255}else{Fa=a[Ca]|0}if(!(Fa<<24>>24==(a[(a[F]&1)==0?m:c[I>>2]|0]|0))){fa=136;break a}va=c[g>>2]|0;wa=va+12|0;la=c[wa>>2]|0;if((la|0)==(c[va+16>>2]|0)){Ed[c[(c[va>>2]|0)+40>>2]&255](va)|0}else{c[wa>>2]=la+1}a[l]=1;la=a[F]|0;if((la&1)==0){Ga=(la&255)>>>1}else{Ga=c[H>>2]|0}na=Ga>>>0>1>>>0?y:Y;oa=B;pa=X;qa=W;ra=p;sa=V;break b}}if($){Ha=(ia&255)>>>1}else{Ha=c[K>>2]|0}$=c[g>>2]|0;la=c[$+12>>2]|0;wa=(la|0)==(c[$+16>>2]|0);if((Ha|0)==0){if(wa){va=(Ed[c[(c[$>>2]|0)+36>>2]&255]($)|0)&255;Ia=va;Ja=a[F]|0}else{Ia=a[la]|0;Ja=ga}if(!(Ia<<24>>24==(a[(Ja&1)==0?m:c[I>>2]|0]|0))){na=Y;oa=B;pa=X;qa=W;ra=p;sa=V;break b}ga=c[g>>2]|0;va=ga+12|0;ya=c[va>>2]|0;if((ya|0)==(c[ga+16>>2]|0)){Ed[c[(c[ga>>2]|0)+40>>2]&255](ga)|0}else{c[va>>2]=ya+1}a[l]=1;ya=a[F]|0;if((ya&1)==0){Ka=(ya&255)>>>1}else{Ka=c[H>>2]|0}na=Ka>>>0>1>>>0?y:Y;oa=B;pa=X;qa=W;ra=p;sa=V;break b}if(wa){wa=(Ed[c[(c[$>>2]|0)+36>>2]&255]($)|0)&255;La=wa;Ma=a[E]|0}else{La=a[la]|0;Ma=ia}if(!(La<<24>>24==(a[(Ma&1)==0?J:c[L>>2]|0]|0))){a[l]=1;na=Y;oa=B;pa=X;qa=W;ra=p;sa=V;break b}ia=c[g>>2]|0;la=ia+12|0;wa=c[la>>2]|0;if((wa|0)==(c[ia+16>>2]|0)){Ed[c[(c[ia>>2]|0)+40>>2]&255](ia)|0}else{c[la>>2]=wa+1}wa=a[E]|0;if((wa&1)==0){Na=(wa&255)>>>1}else{Na=c[K>>2]|0}na=Na>>>0>1>>>0?x:Y;oa=B;pa=X;qa=W;ra=p;sa=V}break};case 2:{if(!((Y|0)!=0|r>>>0<2>>>0)){if((r|0)==2){Oa=(a[T]|0)!=0}else{Oa=0}if(!(M|Oa)){na=0;oa=B;pa=X;qa=W;ra=p;sa=V;break b}}wa=a[D]|0;la=(wa&1)==0;ia=la?j:c[N>>2]|0;c:do{if((r|0)!=0?(d[f+(r-1)|0]|0)>>>0<2>>>0:0){$=ia+(la?(wa&255)>>>1:c[O>>2]|0)|0;ya=ia;while(1){if((ya|0)==($|0)){Pa=$;break}va=a[ya]|0;if(!(va<<24>>24>-1)){Pa=ya;break}if((b[(c[s>>2]|0)+(va<<24>>24<<1)>>1]&8192)==0){Pa=ya;break}else{ya=ya+1|0}}ya=Pa-ia|0;$=a[G]|0;va=($&1)==0;if(va){Qa=($&255)>>>1}else{Qa=c[S>>2]|0}if(!(ya>>>0>Qa>>>0)){if(va){va=($&255)>>>1;Ra=va;Sa=Q;Ta=va-ya+(P+1)|0}else{va=c[R>>2]|0;$=c[S>>2]|0;Ra=$;Sa=va;Ta=va+($-ya)|0}ya=Sa+Ra|0;if((Ta|0)==(ya|0)){Ua=Pa;Va=wa;Wa=aa;Xa=aa}else{$=Ta;va=ia;while(1){if((a[$]|0)!=(a[va]|0)){Ua=ia;Va=wa;Wa=aa;Xa=aa;break c}ga=$+1|0;if((ga|0)==(ya|0)){Ua=Pa;Va=wa;Wa=aa;Xa=aa;break}else{$=ga;va=va+1|0}}}}else{Ua=ia;Va=wa;Wa=aa;Xa=aa}}else{Ua=ia;Va=wa;Wa=aa;Xa=aa}}while(0);d:while(1){if((Va&1)==0){Ya=(Va&255)>>>1;Za=j}else{Ya=c[O>>2]|0;Za=c[N>>2]|0}if((Ua|0)==(Za+Ya|0)){break}wa=c[g>>2]|0;do{if((wa|0)!=0){if((c[wa+12>>2]|0)==(c[wa+16>>2]|0)){if((Ed[c[(c[wa>>2]|0)+36>>2]&255](wa)|0)==-1){c[g>>2]=0;_a=0;break}else{_a=c[g>>2]|0;break}}else{_a=wa}}else{_a=0}}while(0);wa=(_a|0)==0;do{if((Wa|0)!=0){if((c[Wa+12>>2]|0)!=(c[Wa+16>>2]|0)){if(wa){$a=Wa;ab=Xa;break}else{break d}}if(!((Ed[c[(c[Wa>>2]|0)+36>>2]&255](Wa)|0)==-1)){if(wa^(Xa|0)==0){$a=Xa;ab=Xa;break}else{break d}}else{c[e>>2]=0;bb=0;fa=173;break}}else{bb=Xa;fa=173}}while(0);if((fa|0)==173){fa=0;if(wa){break}else{$a=0;ab=bb}}ia=c[g>>2]|0;la=c[ia+12>>2]|0;if((la|0)==(c[ia+16>>2]|0)){cb=(Ed[c[(c[ia>>2]|0)+36>>2]&255](ia)|0)&255}else{cb=a[la]|0}if(!(cb<<24>>24==(a[Ua]|0))){break}la=c[g>>2]|0;ia=la+12|0;va=c[ia>>2]|0;if((va|0)==(c[la+16>>2]|0)){Ed[c[(c[la>>2]|0)+40>>2]&255](la)|0}else{c[ia>>2]=va+1}Ua=Ua+1|0;Va=a[D]|0;Wa=$a;Xa=ab}if(M){va=a[D]|0;if((va&1)==0){db=(va&255)>>>1;eb=j}else{db=c[O>>2]|0;eb=c[N>>2]|0}if((Ua|0)!=(eb+db|0)){fa=189;break a}else{na=Y;oa=B;pa=X;qa=W;ra=p;sa=V}}else{na=Y;oa=B;pa=X;qa=W;ra=p;sa=V}break};case 4:{va=0;ia=B;la=X;$=W;ya=p;ga=V;e:while(1){xa=c[g>>2]|0;do{if((xa|0)!=0){if((c[xa+12>>2]|0)==(c[xa+16>>2]|0)){if((Ed[c[(c[xa>>2]|0)+36>>2]&255](xa)|0)==-1){c[g>>2]=0;fb=0;break}else{fb=c[g>>2]|0;break}}else{fb=xa}}else{fb=0}}while(0);xa=(fb|0)==0;wa=c[e>>2]|0;do{if((wa|0)!=0){if((c[wa+12>>2]|0)!=(c[wa+16>>2]|0)){if(xa){break}else{break e}}if(!((Ed[c[(c[wa>>2]|0)+36>>2]&255](wa)|0)==-1)){if(xa){break}else{break e}}else{c[e>>2]=0;fa=202;break}}else{fa=202}}while(0);if((fa|0)==202?(fa=0,xa):0){break}wa=c[g>>2]|0;gb=c[wa+12>>2]|0;if((gb|0)==(c[wa+16>>2]|0)){hb=(Ed[c[(c[wa>>2]|0)+36>>2]&255](wa)|0)&255}else{hb=a[gb]|0}if(hb<<24>>24>-1?!((b[(c[s>>2]|0)+(hb<<24>>24<<1)>>1]&2048)==0):0){gb=c[o>>2]|0;if((gb|0)==(ga|0)){wa=(c[U>>2]|0)!=268;ib=c[h>>2]|0;jb=ga-ib|0;kb=jb>>>0<2147483647>>>0?jb<<1:-1;lb=Kt(wa?ib:0,kb)|0;if((lb|0)==0){St()}if(!wa){wa=c[h>>2]|0;c[h>>2]=lb;if((wa|0)==0){mb=lb}else{zd[c[U>>2]&511](wa);mb=c[h>>2]|0}}else{c[h>>2]=lb;mb=lb}c[U>>2]=136;lb=mb+jb|0;c[o>>2]=lb;nb=(c[h>>2]|0)+kb|0;ob=lb}else{nb=ga;ob=gb}c[o>>2]=ob+1;a[ob]=hb;pb=va+1|0;qb=ia;rb=la;sb=$;tb=ya;ub=nb}else{gb=a[C]|0;if((gb&1)==0){vb=(gb&255)>>>1}else{vb=c[n>>2]|0}if(!((vb|0)!=0&(va|0)!=0&hb<<24>>24==(a[u]|0))){break}if((la|0)==(ia|0)){gb=la-$|0;lb=gb>>>0<2147483647>>>0?gb<<1:-1;if((ya|0)==268){wb=0}else{wb=$}kb=Kt(wb,lb)|0;jb=kb;if((kb|0)==0){St()}xb=jb+(lb>>>2<<2)|0;yb=jb+(gb>>2<<2)|0;zb=jb;Ab=136}else{xb=ia;yb=la;zb=$;Ab=ya}c[yb>>2]=va;pb=0;qb=xb;rb=yb+4|0;sb=zb;tb=Ab;ub=ga}jb=c[g>>2]|0;gb=jb+12|0;lb=c[gb>>2]|0;if((lb|0)==(c[jb+16>>2]|0)){Ed[c[(c[jb>>2]|0)+40>>2]&255](jb)|0;va=pb;ia=qb;la=rb;$=sb;ya=tb;ga=ub;continue}else{c[gb>>2]=lb+1;va=pb;ia=qb;la=rb;$=sb;ya=tb;ga=ub;continue}}if(($|0)!=(la|0)&(va|0)!=0){if((la|0)==(ia|0)){lb=la-$|0;gb=lb>>>0<2147483647>>>0?lb<<1:-1;if((ya|0)==268){Bb=0}else{Bb=$}jb=Kt(Bb,gb)|0;kb=jb;if((jb|0)==0){St()}Cb=kb+(gb>>>2<<2)|0;Db=kb+(lb>>2<<2)|0;Eb=kb;Fb=136}else{Cb=ia;Db=la;Eb=$;Fb=ya}c[Db>>2]=va;Gb=Cb;Hb=Db+4|0;Ib=Eb;Jb=Fb}else{Gb=ia;Hb=la;Ib=$;Jb=ya}if((c[A>>2]|0)>0){kb=c[g>>2]|0;do{if((kb|0)!=0){if((c[kb+12>>2]|0)==(c[kb+16>>2]|0)){if((Ed[c[(c[kb>>2]|0)+36>>2]&255](kb)|0)==-1){c[g>>2]=0;Kb=0;break}else{Kb=c[g>>2]|0;break}}else{Kb=kb}}else{Kb=0}}while(0);kb=(Kb|0)==0;ya=c[e>>2]|0;do{if((ya|0)!=0){if((c[ya+12>>2]|0)!=(c[ya+16>>2]|0)){if(kb){Lb=ya;break}else{fa=263;break a}}if(!((Ed[c[(c[ya>>2]|0)+36>>2]&255](ya)|0)==-1)){if(kb){Lb=ya;break}else{fa=263;break a}}else{c[e>>2]=0;fa=256;break}}else{fa=256}}while(0);if((fa|0)==256){fa=0;if(kb){fa=263;break a}else{Lb=0}}ya=c[g>>2]|0;$=c[ya+12>>2]|0;if(($|0)==(c[ya+16>>2]|0)){Mb=(Ed[c[(c[ya>>2]|0)+36>>2]&255](ya)|0)&255}else{Mb=a[$]|0}if(!(Mb<<24>>24==(a[t]|0))){fa=263;break a}$=c[g>>2]|0;ya=$+12|0;la=c[ya>>2]|0;if((la|0)==(c[$+16>>2]|0)){Ed[c[(c[$>>2]|0)+40>>2]&255]($)|0;Nb=ga;Ob=Lb;Pb=Lb}else{c[ya>>2]=la+1;Nb=ga;Ob=Lb;Pb=Lb}while(1){la=c[g>>2]|0;do{if((la|0)!=0){if((c[la+12>>2]|0)==(c[la+16>>2]|0)){if((Ed[c[(c[la>>2]|0)+36>>2]&255](la)|0)==-1){c[g>>2]=0;Qb=0;break}else{Qb=c[g>>2]|0;break}}else{Qb=la}}else{Qb=0}}while(0);la=(Qb|0)==0;do{if((Ob|0)!=0){if((c[Ob+12>>2]|0)!=(c[Ob+16>>2]|0)){if(la){Rb=Pb;Sb=Ob;break}else{fa=287;break a}}if(!((Ed[c[(c[Ob>>2]|0)+36>>2]&255](Ob)|0)==-1)){if(la^(Pb|0)==0){Rb=Pb;Sb=Pb;break}else{fa=287;break a}}else{c[e>>2]=0;Tb=0;fa=279;break}}else{Tb=Pb;fa=279}}while(0);if((fa|0)==279){fa=0;if(la){fa=287;break a}else{Rb=Tb;Sb=0}}xa=c[g>>2]|0;ya=c[xa+12>>2]|0;if((ya|0)==(c[xa+16>>2]|0)){Ub=(Ed[c[(c[xa>>2]|0)+36>>2]&255](xa)|0)&255}else{Ub=a[ya]|0}if(!(Ub<<24>>24>-1)){fa=287;break a}if((b[(c[s>>2]|0)+(Ub<<24>>24<<1)>>1]&2048)==0){fa=287;break a}ya=c[o>>2]|0;if((ya|0)==(Nb|0)){xa=(c[U>>2]|0)!=268;$=c[h>>2]|0;ia=Nb-$|0;va=ia>>>0<2147483647>>>0?ia<<1:-1;lb=Kt(xa?$:0,va)|0;if((lb|0)==0){St()}if(!xa){xa=c[h>>2]|0;c[h>>2]=lb;if((xa|0)==0){Vb=lb}else{zd[c[U>>2]&511](xa);Vb=c[h>>2]|0}}else{c[h>>2]=lb;Vb=lb}c[U>>2]=136;lb=Vb+ia|0;c[o>>2]=lb;Wb=(c[h>>2]|0)+va|0;Xb=lb}else{Wb=Nb;Xb=ya}ya=c[g>>2]|0;lb=c[ya+12>>2]|0;if((lb|0)==(c[ya+16>>2]|0)){va=(Ed[c[(c[ya>>2]|0)+36>>2]&255](ya)|0)&255;Yb=va;Zb=c[o>>2]|0}else{Yb=a[lb]|0;Zb=Xb}c[o>>2]=Zb+1;a[Zb]=Yb;lb=(c[A>>2]|0)-1|0;c[A>>2]=lb;va=c[g>>2]|0;ya=va+12|0;ia=c[ya>>2]|0;if((ia|0)==(c[va+16>>2]|0)){Ed[c[(c[va>>2]|0)+40>>2]&255](va)|0}else{c[ya>>2]=ia+1}if((lb|0)>0){Nb=Wb;Ob=Sb;Pb=Rb}else{_b=Wb;break}}}else{_b=ga}if((c[o>>2]|0)==(c[h>>2]|0)){fa=307;break a}else{na=Y;oa=Gb;pa=Hb;qa=Ib;ra=Jb;sa=_b}break};default:{na=Y;oa=B;pa=X;qa=W;ra=p;sa=V}}}while(0);f:do{if((fa|0)==42){fa=0;if((r|0)==3){ba=p;ca=W;da=X;ea=Y;fa=309;break a}else{$b=aa;ac=aa}while(1){Z=c[g>>2]|0;do{if((Z|0)!=0){if((c[Z+12>>2]|0)==(c[Z+16>>2]|0)){if((Ed[c[(c[Z>>2]|0)+36>>2]&255](Z)|0)==-1){c[g>>2]=0;bc=0;break}else{bc=c[g>>2]|0;break}}else{bc=Z}}else{bc=0}}while(0);Z=(bc|0)==0;do{if(($b|0)!=0){if((c[$b+12>>2]|0)!=(c[$b+16>>2]|0)){if(Z){cc=$b;dc=ac;break}else{na=Y;oa=B;pa=X;qa=W;ra=p;sa=V;break f}}if(!((Ed[c[(c[$b>>2]|0)+36>>2]&255]($b)|0)==-1)){if(Z^(ac|0)==0){cc=ac;dc=ac;break}else{na=Y;oa=B;pa=X;qa=W;ra=p;sa=V;break f}}else{c[e>>2]=0;ec=0;fa=55;break}}else{ec=ac;fa=55}}while(0);if((fa|0)==55){fa=0;if(Z){na=Y;oa=B;pa=X;qa=W;ra=p;sa=V;break f}else{cc=0;dc=ec}}la=c[g>>2]|0;kb=c[la+12>>2]|0;if((kb|0)==(c[la+16>>2]|0)){fc=(Ed[c[(c[la>>2]|0)+36>>2]&255](la)|0)&255}else{fc=a[kb]|0}if(!(fc<<24>>24>-1)){na=Y;oa=B;pa=X;qa=W;ra=p;sa=V;break f}if((b[(c[s>>2]|0)+(fc<<24>>24<<1)>>1]&8192)==0){na=Y;oa=B;pa=X;qa=W;ra=p;sa=V;break f}kb=c[g>>2]|0;la=kb+12|0;lb=c[la>>2]|0;if((lb|0)==(c[kb+16>>2]|0)){gc=(Ed[c[(c[kb>>2]|0)+40>>2]&255](kb)|0)&255}else{c[la>>2]=lb+1;gc=a[lb]|0}Pk(z,gc);$b=cc;ac=dc}}}while(0);ga=r+1|0;if(ga>>>0<4>>>0){V=sa;p=ra;W=qa;X=pa;B=oa;r=ga;Y=na}else{ba=ra;ca=qa;da=pa;ea=na;fa=309;break}}g:do{if((fa|0)==41){c[k>>2]=c[k>>2]|4;hc=0;ic=W;jc=p}else if((fa|0)==136){c[k>>2]=c[k>>2]|4;hc=0;ic=W;jc=p}else if((fa|0)==189){c[k>>2]=c[k>>2]|4;hc=0;ic=W;jc=p}else if((fa|0)==263){c[k>>2]=c[k>>2]|4;hc=0;ic=Ib;jc=Jb}else if((fa|0)==287){c[k>>2]=c[k>>2]|4;hc=0;ic=Ib;jc=Jb}else if((fa|0)==307){c[k>>2]=c[k>>2]|4;hc=0;ic=Ib;jc=Jb}else if((fa|0)==309){h:do{if((ea|0)!=0){na=ea;pa=ea+1|0;qa=ea+8|0;ra=ea+4|0;Y=1;i:while(1){r=a[na]|0;if((r&1)==0){kc=(r&255)>>>1}else{kc=c[ra>>2]|0}if(!(Y>>>0<kc>>>0)){break h}r=c[g>>2]|0;do{if((r|0)!=0){if((c[r+12>>2]|0)==(c[r+16>>2]|0)){if((Ed[c[(c[r>>2]|0)+36>>2]&255](r)|0)==-1){c[g>>2]=0;lc=0;break}else{lc=c[g>>2]|0;break}}else{lc=r}}else{lc=0}}while(0);r=(lc|0)==0;Z=c[e>>2]|0;do{if((Z|0)!=0){if((c[Z+12>>2]|0)!=(c[Z+16>>2]|0)){if(r){break}else{break i}}if(!((Ed[c[(c[Z>>2]|0)+36>>2]&255](Z)|0)==-1)){if(r){break}else{break i}}else{c[e>>2]=0;fa=327;break}}else{fa=327}}while(0);if((fa|0)==327?(fa=0,r):0){break}Z=c[g>>2]|0;oa=c[Z+12>>2]|0;if((oa|0)==(c[Z+16>>2]|0)){mc=(Ed[c[(c[Z>>2]|0)+36>>2]&255](Z)|0)&255}else{mc=a[oa]|0}if((a[na]&1)==0){nc=pa}else{nc=c[qa>>2]|0}if(!(mc<<24>>24==(a[nc+Y|0]|0))){break}oa=Y+1|0;Z=c[g>>2]|0;B=Z+12|0;X=c[B>>2]|0;if((X|0)==(c[Z+16>>2]|0)){Ed[c[(c[Z>>2]|0)+40>>2]&255](Z)|0;Y=oa;continue}else{c[B>>2]=X+1;Y=oa;continue}}c[k>>2]=c[k>>2]|4;hc=0;ic=ca;jc=ba;break g}}while(0);if((ca|0)!=(da|0)){Y=a[C]|0;if((Y&1)==0){oc=(Y&255)>>>1}else{oc=c[n>>2]|0}if((oc|0)==0){hc=1;ic=ca;jc=ba}else{qa=da-4|0;pa=qa>>>0>ca>>>0;if(pa){na=ca;ra=qa;do{oa=c[na>>2]|0;c[na>>2]=c[ra>>2];c[ra>>2]=oa;na=na+4|0;ra=ra-4|0}while(na>>>0<ra>>>0);pc=a[C]|0}else{pc=Y}if((pc&1)==0){qc=(pc&255)>>>1;rc=v+1|0}else{qc=c[n>>2]|0;rc=c[v+8>>2]|0}ra=a[rc]|0;na=ra<<24>>24<1|ra<<24>>24==127;j:do{if(pa){oa=rc+qc|0;X=rc;B=ca;Z=ra;sa=na;while(1){if(!sa?(Z<<24>>24|0)!=(c[B>>2]|0):0){break j}V=(oa-X|0)>1?X+1|0:X;dc=B+4|0;ac=a[V]|0;cc=ac<<24>>24<1|ac<<24>>24==127;if(dc>>>0<qa>>>0){X=V;B=dc;Z=ac;sa=cc}else{sc=ac;tc=cc;fa=356;break}}}else{sc=ra;tc=na;fa=356}}while(0);if((fa|0)==356){if(tc){hc=1;ic=ca;jc=ba;break}if(((c[qa>>2]|0)-1|0)>>>0<sc<<24>>24>>>0){hc=1;ic=ca;jc=ba;break}}c[k>>2]=c[k>>2]|4;hc=0;ic=ca;jc=ba}}else{hc=1;ic=da;jc=ba}}}while(0);Ik(z);Ik(y);Ik(x);Ik(w);Ik(v);if((ic|0)==0){uc=400;vc=0;i=q;return hc|0}zd[jc&511](ic);uc=400;vc=0;i=q;return hc|0}function $o(a){a=a|0;var b=0;b=dd(8)|0;lk(b,a);ac(b|0,18504,40)}function ap(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;d=i;i=i+160|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+120|0;o=d+128|0;p=d+136|0;q=d+144|0;r=d+152|0;s=n|0;c[s>>2]=m;t=n+4|0;c[t>>2]=268;u=m+100|0;dl(p,h);m=p|0;v=c[m>>2]|0;if(!((c[6536]|0)==-1)){c[l>>2]=26144;c[l+4>>2]=30;c[l+8>>2]=0;Ck(26144,l,160)}l=(c[6537]|0)-1|0;w=c[v+8>>2]|0;if((c[v+12>>2]|0)-w>>2>>>0>l>>>0?(v=c[w+(l<<2)>>2]|0,(v|0)!=0):0){l=v;a[q]=0;w=f|0;f=c[w>>2]|0;c[r>>2]=f;if(_o(e,r,g,p,c[h+4>>2]|0,j,q,l,n,o,u)|0){u=k;if((a[u]&1)==0){a[k+1|0]=0;a[u]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}u=v;if((a[q]|0)!=0){Pk(k,Bd[c[(c[u>>2]|0)+28>>2]&127](l,45)|0)}q=Bd[c[(c[u>>2]|0)+28>>2]&127](l,48)|0;l=c[s>>2]|0;u=c[o>>2]|0;o=u-1|0;a:do{if(l>>>0<o>>>0){v=l;while(1){n=v+1|0;if(!((a[v]|0)==q<<24>>24)){x=v;break a}if(n>>>0<o>>>0){v=n}else{x=n;break}}}else{x=l}}while(0);ws(k,x,u)|0}u=e|0;e=c[u>>2]|0;do{if((e|0)!=0){if((c[e+12>>2]|0)==(c[e+16>>2]|0)){if((Ed[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1){c[u>>2]=0;y=0;break}else{y=c[u>>2]|0;break}}else{y=e}}else{y=0}}while(0);e=(y|0)==0;do{if((f|0)!=0){if((c[f+12>>2]|0)!=(c[f+16>>2]|0)){if(e){break}else{z=36;break}}if(!((Ed[c[(c[f>>2]|0)+36>>2]&255](f)|0)==-1)){if(e^(f|0)==0){break}else{z=36;break}}else{c[w>>2]=0;z=34;break}}else{z=34}}while(0);if((z|0)==34?e:0){z=36}if((z|0)==36){c[j>>2]=c[j>>2]|2}c[b>>2]=c[u>>2];fk(c[m>>2]|0)|0;m=c[s>>2]|0;c[s>>2]=0;if((m|0)==0){A=100;B=0;i=d;return}zd[c[t>>2]&511](m);A=100;B=0;i=d;return}d=dd(4)|0;ht(d);ac(d|0,18472,230)}function bp(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0;n=i;i=i+176|0;o=n|0;p=n+16|0;q=n+32|0;r=n+40|0;s=n+56|0;t=n+72|0;u=n+88|0;v=n+104|0;w=n+112|0;x=n+128|0;y=n+144|0;z=n+160|0;if(b){b=c[d>>2]|0;if(!((c[6654]|0)==-1)){c[p>>2]=26616;c[p+4>>2]=30;c[p+8>>2]=0;Ck(26616,p,160)}p=(c[6655]|0)-1|0;A=c[b+8>>2]|0;if(!((c[b+12>>2]|0)-A>>2>>>0>p>>>0)){B=dd(4)|0;C=B;ht(C);ac(B|0,18472,230)}b=c[A+(p<<2)>>2]|0;if((b|0)==0){B=dd(4)|0;C=B;ht(C);ac(B|0,18472,230)}B=b;Ad[c[(c[b>>2]|0)+44>>2]&127](q,B);C=e;D=c[q>>2]|0;a[C]=D;D=D>>8;a[C+1|0]=D;D=D>>8;a[C+2|0]=D;D=D>>8;a[C+3|0]=D;C=b;Ad[c[(c[C>>2]|0)+32>>2]&127](r,B);q=l;if((a[q]&1)==0){a[l+1|0]=0;a[q]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Nk(l,0);p=r;c[q>>2]=c[p>>2];c[q+4>>2]=c[p+4>>2];c[q+8>>2]=c[p+8>>2];eu(p|0,0,12)|0;Ik(r);Ad[c[(c[C>>2]|0)+28>>2]&127](s,B);r=k;if((a[r]&1)==0){a[k+1|0]=0;a[r]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}Nk(k,0);p=s;c[r>>2]=c[p>>2];c[r+4>>2]=c[p+4>>2];c[r+8>>2]=c[p+8>>2];eu(p|0,0,12)|0;Ik(s);s=b;a[f]=Ed[c[(c[s>>2]|0)+12>>2]&255](B)|0;a[g]=Ed[c[(c[s>>2]|0)+16>>2]&255](B)|0;Ad[c[(c[C>>2]|0)+20>>2]&127](t,B);s=h;if((a[s]&1)==0){a[h+1|0]=0;a[s]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}Nk(h,0);p=t;c[s>>2]=c[p>>2];c[s+4>>2]=c[p+4>>2];c[s+8>>2]=c[p+8>>2];eu(p|0,0,12)|0;Ik(t);Ad[c[(c[C>>2]|0)+24>>2]&127](u,B);C=j;if((a[C]&1)==0){a[j+1|0]=0;a[C]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Nk(j,0);t=u;c[C>>2]=c[t>>2];c[C+4>>2]=c[t+4>>2];c[C+8>>2]=c[t+8>>2];eu(t|0,0,12)|0;Ik(u);E=Ed[c[(c[b>>2]|0)+36>>2]&255](B)|0;c[m>>2]=E;i=n;return}else{B=c[d>>2]|0;if(!((c[6656]|0)==-1)){c[o>>2]=26624;c[o+4>>2]=30;c[o+8>>2]=0;Ck(26624,o,160)}o=(c[6657]|0)-1|0;d=c[B+8>>2]|0;if(!((c[B+12>>2]|0)-d>>2>>>0>o>>>0)){F=dd(4)|0;G=F;ht(G);ac(F|0,18472,230)}B=c[d+(o<<2)>>2]|0;if((B|0)==0){F=dd(4)|0;G=F;ht(G);ac(F|0,18472,230)}F=B;Ad[c[(c[B>>2]|0)+44>>2]&127](v,F);G=e;D=c[v>>2]|0;a[G]=D;D=D>>8;a[G+1|0]=D;D=D>>8;a[G+2|0]=D;D=D>>8;a[G+3|0]=D;G=B;Ad[c[(c[G>>2]|0)+32>>2]&127](w,F);v=l;if((a[v]&1)==0){a[l+1|0]=0;a[v]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Nk(l,0);l=w;c[v>>2]=c[l>>2];c[v+4>>2]=c[l+4>>2];c[v+8>>2]=c[l+8>>2];eu(l|0,0,12)|0;Ik(w);Ad[c[(c[G>>2]|0)+28>>2]&127](x,F);w=k;if((a[w]&1)==0){a[k+1|0]=0;a[w]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}Nk(k,0);k=x;c[w>>2]=c[k>>2];c[w+4>>2]=c[k+4>>2];c[w+8>>2]=c[k+8>>2];eu(k|0,0,12)|0;Ik(x);x=B;a[f]=Ed[c[(c[x>>2]|0)+12>>2]&255](F)|0;a[g]=Ed[c[(c[x>>2]|0)+16>>2]&255](F)|0;Ad[c[(c[G>>2]|0)+20>>2]&127](y,F);x=h;if((a[x]&1)==0){a[h+1|0]=0;a[x]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}Nk(h,0);h=y;c[x>>2]=c[h>>2];c[x+4>>2]=c[h+4>>2];c[x+8>>2]=c[h+8>>2];eu(h|0,0,12)|0;Ik(y);Ad[c[(c[G>>2]|0)+24>>2]&127](z,F);G=j;if((a[G]&1)==0){a[j+1|0]=0;a[G]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Nk(j,0);j=z;c[G>>2]=c[j>>2];c[G+4>>2]=c[j+4>>2];c[G+8>>2]=c[j+8>>2];eu(j|0,0,12)|0;Ik(z);E=Ed[c[(c[B>>2]|0)+36>>2]&255](F)|0;c[m>>2]=E;i=n;return}}function cp(a){a=a|0;dk(a|0);Nt(a);return}function dp(a){a=a|0;dk(a|0);return}function ep(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;d=i;i=i+600|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+416|0;o=d+424|0;p=d+432|0;q=d+440|0;r=d+448|0;s=d+456|0;t=d+496|0;u=n|0;c[u>>2]=m;v=n+4|0;c[v>>2]=268;w=m+400|0;dl(p,h);m=p|0;x=c[m>>2]|0;if(!((c[6534]|0)==-1)){c[l>>2]=26136;c[l+4>>2]=30;c[l+8>>2]=0;Ck(26136,l,160)}l=(c[6535]|0)-1|0;y=c[x+8>>2]|0;if((c[x+12>>2]|0)-y>>2>>>0>l>>>0?(x=c[y+(l<<2)>>2]|0,(x|0)!=0):0){l=x;a[q]=0;y=f|0;c[r>>2]=c[y>>2];do{if(fp(e,r,g,p,c[h+4>>2]|0,j,q,l,n,o,w)|0){f=s|0;Md[c[(c[x>>2]|0)+48>>2]&15](l,5256,5266,f)|0;z=t|0;A=c[o>>2]|0;B=c[u>>2]|0;C=A-B|0;if((C|0)>392){D=It((C>>2)+2|0)|0;if((D|0)==0){St();E=0;F=0}else{E=D;F=D}}else{E=z;F=0}if((a[q]|0)==0){G=E}else{a[E]=45;G=E+1|0}if(B>>>0<A>>>0){A=s+40|0;D=s;C=G;H=B;while(1){B=c[H>>2]|0;I=f;while(1){J=I+4|0;if((c[I>>2]|0)==(B|0)){K=I;break}if((J|0)==(A|0)){K=A;break}else{I=J}}a[C]=a[5256+(K-D>>2)|0]|0;I=H+4|0;B=C+1|0;if(I>>>0<(c[o>>2]|0)>>>0){C=B;H=I}else{L=B;break}}}else{L=G}a[L]=0;H=Nc(z|0,1624,(C=i,i=i+8|0,c[C>>2]=k,C)|0)|0;i=C;if((H|0)==1){if((F|0)==0){break}Jt(F);break}H=dd(8)|0;lk(H,1224);ac(H|0,18504,40)}}while(0);F=e|0;e=c[F>>2]|0;do{if((e|0)!=0){k=c[e+12>>2]|0;if((k|0)==(c[e+16>>2]|0)){M=Ed[c[(c[e>>2]|0)+36>>2]&255](e)|0}else{M=c[k>>2]|0}if((M|0)==-1){c[F>>2]=0;N=1;break}else{N=(c[F>>2]|0)==0;break}}else{N=1}}while(0);M=c[y>>2]|0;do{if((M|0)!=0){e=c[M+12>>2]|0;if((e|0)==(c[M+16>>2]|0)){O=Ed[c[(c[M>>2]|0)+36>>2]&255](M)|0}else{O=c[e>>2]|0}if(!((O|0)==-1)){if(N){break}else{P=49;break}}else{c[y>>2]=0;P=47;break}}else{P=47}}while(0);if((P|0)==47?N:0){P=49}if((P|0)==49){c[j>>2]=c[j>>2]|2}c[b>>2]=c[F>>2];fk(c[m>>2]|0)|0;m=c[u>>2]|0;c[u>>2]=0;if((m|0)==0){Q=400;R=0;i=d;return}zd[c[v>>2]&511](m);Q=400;R=0;i=d;return}d=dd(4)|0;ht(d);ac(d|0,18472,230)}function fp(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0;p=i;i=i+408|0;q=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[q>>2];q=p|0;r=p+400|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+12|0;i=i+7&-8;v=i;i=i+12|0;i=i+7&-8;w=i;i=i+12|0;i=i+7&-8;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+12|0;i=i+7&-8;z=i;i=i+4|0;i=i+7&-8;A=q|0;c[r>>2]=0;B=u;eu(B|0,0,12)|0;C=v;eu(C|0,0,12)|0;D=w;eu(D|0,0,12)|0;E=x;eu(E|0,0,12)|0;F=y;eu(F|0,0,12)|0;hp(f,g,r,s,t,u,v,w,x,z);g=m|0;c[n>>2]=c[g>>2];f=b|0;b=e|0;e=r;r=l;G=x+4|0;H=x+8|0;I=w+4|0;J=w+8|0;K=(h&512|0)!=0;h=v+4|0;L=v+8|0;M=y+4|0;N=y+8|0;O=e+3|0;P=m+4|0;m=u+4|0;Q=o;o=268;R=A;S=A;A=q+400|0;q=0;T=0;a:while(1){U=c[f>>2]|0;do{if((U|0)!=0){V=c[U+12>>2]|0;if((V|0)==(c[U+16>>2]|0)){W=Ed[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{W=c[V>>2]|0}if((W|0)==-1){c[f>>2]=0;X=1;break}else{X=(c[f>>2]|0)==0;break}}else{X=1}}while(0);U=c[b>>2]|0;do{if((U|0)!=0){V=c[U+12>>2]|0;if((V|0)==(c[U+16>>2]|0)){Y=Ed[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{Y=c[V>>2]|0}if(!((Y|0)==-1)){if(X){Z=U;break}else{_=o;$=R;aa=S;ba=T;ca=320;break a}}else{c[b>>2]=0;ca=16;break}}else{ca=16}}while(0);if((ca|0)==16){ca=0;if(X){_=o;$=R;aa=S;ba=T;ca=320;break}else{Z=0}}b:do{switch(a[e+q|0]|0){case 4:{U=0;V=A;da=S;ea=R;fa=o;ga=Q;c:while(1){ha=c[f>>2]|0;do{if((ha|0)!=0){ia=c[ha+12>>2]|0;if((ia|0)==(c[ha+16>>2]|0)){ja=Ed[c[(c[ha>>2]|0)+36>>2]&255](ha)|0}else{ja=c[ia>>2]|0}if((ja|0)==-1){c[f>>2]=0;ka=1;break}else{ka=(c[f>>2]|0)==0;break}}else{ka=1}}while(0);ha=c[b>>2]|0;do{if((ha|0)!=0){ia=c[ha+12>>2]|0;if((ia|0)==(c[ha+16>>2]|0)){la=Ed[c[(c[ha>>2]|0)+36>>2]&255](ha)|0}else{la=c[ia>>2]|0}if(!((la|0)==-1)){if(ka){break}else{break c}}else{c[b>>2]=0;ca=206;break}}else{ca=206}}while(0);if((ca|0)==206?(ca=0,ka):0){break}ha=c[f>>2]|0;ia=c[ha+12>>2]|0;if((ia|0)==(c[ha+16>>2]|0)){ma=Ed[c[(c[ha>>2]|0)+36>>2]&255](ha)|0}else{ma=c[ia>>2]|0}if(Cd[c[(c[r>>2]|0)+12>>2]&63](l,2048,ma)|0){ia=c[n>>2]|0;if((ia|0)==(ga|0)){ha=(c[P>>2]|0)!=268;na=c[g>>2]|0;oa=ga-na|0;pa=oa>>>0<2147483647>>>0?oa<<1:-1;qa=oa>>2;if(ha){ra=na}else{ra=0}na=Kt(ra,pa)|0;oa=na;if((na|0)==0){St()}if(!ha){ha=c[g>>2]|0;c[g>>2]=oa;if((ha|0)==0){sa=oa}else{zd[c[P>>2]&511](ha);sa=c[g>>2]|0}}else{c[g>>2]=oa;sa=oa}c[P>>2]=136;oa=sa+(qa<<2)|0;c[n>>2]=oa;ta=(c[g>>2]|0)+(pa>>>2<<2)|0;ua=oa}else{ta=ga;ua=ia}c[n>>2]=ua+4;c[ua>>2]=ma;va=U+1|0;wa=V;xa=da;ya=ea;za=fa;Aa=ta}else{ia=a[B]|0;if((ia&1)==0){Ba=(ia&255)>>>1}else{Ba=c[m>>2]|0}if(!((Ba|0)!=0&(U|0)!=0&(ma|0)==(c[t>>2]|0))){break}if((da|0)==(V|0)){ia=(fa|0)!=268;oa=da-ea|0;pa=oa>>>0<2147483647>>>0?oa<<1:-1;if(ia){Ca=ea}else{Ca=0}ia=Kt(Ca,pa)|0;qa=ia;if((ia|0)==0){St()}Da=qa+(pa>>>2<<2)|0;Ea=qa+(oa>>2<<2)|0;Fa=qa;Ga=136}else{Da=V;Ea=da;Fa=ea;Ga=fa}c[Ea>>2]=U;va=0;wa=Da;xa=Ea+4|0;ya=Fa;za=Ga;Aa=ga}qa=c[f>>2]|0;oa=qa+12|0;pa=c[oa>>2]|0;if((pa|0)==(c[qa+16>>2]|0)){Ed[c[(c[qa>>2]|0)+40>>2]&255](qa)|0;U=va;V=wa;da=xa;ea=ya;fa=za;ga=Aa;continue}else{c[oa>>2]=pa+4;U=va;V=wa;da=xa;ea=ya;fa=za;ga=Aa;continue}}if((ea|0)!=(da|0)&(U|0)!=0){if((da|0)==(V|0)){pa=(fa|0)!=268;oa=da-ea|0;qa=oa>>>0<2147483647>>>0?oa<<1:-1;if(pa){Ha=ea}else{Ha=0}pa=Kt(Ha,qa)|0;ia=pa;if((pa|0)==0){St()}Ia=ia+(qa>>>2<<2)|0;Ja=ia+(oa>>2<<2)|0;Ka=ia;La=136}else{Ia=V;Ja=da;Ka=ea;La=fa}c[Ja>>2]=U;Ma=Ia;Na=Ja+4|0;Oa=Ka;Pa=La}else{Ma=V;Na=da;Oa=ea;Pa=fa}ia=c[z>>2]|0;if((ia|0)>0){oa=c[f>>2]|0;do{if((oa|0)!=0){qa=c[oa+12>>2]|0;if((qa|0)==(c[oa+16>>2]|0)){Qa=Ed[c[(c[oa>>2]|0)+36>>2]&255](oa)|0}else{Qa=c[qa>>2]|0}if((Qa|0)==-1){c[f>>2]=0;Ra=1;break}else{Ra=(c[f>>2]|0)==0;break}}else{Ra=1}}while(0);oa=c[b>>2]|0;do{if((oa|0)!=0){fa=c[oa+12>>2]|0;if((fa|0)==(c[oa+16>>2]|0)){Sa=Ed[c[(c[oa>>2]|0)+36>>2]&255](oa)|0}else{Sa=c[fa>>2]|0}if(!((Sa|0)==-1)){if(Ra){Ta=oa;break}else{ca=272;break a}}else{c[b>>2]=0;ca=266;break}}else{ca=266}}while(0);if((ca|0)==266){ca=0;if(Ra){ca=272;break a}else{Ta=0}}oa=c[f>>2]|0;fa=c[oa+12>>2]|0;if((fa|0)==(c[oa+16>>2]|0)){Ua=Ed[c[(c[oa>>2]|0)+36>>2]&255](oa)|0}else{Ua=c[fa>>2]|0}if((Ua|0)!=(c[s>>2]|0)){ca=272;break a}fa=c[f>>2]|0;oa=fa+12|0;ea=c[oa>>2]|0;if((ea|0)==(c[fa+16>>2]|0)){Ed[c[(c[fa>>2]|0)+40>>2]&255](fa)|0;Va=ga;Wa=Ta;Xa=ia;Ya=Ta}else{c[oa>>2]=ea+4;Va=ga;Wa=Ta;Xa=ia;Ya=Ta}while(1){ea=c[f>>2]|0;do{if((ea|0)!=0){oa=c[ea+12>>2]|0;if((oa|0)==(c[ea+16>>2]|0)){Za=Ed[c[(c[ea>>2]|0)+36>>2]&255](ea)|0}else{Za=c[oa>>2]|0}if((Za|0)==-1){c[f>>2]=0;_a=1;break}else{_a=(c[f>>2]|0)==0;break}}else{_a=1}}while(0);do{if((Wa|0)!=0){ea=c[Wa+12>>2]|0;if((ea|0)==(c[Wa+16>>2]|0)){$a=Ed[c[(c[Wa>>2]|0)+36>>2]&255](Wa)|0}else{$a=c[ea>>2]|0}if(!(($a|0)==-1)){if(_a^(Ya|0)==0){ab=Ya;bb=Ya;break}else{ca=296;break a}}else{c[b>>2]=0;cb=0;ca=289;break}}else{cb=Ya;ca=289}}while(0);if((ca|0)==289){ca=0;if(_a){ca=296;break a}else{ab=cb;bb=0}}ea=c[f>>2]|0;oa=c[ea+12>>2]|0;if((oa|0)==(c[ea+16>>2]|0)){db=Ed[c[(c[ea>>2]|0)+36>>2]&255](ea)|0}else{db=c[oa>>2]|0}if(!(Cd[c[(c[r>>2]|0)+12>>2]&63](l,2048,db)|0)){ca=296;break a}oa=c[n>>2]|0;if((oa|0)==(Va|0)){ea=(c[P>>2]|0)!=268;fa=c[g>>2]|0;da=Va-fa|0;V=da>>>0<2147483647>>>0?da<<1:-1;U=da>>2;if(ea){eb=fa}else{eb=0}fa=Kt(eb,V)|0;da=fa;if((fa|0)==0){St()}if(!ea){ea=c[g>>2]|0;c[g>>2]=da;if((ea|0)==0){fb=da}else{zd[c[P>>2]&511](ea);fb=c[g>>2]|0}}else{c[g>>2]=da;fb=da}c[P>>2]=136;da=fb+(U<<2)|0;c[n>>2]=da;gb=(c[g>>2]|0)+(V>>>2<<2)|0;hb=da}else{gb=Va;hb=oa}oa=c[f>>2]|0;da=c[oa+12>>2]|0;if((da|0)==(c[oa+16>>2]|0)){V=Ed[c[(c[oa>>2]|0)+36>>2]&255](oa)|0;ib=V;jb=c[n>>2]|0}else{ib=c[da>>2]|0;jb=hb}c[n>>2]=jb+4;c[jb>>2]=ib;da=Xa-1|0;c[z>>2]=da;V=c[f>>2]|0;oa=V+12|0;U=c[oa>>2]|0;if((U|0)==(c[V+16>>2]|0)){Ed[c[(c[V>>2]|0)+40>>2]&255](V)|0}else{c[oa>>2]=U+4}if((da|0)>0){Va=gb;Wa=bb;Xa=da;Ya=ab}else{kb=gb;break}}}else{kb=ga}if((c[n>>2]|0)==(c[g>>2]|0)){ca=318;break a}else{lb=T;mb=Ma;nb=Na;ob=Oa;pb=Pa;qb=kb}break};case 2:{if(!((T|0)!=0|q>>>0<2>>>0)){if((q|0)==2){rb=(a[O]|0)!=0}else{rb=0}if(!(K|rb)){lb=0;mb=A;nb=S;ob=R;pb=o;qb=Q;break b}}ia=a[C]|0;da=(ia&1)==0?h:c[L>>2]|0;d:do{if((q|0)!=0?(d[e+(q-1)|0]|0)>>>0<2>>>0:0){U=da;oa=ia;while(1){if((oa&1)==0){sb=(oa&255)>>>1;tb=h}else{sb=c[h>>2]|0;tb=c[L>>2]|0}if((U|0)==(tb+(sb<<2)|0)){ub=oa;break}if(!(Cd[c[(c[r>>2]|0)+12>>2]&63](l,8192,c[U>>2]|0)|0)){ca=147;break}U=U+4|0;oa=a[C]|0}if((ca|0)==147){ca=0;ub=a[C]|0}oa=(ub&1)==0;V=U-(oa?h:c[L>>2]|0)>>2;ea=a[F]|0;fa=(ea&1)==0;if(fa){vb=(ea&255)>>>1}else{vb=c[M>>2]|0}e:do{if(!(V>>>0>vb>>>0)){if(fa){wb=(ea&255)>>>1;xb=M;yb=M+(((ea&255)>>>1)-V<<2)|0}else{qa=c[N>>2]|0;pa=c[M>>2]|0;wb=pa;xb=qa;yb=qa+(pa-V<<2)|0}pa=xb+(wb<<2)|0;if((yb|0)==(pa|0)){zb=U;Ab=ub;Bb=Z;Cb=Z;break d}else{Db=yb;Eb=oa?h:c[L>>2]|0}while(1){if((c[Db>>2]|0)!=(c[Eb>>2]|0)){break e}qa=Db+4|0;if((qa|0)==(pa|0)){zb=U;Ab=ub;Bb=Z;Cb=Z;break d}else{Db=qa;Eb=Eb+4|0}}}}while(0);zb=oa?h:c[L>>2]|0;Ab=ub;Bb=Z;Cb=Z}else{zb=da;Ab=ia;Bb=Z;Cb=Z}}while(0);f:while(1){if((Ab&1)==0){Fb=(Ab&255)>>>1;Gb=h}else{Fb=c[h>>2]|0;Gb=c[L>>2]|0}if((zb|0)==(Gb+(Fb<<2)|0)){break}ia=c[f>>2]|0;do{if((ia|0)!=0){da=c[ia+12>>2]|0;if((da|0)==(c[ia+16>>2]|0)){Hb=Ed[c[(c[ia>>2]|0)+36>>2]&255](ia)|0}else{Hb=c[da>>2]|0}if((Hb|0)==-1){c[f>>2]=0;Ib=1;break}else{Ib=(c[f>>2]|0)==0;break}}else{Ib=1}}while(0);do{if((Bb|0)!=0){ia=c[Bb+12>>2]|0;if((ia|0)==(c[Bb+16>>2]|0)){Jb=Ed[c[(c[Bb>>2]|0)+36>>2]&255](Bb)|0}else{Jb=c[ia>>2]|0}if(!((Jb|0)==-1)){if(Ib^(Cb|0)==0){Kb=Cb;Lb=Cb;break}else{break f}}else{c[b>>2]=0;Mb=0;ca=177;break}}else{Mb=Cb;ca=177}}while(0);if((ca|0)==177){ca=0;if(Ib){break}else{Kb=0;Lb=Mb}}ia=c[f>>2]|0;oa=c[ia+12>>2]|0;if((oa|0)==(c[ia+16>>2]|0)){Nb=Ed[c[(c[ia>>2]|0)+36>>2]&255](ia)|0}else{Nb=c[oa>>2]|0}if((Nb|0)!=(c[zb>>2]|0)){break}oa=c[f>>2]|0;ia=oa+12|0;da=c[ia>>2]|0;if((da|0)==(c[oa+16>>2]|0)){Ed[c[(c[oa>>2]|0)+40>>2]&255](oa)|0}else{c[ia>>2]=da+4}zb=zb+4|0;Ab=a[C]|0;Bb=Kb;Cb=Lb}if(K){da=a[C]|0;if((da&1)==0){Ob=(da&255)>>>1;Pb=h}else{Ob=c[h>>2]|0;Pb=c[L>>2]|0}if((zb|0)!=(Pb+(Ob<<2)|0)){ca=192;break a}else{lb=T;mb=A;nb=S;ob=R;pb=o;qb=Q}}else{lb=T;mb=A;nb=S;ob=R;pb=o;qb=Q}break};case 1:{if((q|0)==3){_=o;$=R;aa=S;ba=T;ca=320;break a}da=c[f>>2]|0;ia=c[da+12>>2]|0;if((ia|0)==(c[da+16>>2]|0)){Qb=Ed[c[(c[da>>2]|0)+36>>2]&255](da)|0}else{Qb=c[ia>>2]|0}if(!(Cd[c[(c[r>>2]|0)+12>>2]&63](l,8192,Qb)|0)){ca=41;break a}ia=c[f>>2]|0;da=ia+12|0;oa=c[da>>2]|0;if((oa|0)==(c[ia+16>>2]|0)){Rb=Ed[c[(c[ia>>2]|0)+40>>2]&255](ia)|0}else{c[da>>2]=oa+4;Rb=c[oa>>2]|0}Yk(y,Rb);ca=42;break};case 0:{ca=42;break};case 3:{oa=a[D]|0;da=(oa&1)==0;if(da){Sb=(oa&255)>>>1}else{Sb=c[I>>2]|0}ia=a[E]|0;ga=(ia&1)==0;if(ga){Tb=(ia&255)>>>1}else{Tb=c[G>>2]|0}if((Sb|0)==(-Tb|0)){lb=T;mb=A;nb=S;ob=R;pb=o;qb=Q}else{if(da){Ub=(oa&255)>>>1}else{Ub=c[I>>2]|0}if((Ub|0)!=0){if(ga){Vb=(ia&255)>>>1}else{Vb=c[G>>2]|0}if((Vb|0)!=0){ga=c[f>>2]|0;U=c[ga+12>>2]|0;if((U|0)==(c[ga+16>>2]|0)){V=Ed[c[(c[ga>>2]|0)+36>>2]&255](ga)|0;Wb=V;Xb=a[D]|0}else{Wb=c[U>>2]|0;Xb=oa}U=c[f>>2]|0;V=U+12|0;ga=c[V>>2]|0;ea=(ga|0)==(c[U+16>>2]|0);if((Wb|0)==(c[((Xb&1)==0?I:c[J>>2]|0)>>2]|0)){if(ea){Ed[c[(c[U>>2]|0)+40>>2]&255](U)|0}else{c[V>>2]=ga+4}V=a[D]|0;if((V&1)==0){Yb=(V&255)>>>1}else{Yb=c[I>>2]|0}lb=Yb>>>0>1>>>0?w:T;mb=A;nb=S;ob=R;pb=o;qb=Q;break b}if(ea){Zb=Ed[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{Zb=c[ga>>2]|0}if((Zb|0)!=(c[((a[E]&1)==0?G:c[H>>2]|0)>>2]|0)){ca=134;break a}ga=c[f>>2]|0;U=ga+12|0;ea=c[U>>2]|0;if((ea|0)==(c[ga+16>>2]|0)){Ed[c[(c[ga>>2]|0)+40>>2]&255](ga)|0}else{c[U>>2]=ea+4}a[k]=1;ea=a[E]|0;if((ea&1)==0){_b=(ea&255)>>>1}else{_b=c[G>>2]|0}lb=_b>>>0>1>>>0?x:T;mb=A;nb=S;ob=R;pb=o;qb=Q;break b}}if(da){$b=(oa&255)>>>1}else{$b=c[I>>2]|0}da=c[f>>2]|0;ea=c[da+12>>2]|0;U=(ea|0)==(c[da+16>>2]|0);if(($b|0)==0){if(U){ga=Ed[c[(c[da>>2]|0)+36>>2]&255](da)|0;ac=ga;bc=a[E]|0}else{ac=c[ea>>2]|0;bc=ia}if((ac|0)!=(c[((bc&1)==0?G:c[H>>2]|0)>>2]|0)){lb=T;mb=A;nb=S;ob=R;pb=o;qb=Q;break b}ia=c[f>>2]|0;ga=ia+12|0;V=c[ga>>2]|0;if((V|0)==(c[ia+16>>2]|0)){Ed[c[(c[ia>>2]|0)+40>>2]&255](ia)|0}else{c[ga>>2]=V+4}a[k]=1;V=a[E]|0;if((V&1)==0){cc=(V&255)>>>1}else{cc=c[G>>2]|0}lb=cc>>>0>1>>>0?x:T;mb=A;nb=S;ob=R;pb=o;qb=Q;break b}if(U){U=Ed[c[(c[da>>2]|0)+36>>2]&255](da)|0;dc=U;ec=a[D]|0}else{dc=c[ea>>2]|0;ec=oa}if((dc|0)!=(c[((ec&1)==0?I:c[J>>2]|0)>>2]|0)){a[k]=1;lb=T;mb=A;nb=S;ob=R;pb=o;qb=Q;break b}oa=c[f>>2]|0;ea=oa+12|0;U=c[ea>>2]|0;if((U|0)==(c[oa+16>>2]|0)){Ed[c[(c[oa>>2]|0)+40>>2]&255](oa)|0}else{c[ea>>2]=U+4}U=a[D]|0;if((U&1)==0){fc=(U&255)>>>1}else{fc=c[I>>2]|0}lb=fc>>>0>1>>>0?w:T;mb=A;nb=S;ob=R;pb=o;qb=Q}break};default:{lb=T;mb=A;nb=S;ob=R;pb=o;qb=Q}}}while(0);g:do{if((ca|0)==42){ca=0;if((q|0)==3){_=o;$=R;aa=S;ba=T;ca=320;break a}else{gc=Z;hc=Z}while(1){U=c[f>>2]|0;do{if((U|0)!=0){ea=c[U+12>>2]|0;if((ea|0)==(c[U+16>>2]|0)){ic=Ed[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{ic=c[ea>>2]|0}if((ic|0)==-1){c[f>>2]=0;jc=1;break}else{jc=(c[f>>2]|0)==0;break}}else{jc=1}}while(0);do{if((gc|0)!=0){U=c[gc+12>>2]|0;if((U|0)==(c[gc+16>>2]|0)){kc=Ed[c[(c[gc>>2]|0)+36>>2]&255](gc)|0}else{kc=c[U>>2]|0}if(!((kc|0)==-1)){if(jc^(hc|0)==0){lc=hc;mc=hc;break}else{lb=T;mb=A;nb=S;ob=R;pb=o;qb=Q;break g}}else{c[b>>2]=0;nc=0;ca=56;break}}else{nc=hc;ca=56}}while(0);if((ca|0)==56){ca=0;if(jc){lb=T;mb=A;nb=S;ob=R;pb=o;qb=Q;break g}else{lc=0;mc=nc}}U=c[f>>2]|0;ea=c[U+12>>2]|0;if((ea|0)==(c[U+16>>2]|0)){oc=Ed[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{oc=c[ea>>2]|0}if(!(Cd[c[(c[r>>2]|0)+12>>2]&63](l,8192,oc)|0)){lb=T;mb=A;nb=S;ob=R;pb=o;qb=Q;break g}ea=c[f>>2]|0;U=ea+12|0;oa=c[U>>2]|0;if((oa|0)==(c[ea+16>>2]|0)){pc=Ed[c[(c[ea>>2]|0)+40>>2]&255](ea)|0}else{c[U>>2]=oa+4;pc=c[oa>>2]|0}Yk(y,pc);gc=lc;hc=mc}}}while(0);oa=q+1|0;if(oa>>>0<4>>>0){Q=qb;o=pb;R=ob;S=nb;A=mb;q=oa;T=lb}else{_=pb;$=ob;aa=nb;ba=lb;ca=320;break}}h:do{if((ca|0)==41){c[j>>2]=c[j>>2]|4;qc=0;rc=R;sc=o}else if((ca|0)==134){c[j>>2]=c[j>>2]|4;qc=0;rc=R;sc=o}else if((ca|0)==192){c[j>>2]=c[j>>2]|4;qc=0;rc=R;sc=o}else if((ca|0)==272){c[j>>2]=c[j>>2]|4;qc=0;rc=Oa;sc=Pa}else if((ca|0)==296){c[j>>2]=c[j>>2]|4;qc=0;rc=Oa;sc=Pa}else if((ca|0)==318){c[j>>2]=c[j>>2]|4;qc=0;rc=Oa;sc=Pa}else if((ca|0)==320){i:do{if((ba|0)!=0){lb=ba;nb=ba+4|0;ob=ba+8|0;pb=1;j:while(1){T=a[lb]|0;if((T&1)==0){tc=(T&255)>>>1}else{tc=c[nb>>2]|0}if(!(pb>>>0<tc>>>0)){break i}T=c[f>>2]|0;do{if((T|0)!=0){q=c[T+12>>2]|0;if((q|0)==(c[T+16>>2]|0)){uc=Ed[c[(c[T>>2]|0)+36>>2]&255](T)|0}else{uc=c[q>>2]|0}if((uc|0)==-1){c[f>>2]=0;vc=1;break}else{vc=(c[f>>2]|0)==0;break}}else{vc=1}}while(0);T=c[b>>2]|0;do{if((T|0)!=0){q=c[T+12>>2]|0;if((q|0)==(c[T+16>>2]|0)){wc=Ed[c[(c[T>>2]|0)+36>>2]&255](T)|0}else{wc=c[q>>2]|0}if(!((wc|0)==-1)){if(vc){break}else{break j}}else{c[b>>2]=0;ca=339;break}}else{ca=339}}while(0);if((ca|0)==339?(ca=0,vc):0){break}T=c[f>>2]|0;q=c[T+12>>2]|0;if((q|0)==(c[T+16>>2]|0)){xc=Ed[c[(c[T>>2]|0)+36>>2]&255](T)|0}else{xc=c[q>>2]|0}if((a[lb]&1)==0){yc=nb}else{yc=c[ob>>2]|0}if((xc|0)!=(c[yc+(pb<<2)>>2]|0)){break}q=pb+1|0;T=c[f>>2]|0;mb=T+12|0;A=c[mb>>2]|0;if((A|0)==(c[T+16>>2]|0)){Ed[c[(c[T>>2]|0)+40>>2]&255](T)|0;pb=q;continue}else{c[mb>>2]=A+4;pb=q;continue}}c[j>>2]=c[j>>2]|4;qc=0;rc=$;sc=_;break h}}while(0);if(($|0)!=(aa|0)){pb=a[B]|0;if((pb&1)==0){zc=(pb&255)>>>1}else{zc=c[m>>2]|0}if((zc|0)==0){qc=1;rc=$;sc=_}else{ob=aa-4|0;if(ob>>>0>$>>>0){nb=$;lb=ob;do{ob=c[nb>>2]|0;c[nb>>2]=c[lb>>2];c[lb>>2]=ob;nb=nb+4|0;lb=lb-4|0}while(nb>>>0<lb>>>0);Ac=a[B]|0}else{Ac=pb}if((Ac&1)==0){Bc=(Ac&255)>>>1;Cc=u+1|0}else{Bc=c[m>>2]|0;Cc=c[u+8>>2]|0}lb=aa-4|0;nb=a[Cc]|0;ob=nb<<24>>24<1|nb<<24>>24==127;k:do{if(lb>>>0>$>>>0){q=Cc+Bc|0;A=Cc;mb=$;T=nb;S=ob;while(1){if(!S?(T<<24>>24|0)!=(c[mb>>2]|0):0){break k}qb=(q-A|0)>1?A+1|0:A;Q=mb+4|0;mc=a[qb]|0;hc=mc<<24>>24<1|mc<<24>>24==127;if(Q>>>0<lb>>>0){A=qb;mb=Q;T=mc;S=hc}else{Dc=mc;Ec=hc;ca=367;break}}}else{Dc=nb;Ec=ob;ca=367}}while(0);if((ca|0)==367){if(Ec){qc=1;rc=$;sc=_;break}if(((c[lb>>2]|0)-1|0)>>>0<Dc<<24>>24>>>0){qc=1;rc=$;sc=_;break}}c[j>>2]=c[j>>2]|4;qc=0;rc=$;sc=_}}else{qc=1;rc=aa;sc=_}}}while(0);Vk(y);Vk(x);Vk(w);Vk(v);Ik(u);if((rc|0)==0){Fc=400;Gc=0;i=p;return qc|0}zd[sc&511](rc);Fc=400;Gc=0;i=p;return qc|0}function gp(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;d=i;i=i+456|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+416|0;o=d+424|0;p=d+432|0;q=d+440|0;r=d+448|0;s=n|0;c[s>>2]=m;t=n+4|0;c[t>>2]=268;u=m+400|0;dl(p,h);m=p|0;v=c[m>>2]|0;if(!((c[6534]|0)==-1)){c[l>>2]=26136;c[l+4>>2]=30;c[l+8>>2]=0;Ck(26136,l,160)}l=(c[6535]|0)-1|0;w=c[v+8>>2]|0;if((c[v+12>>2]|0)-w>>2>>>0>l>>>0?(v=c[w+(l<<2)>>2]|0,(v|0)!=0):0){l=v;a[q]=0;w=f|0;f=c[w>>2]|0;c[r>>2]=f;if(fp(e,r,g,p,c[h+4>>2]|0,j,q,l,n,o,u)|0){u=k;if((a[u]&1)==0){c[k+4>>2]=0;a[u]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}u=v;if((a[q]|0)!=0){Yk(k,Bd[c[(c[u>>2]|0)+44>>2]&127](l,45)|0)}q=Bd[c[(c[u>>2]|0)+44>>2]&127](l,48)|0;l=c[s>>2]|0;u=c[o>>2]|0;o=u-4|0;a:do{if(l>>>0<o>>>0){v=l;while(1){n=v+4|0;if((c[v>>2]|0)!=(q|0)){x=v;break a}if(n>>>0<o>>>0){v=n}else{x=n;break}}}else{x=l}}while(0);xs(k,x,u)|0}u=e|0;e=c[u>>2]|0;do{if((e|0)!=0){x=c[e+12>>2]|0;if((x|0)==(c[e+16>>2]|0)){y=Ed[c[(c[e>>2]|0)+36>>2]&255](e)|0}else{y=c[x>>2]|0}if((y|0)==-1){c[u>>2]=0;z=1;break}else{z=(c[u>>2]|0)==0;break}}else{z=1}}while(0);do{if((f|0)!=0){y=c[f+12>>2]|0;if((y|0)==(c[f+16>>2]|0)){A=Ed[c[(c[f>>2]|0)+36>>2]&255](f)|0}else{A=c[y>>2]|0}if(!((A|0)==-1)){if(z){break}else{B=37;break}}else{c[w>>2]=0;B=35;break}}else{B=35}}while(0);if((B|0)==35?z:0){B=37}if((B|0)==37){c[j>>2]=c[j>>2]|2}c[b>>2]=c[u>>2];fk(c[m>>2]|0)|0;m=c[s>>2]|0;c[s>>2]=0;if((m|0)==0){C=400;D=0;i=d;return}zd[c[t>>2]&511](m);C=400;D=0;i=d;return}d=dd(4)|0;ht(d);ac(d|0,18472,230)}function hp(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,E=0,F=0,G=0;n=i;i=i+176|0;o=n|0;p=n+16|0;q=n+32|0;r=n+40|0;s=n+56|0;t=n+72|0;u=n+88|0;v=n+104|0;w=n+112|0;x=n+128|0;y=n+144|0;z=n+160|0;if(b){b=c[d>>2]|0;if(!((c[6650]|0)==-1)){c[p>>2]=26600;c[p+4>>2]=30;c[p+8>>2]=0;Ck(26600,p,160)}p=(c[6651]|0)-1|0;A=c[b+8>>2]|0;if(!((c[b+12>>2]|0)-A>>2>>>0>p>>>0)){B=dd(4)|0;C=B;ht(C);ac(B|0,18472,230)}b=c[A+(p<<2)>>2]|0;if((b|0)==0){B=dd(4)|0;C=B;ht(C);ac(B|0,18472,230)}B=b;Ad[c[(c[b>>2]|0)+44>>2]&127](q,B);C=e;D=c[q>>2]|0;a[C]=D;D=D>>8;a[C+1|0]=D;D=D>>8;a[C+2|0]=D;D=D>>8;a[C+3|0]=D;C=b;Ad[c[(c[C>>2]|0)+32>>2]&127](r,B);q=l;if((a[q]&1)==0){c[l+4>>2]=0;a[q]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}Xk(l,0);p=r;c[q>>2]=c[p>>2];c[q+4>>2]=c[p+4>>2];c[q+8>>2]=c[p+8>>2];eu(p|0,0,12)|0;Vk(r);Ad[c[(c[C>>2]|0)+28>>2]&127](s,B);r=k;if((a[r]&1)==0){c[k+4>>2]=0;a[r]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}Xk(k,0);p=s;c[r>>2]=c[p>>2];c[r+4>>2]=c[p+4>>2];c[r+8>>2]=c[p+8>>2];eu(p|0,0,12)|0;Vk(s);s=b;c[f>>2]=Ed[c[(c[s>>2]|0)+12>>2]&255](B)|0;c[g>>2]=Ed[c[(c[s>>2]|0)+16>>2]&255](B)|0;Ad[c[(c[b>>2]|0)+20>>2]&127](t,B);b=h;if((a[b]&1)==0){a[h+1|0]=0;a[b]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}Nk(h,0);p=t;c[b>>2]=c[p>>2];c[b+4>>2]=c[p+4>>2];c[b+8>>2]=c[p+8>>2];eu(p|0,0,12)|0;Ik(t);Ad[c[(c[C>>2]|0)+24>>2]&127](u,B);C=j;if((a[C]&1)==0){c[j+4>>2]=0;a[C]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}Xk(j,0);t=u;c[C>>2]=c[t>>2];c[C+4>>2]=c[t+4>>2];c[C+8>>2]=c[t+8>>2];eu(t|0,0,12)|0;Vk(u);E=Ed[c[(c[s>>2]|0)+36>>2]&255](B)|0;c[m>>2]=E;i=n;return}else{B=c[d>>2]|0;if(!((c[6652]|0)==-1)){c[o>>2]=26608;c[o+4>>2]=30;c[o+8>>2]=0;Ck(26608,o,160)}o=(c[6653]|0)-1|0;d=c[B+8>>2]|0;if(!((c[B+12>>2]|0)-d>>2>>>0>o>>>0)){F=dd(4)|0;G=F;ht(G);ac(F|0,18472,230)}B=c[d+(o<<2)>>2]|0;if((B|0)==0){F=dd(4)|0;G=F;ht(G);ac(F|0,18472,230)}F=B;Ad[c[(c[B>>2]|0)+44>>2]&127](v,F);G=e;D=c[v>>2]|0;a[G]=D;D=D>>8;a[G+1|0]=D;D=D>>8;a[G+2|0]=D;D=D>>8;a[G+3|0]=D;G=B;Ad[c[(c[G>>2]|0)+32>>2]&127](w,F);v=l;if((a[v]&1)==0){c[l+4>>2]=0;a[v]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}Xk(l,0);l=w;c[v>>2]=c[l>>2];c[v+4>>2]=c[l+4>>2];c[v+8>>2]=c[l+8>>2];eu(l|0,0,12)|0;Vk(w);Ad[c[(c[G>>2]|0)+28>>2]&127](x,F);w=k;if((a[w]&1)==0){c[k+4>>2]=0;a[w]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}Xk(k,0);k=x;c[w>>2]=c[k>>2];c[w+4>>2]=c[k+4>>2];c[w+8>>2]=c[k+8>>2];eu(k|0,0,12)|0;Vk(x);x=B;c[f>>2]=Ed[c[(c[x>>2]|0)+12>>2]&255](F)|0;c[g>>2]=Ed[c[(c[x>>2]|0)+16>>2]&255](F)|0;Ad[c[(c[B>>2]|0)+20>>2]&127](y,F);B=h;if((a[B]&1)==0){a[h+1|0]=0;a[B]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}Nk(h,0);h=y;c[B>>2]=c[h>>2];c[B+4>>2]=c[h+4>>2];c[B+8>>2]=c[h+8>>2];eu(h|0,0,12)|0;Ik(y);Ad[c[(c[G>>2]|0)+24>>2]&127](z,F);G=j;if((a[G]&1)==0){c[j+4>>2]=0;a[G]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}Xk(j,0);j=z;c[G>>2]=c[j>>2];c[G+4>>2]=c[j+4>>2];c[G+8>>2]=c[j+8>>2];eu(j|0,0,12)|0;Vk(z);E=Ed[c[(c[x>>2]|0)+36>>2]&255](F)|0;c[m>>2]=E;i=n;return}}function ip(a){a=a|0;dk(a|0);Nt(a);return}function jp(a){a=a|0;dk(a|0);return}



function Pd(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+7&-8;return b|0}function Qd(){return i|0}function Rd(a){a=a|0;i=a}function Sd(a,b){a=a|0;b=b|0;if((y|0)==0){y=a;z=b}}function Td(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0]}function Ud(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0];a[k+4|0]=a[b+4|0];a[k+5|0]=a[b+5|0];a[k+6|0]=a[b+6|0];a[k+7|0]=a[b+7|0]}function Vd(a){a=a|0;L=a}function Wd(a){a=a|0;M=a}function Xd(a){a=a|0;N=a}function Yd(a){a=a|0;O=a}function Zd(a){a=a|0;P=a}function _d(a){a=a|0;Q=a}function $d(a){a=a|0;R=a}function ae(a){a=a|0;S=a}function be(a){a=a|0;T=a}function ce(a){a=a|0;U=a}function de(){c[1296]=p+8;c[1298]=p+8;c[1300]=p+8;c[1302]=q+8;c[1306]=q+8;c[1310]=q+8;c[4608]=p+8;c[4610]=p+8;c[4612]=p+8;c[4614]=q+8;c[4616]=t;c[4618]=q+8;c[4620]=t;c[4622]=q+8;c[4626]=q+8;c[4628]=t;c[4630]=q+8;c[4634]=q+8;c[4638]=q+8;c[4640]=t;c[4642]=u+8;c[4646]=u+8;c[4650]=p+8;c[4684]=q+8;c[4688]=q+8;c[4752]=q+8;c[4756]=q+8;c[4776]=p+8;c[4778]=q+8;c[4814]=q+8;c[4818]=q+8;c[4854]=q+8;c[4858]=q+8;c[4878]=p+8;c[4880]=p+8;c[4882]=q+8;c[4886]=q+8;c[4890]=q+8;c[4892]=t;c[4894]=q+8;c[4898]=q+8;c[4902]=q+8;c[4906]=p+8;c[4908]=p+8;c[4910]=p+8;c[4920]=q+8;c[4924]=p+8;c[4926]=p+8;c[4928]=p+8;c[4930]=p+8;c[4956]=q+8;c[4960]=q+8;c[4964]=p+8;c[4966]=q+8;c[4970]=q+8;c[4974]=q+8;c[4978]=p+8;c[4980]=p+8;c[4982]=p+8;c[4984]=p+8;c[5018]=p+8;c[5020]=p+8;c[5022]=p+8;c[5024]=q+8;c[5028]=q+8;c[5032]=q+8;c[5036]=q+8;c[5040]=q+8;c[5044]=q+8;c[5048]=p+8;c[5050]=p+8;c[5052]=p+8;c[5054]=p+8;c[5056]=p+8;c[5058]=q+8;c[5062]=q+8;c[5066]=q+8;c[5070]=q+8;c[5074]=q+8;c[5078]=q+8;c[5082]=p+8;c[5084]=q+8;c[5088]=q+8;c[5092]=q+8;c[5096]=q+8;c[5100]=q+8;c[5104]=q+8;c[5108]=q+8;c[5112]=q+8;c[5116]=p+8;c[5118]=q+8;c[5122]=q+8;c[5126]=q+8;c[5130]=q+8;c[5134]=q+8;c[5138]=q+8;c[5142]=q+8;c[5146]=q+8;c[5156]=q+8;c[5160]=p+8;c[5162]=q+8;c[5166]=q+8;c[5170]=q+8}function ee(a){a=a|0;var b=0,d=0;b=c[a>>2]|0;if((b|0)==0){return}d=a+4|0;a=c[d>>2]|0;if((a|0)!=(b|0)){c[d>>2]=a+(~(((a-120-b|0)>>>0)/120|0)*120|0)}Nt(b);return}function fe(){var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0.0,w=0,x=0,y=0,z=0,A=0;d=i;i=i+176|0;e=d|0;f=d+24|0;h=d+40|0;j=d+48|0;k=d+64|0;l=d+80|0;m=d+96|0;n=d+112|0;o=d+128|0;p=d+144|0;q=d+160|0;c[6700]=80;c[6701]=24;Hd[c[6710]&7]();if((Ub(32)|0)!=0){r=dd(8)|0;s=Lt(32)|0;c[k+8>>2]=s;c[k>>2]=33;c[k+4>>2]=26;du(s|0,4296,26)|0;a[s+26|0]=0;s=j;t=Ok(k,tc()|0)|0;c[s>>2]=c[t>>2];c[s+4>>2]=c[t+4>>2];c[s+8>>2]=c[t+8>>2];eu(t|0,0,12)|0;kk(r,j);ac(r|0,18504,40)}if(((Rc(2)|0)&2|0)==0){r=dd(8)|0;j=Lt(48)|0;c[m+8>>2]=j;c[m>>2]=49;c[m+4>>2]=32;du(j|0,4256,32)|0;a[j+32|0]=0;j=l;t=Ok(m,tc()|0)|0;c[j>>2]=c[t>>2];c[j+4>>2]=c[t+4>>2];c[j+8>>2]=c[t+8>>2];eu(t|0,0,12)|0;kk(r,l);ac(r|0,18504,40)}Jc(1)|0;r=Ic(3144)|0;if((r|0)==0){l=dd(8)|0;lk(l,2328);ac(l|0,18504,40)}l=r+8|0;t=ha((c[l>>2]|0)/16|0,c[6700]|0)|0;j=r+12|0;m=ha((c[j>>2]|0)/16|0,c[6701]|0)|0;s=ec(t|0,m|0,0,67108864)|0;c[6708]=s;if((s|0)==0){s=dd(8)|0;k=Lt(32)|0;c[o+8>>2]=k;c[o>>2]=33;c[o+4>>2]=26;du(k|0,2032,26)|0;a[k+26|0]=0;k=n;u=Ok(o,tc()|0)|0;c[k>>2]=c[u>>2];c[k+4>>2]=c[u+4>>2];c[k+8>>2]=c[u+8>>2];eu(u|0,0,12)|0;kk(s,n);ac(s|0,18504,40)}v=-2.0/+(c[6701]|0);g[6672]=2.0/+(c[6700]|0);eu(26692,0,16)|0;g[6677]=v;eu(26712,0,16)|0;g[6682]=-2.0;g[6683]=0.0;g[6684]=-1.0;g[6685]=1.0;g[6686]=-1.0;g[6687]=1.0;s=Lt(16)|0;c[p+8>>2]=s;c[p>>2]=17;c[p+4>>2]=11;du(s|0,1752,11)|0;a[s+11|0]=0;c[6704]=ge(35633,p)|0;Nt(s);s=Lt(16)|0;c[q+8>>2]=s;c[q>>2]=17;c[q+4>>2]=13;du(s|0,1312,13)|0;a[s+13|0]=0;c[6696]=ge(35632,q)|0;Nt(s);s=c[6696]|0;q=c[6704]|0;p=fd()|0;Eb(p|0,q|0);Eb(p|0,s|0);Na(p|0);nb(p|0,35714,h|0);if((c[h>>2]|0)==0){zb(p|0);h=dd(8)|0;lk(h,3176);ac(h|0,18504,40)}c[6698]=p;Mc(p|0);$a(1,26824);Pa(3553,c[6706]|0);sd(3553,10241,9728);sd(3553,10240,9728);p=(a[(c[r+4>>2]|0)+8|0]|0)==3?6407:6408;Oc(3553,0,p|0,c[l>>2]|0,c[j>>2]|0,0,p|0,5121,c[r+20>>2]|0);p=26800;j=c[p+4>>2]|0;c[f>>2]=c[p>>2];c[f+4>>2]=j;se(e,f,d+32|0);f=e|0;j=c[6666]|0;c[6666]=c[f>>2];c[f>>2]=j;f=e+4|0;p=c[6667]|0;c[6667]=c[f>>2];c[f>>2]=p;l=e+8|0;h=c[6668]|0;c[6668]=c[l>>2];c[l>>2]=h;h=26676;l=c[h>>2]|0;s=c[h+4>>2]|0;h=e+12|0;e=c[h>>2]|0;q=c[h+4>>2]|0;n=26676;c[n>>2]=e;c[n+4>>2]=q;c[h>>2]=l;c[h+4>>2]=s;if((j|0)==0){w=q;x=e;y=e}else{if((p|0)!=(j|0)){c[f>>2]=p+(~(((p-120-j|0)>>>0)/120|0)*120|0)}Nt(j);j=26676;p=c[j>>2]|0;w=c[j+4>>2]|0;x=p;y=p}p=c[6666]|0;j=0;f=0;while(1){e=f;q=j;if(!((q|0)!=(w|0)|(e|0)!=0)){break}s=(ha(y,q)|0)+e|0;h=0;a:while(1){switch(h|0){case 2:case 3:{z=0;A=1;break};case 1:case 4:{z=1;A=0;break};case 5:{z=1;A=1;break};case 6:{break a;break};default:{z=0;A=0}}b[p+(s*120|0)+(h*20|0)>>1]=z+e;b[p+(s*120|0)+(h*20|0)+2>>1]=A+q;h=h+1|0}h=e+1|0;if((h|0)!=(x|0)){j=j|0|0;f=h|f&0;continue}j=q+1|0;f=0}bd(1,26808);rc(34962,c[6702]|0);f=c[6666]|0;uc(34962,(c[6667]|0)-f|0,f|0,35048);pd(sb(c[6698]|0,976)|0,1,0,26688);pc(33984);Pa(3553,c[6706]|0);hb(sb(c[6698]|0,432)|0,0);f=cd(c[6698]|0,248)|0;c[6694]=f;qc(f|0);ob(c[6694]|0,2,5123,0,20,0);f=cd(c[6698]|0,4240)|0;c[6688]=f;qc(f|0);ob(c[6688]|0,2,5126,0,20,4);f=cd(c[6698]|0,3936)|0;c[6690]=f;qc(f|0);ob(c[6690]|0,3,5121,0,20,12);f=cd(c[6698]|0,3664)|0;c[6692]=f;qc(f|0);ob(c[6692]|0,3,5121,0,20,16);Ia(+0.0,+0.0,+0.0,+1.0);id(0,0,t|0,m|0);td(r|0);i=d;return}function ge(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;e=i;i=i+344|0;f=e|0;g=e+8|0;h=e+16|0;j=e+208|0;k=e+224|0;l=e+240|0;m=e+256|0;n=e+272|0;o=e+280|0;p=e+288|0;q=e+296|0;r=e+312|0;s=e+328|0;t=h;u=h|0;v=h+8|0;w=h;c[u>>2]=20748;x=h+108|0;c[x>>2]=20768;c[h+4>>2]=0;y=h+108|0;el(y,v);c[h+180>>2]=0;c[h+184>>2]=-1;c[u>>2]=7708;c[h+108>>2]=7728;Je(v);z=d;if((a[z]&1)==0){A=d+1|0}else{A=c[d+8>>2]|0}B=h+72|0;if((c[B>>2]|0)==0?(C=ub(A|0,2744)|0,c[B>>2]=C,(C|0)!=0):0){c[h+96>>2]=8}else{h=c[(c[w>>2]|0)-12>>2]|0;bl(t+h|0,c[t+(h+16)>>2]|4)}c[f>>2]=c[t+((c[(c[w>>2]|0)-12>>2]|0)+24)>>2];c[g>>2]=0;Ie(j,f,g);g=gb(b|0)|0;if((g|0)==0){b=dd(8)|0;f=Lt(16)|0;c[m+8>>2]=f;c[m>>2]=17;c[m+4>>2]=15;du(f|0,3128,15)|0;a[f+15|0]=0;f=a[z]|0;if((f&1)==0){D=(f&255)>>>1;E=d+1|0}else{D=c[d+4>>2]|0;E=c[d+8>>2]|0}f=m;if((D|0)!=0){Qk(m,15,D,15,15,0,D,E)}E=l;c[E>>2]=c[f>>2];c[E+4>>2]=c[f+4>>2];c[E+8>>2]=c[f+8>>2];eu(f|0,0,12)|0;f=k;E=Ok(l,3080)|0;c[f>>2]=c[E>>2];c[f+4>>2]=c[E+4>>2];c[f+8>>2]=c[E+8>>2];eu(E|0,0,12)|0;kk(b,k);ac(b|0,18504,40);return 0}b=j;if((a[b]&1)==0){F=j+1|0}else{F=c[j+8>>2]|0}c[n>>2]=F;cc(g|0,1,n|0,0);Va(g|0);Xb(g|0,35713,o|0);if((c[o>>2]|0)!=0){if((a[b]&1)==0){c[u>>2]=7708;c[x>>2]=7728;ye(v);cl(y);G=188;H=0;i=e;return g|0}Nt(c[j+8>>2]|0);c[u>>2]=7708;c[x>>2]=7728;ye(v);cl(y);G=188;H=0;i=e;return g|0}c[p>>2]=0;Xb(g|0,35716,p|0);e=c[p>>2]|0;H=e+1|0;if(H>>>0>4294967279>>>0){Dk(q);return 0}if(H>>>0<11>>>0){G=H<<1&255;y=q;a[y]=G;I=q+1|0;J=e;K=G;L=y}else{y=e+17&-16;e=Lt(y)|0;c[q+8>>2]=e;G=y|1;c[q>>2]=G;c[q+4>>2]=H;I=e;J=c[p>>2]|0;K=G&255;L=q}eu(I|0,32,H|0)|0;a[I+H|0]=0;if((K&1)==0){M=q+1|0}else{M=c[q+8>>2]|0}Sc(g|0,J|0,p|0,M|0);M=c[p>>2]|0;p=a[L]|0;J=(p&1)==0;if(J){N=(p&255)>>>1}else{N=c[q+4>>2]|0}do{if(!(M>>>0>N>>>0)){if(J){a[q+1+M|0]=0;a[L]=M<<1;break}else{a[(c[q+8>>2]|0)+M|0]=0;c[q+4>>2]=M;break}}else{Mk(q,M-N|0,0)|0}}while(0);ed(g|0);g=dd(8)|0;N=g;te(s,d,2992);d=a[L]|0;if((d&1)==0){O=(d&255)>>>1;P=q+1|0}else{O=c[q+4>>2]|0;P=c[q+8>>2]|0}q=s;d=a[q]|0;if((d&1)==0){Q=10;R=d}else{d=c[s>>2]|0;Q=(d&-2)-1|0;R=d&255}d=(R&1)==0;if(d){S=(R&255)>>>1}else{S=c[s+4>>2]|0}if(!((Q-S|0)>>>0<O>>>0)){if((O|0)!=0){if(d){T=s+1|0}else{T=c[s+8>>2]|0}du(T+S|0,P|0,O)|0;d=S+O|0;if((a[q]&1)==0){a[q]=d<<1}else{c[s+4>>2]=d}a[T+d|0]=0}}else{Qk(s,Q,O-Q+S|0,S,S,0,O,P)}P=r;c[P>>2]=c[q>>2];c[P+4>>2]=c[q+4>>2];c[P+8>>2]=c[q+8>>2];eu(q|0,0,12)|0;kk(N,r);ac(g|0,18504,40);return 0}function he(){_b();Fc();return}function ie(a){a=a|0;var b=0,d=0;b=a;a=26800;d=c[a+4>>2]|0;c[b>>2]=c[a>>2];c[b+4>>2]=d;return}function je(e,f,h){e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0.0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;j=i;k=f;f=i;i=i+8|0;c[f>>2]=c[k>>2];c[f+4>>2]=c[k+4>>2];k=h;h=i;i=i+3|0;i=i+7&-8;b[h>>1]=b[k>>1]|0;a[h+2|0]=a[k+2|0]|0;k=f;f=(ha(c[k+4>>2]|0,c[6669]|0)|0)+(c[k>>2]|0)|0;k=c[6666]|0;switch(e|0){case 57601:{l=-127;break};case 57602:{l=-126;break};case 57603:{l=-125;break};case 57604:{l=-124;break};case 57605:{l=-123;break};case 57856:{l=-112;break};case 57857:{l=-111;break};case 57858:{l=-110;break};case 57872:{l=-96;break};case 57600:{l=-128;break};default:{l=e&255}}e=l&15;m=(l&255)>>>4&255;n=+(e+1|0)*.0625;l=k+(f*120|0)+100|0;o=k+(f*120|0)+104|0;p=0;while(1){if((p|0)==1|(p|0)==4){q=1;r=16}else if((p|0)==5){g[o>>2]=n;s=1;t=l}else if((p|0)==6){break}else{q=0;r=16}if((r|0)==16){r=0;g[k+(f*120|0)+(p*20|0)+4>>2]=+(q+e|0)*.0625;s=(p&-2|0)==2|0;t=k+(f*120|0)+(p*20|0)|0}g[t+8>>2]=+(s+m|0)*.0625;p=p+1|0}a[21920]=0;p=d[h|0]|0;a:do{if((a[h+2|0]|0)==0){switch(p|0){case 3:{u=28;v=-119;w=106;break a;break};case 4:{u=-119;v=28;w=59;break a;break};case 5:{u=106;v=28;w=-119;break a;break};case 6:{u=-119;v=106;w=28;break a;break};case 7:{u=-55;v=-55;w=-55;break a;break};case 1:{u=28;v=59;w=-119;break a;break};case 2:{u=59;v=-119;w=28;break a;break};default:{u=0;v=0;w=0;break a}}}else{switch(p|0){case 1:{u=96;v=-124;w=-33;break a;break};case 2:{u=-124;v=-33;w=96;break a;break};case 3:{u=96;v=-33;w=-59;break a;break};case 4:{u=-33;v=96;w=-124;break a;break};case 5:{u=-69;v=96;w=-33;break a;break};case 6:{u=-33;v=-69;w=96;break a;break};case 7:{u=-1;v=-1;w=-1;break a;break};default:{u=101;v=101;w=101;break a}}}}while(0);switch(d[h+1|0]|0){case 1:{x=28;y=59;z=-119;break};case 2:{x=59;y=-119;z=28;break};case 3:{x=28;y=-119;z=106;break};case 4:{x=-119;y=28;z=59;break};case 5:{x=106;y=28;z=-119;break};case 6:{x=-119;y=106;z=28;break};case 7:{x=-55;y=-55;z=-55;break};default:{x=0;y=0;z=0}}a[k+(f*120|0)+12|0]=u;a[k+(f*120|0)+13|0]=v;a[k+(f*120|0)+14|0]=w;a[k+(f*120|0)+16|0]=x;a[k+(f*120|0)+17|0]=y;a[k+(f*120|0)+18|0]=z;a[k+(f*120|0)+32|0]=u;a[k+(f*120|0)+33|0]=v;a[k+(f*120|0)+34|0]=w;a[k+(f*120|0)+36|0]=x;a[k+(f*120|0)+37|0]=y;a[k+(f*120|0)+38|0]=z;a[k+(f*120|0)+52|0]=u;a[k+(f*120|0)+53|0]=v;a[k+(f*120|0)+54|0]=w;a[k+(f*120|0)+56|0]=x;a[k+(f*120|0)+57|0]=y;a[k+(f*120|0)+58|0]=z;a[k+(f*120|0)+72|0]=u;a[k+(f*120|0)+73|0]=v;a[k+(f*120|0)+74|0]=w;a[k+(f*120|0)+76|0]=x;a[k+(f*120|0)+77|0]=y;a[k+(f*120|0)+78|0]=z;a[k+(f*120|0)+92|0]=u;a[k+(f*120|0)+93|0]=v;a[k+(f*120|0)+94|0]=w;a[k+(f*120|0)+96|0]=x;a[k+(f*120|0)+97|0]=y;a[k+(f*120|0)+98|0]=z;a[k+(f*120|0)+112|0]=u;a[k+(f*120|0)+113|0]=v;a[k+(f*120|0)+114|0]=w;a[k+(f*120|0)+116|0]=x;a[k+(f*120|0)+117|0]=y;a[k+(f*120|0)+118|0]=z;a[21920]=0;i=j;return}function ke(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=i;i=i+8|0;h=e;e=i;i=i+8|0;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];h=f;f=i;i=i+3|0;i=i+7&-8;b[f>>1]=b[h>>1]|0;a[f+2|0]=a[h+2|0]|0;h=g|0;j=h;k=i;i=i+3|0;i=i+7&-8;l=a[d]|0;if(l<<24>>24==0){i=g;return}m=e;n=k|0;o=f|0;f=e|0;e=d;d=l;do{l=c[m>>2]|0;p=c[m+4>>2]|0;c[h>>2]=l;c[h+4>>2]=p;a[n]=a[o]|0;a[n+1|0]=a[o+1|0]|0;a[n+2|0]=a[o+2|0]|0;je(d<<24>>24,j,k);c[f>>2]=l+1;e=e+1|0;d=a[e]|0}while(!(d<<24>>24==0));i=g;return}function le(){var b=0;if(a[21920]|0){return}me(26240,3560)|0;oc(16384);b=c[6666]|0;Sb(34962,0,(c[6667]|0)-b|0,b|0);hc(4,0,(((c[6667]|0)-(c[6666]|0)|0)/120|0)*6|0|0);a[21920]=1;return}function me(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=g|0;a[k]=0;c[g+4>>2]=b;l=b;m=c[(c[l>>2]|0)-12>>2]|0;n=b;if((c[n+(m+16)>>2]|0)==0){o=c[n+(m+72)>>2]|0;if((o|0)==0){p=m}else{Nl(o)|0;p=c[(c[l>>2]|0)-12>>2]|0}a[k]=1;k=fu(d|0)|0;c[h>>2]=c[n+(p+24)>>2];if((c[n+(p+4)>>2]&176|0)==32){q=d+k|0}else{q=d}o=n+p|0;m=n+(p+76)|0;p=c[m>>2]|0;if((p|0)==-1){r=o;dl(f,r);s=Pp(f,26144)|0;t=Bd[c[(c[s>>2]|0)+28>>2]&127](s,32)|0;Np(f);c[m>>2]=t<<24>>24;u=t;v=r}else{u=p&255;v=o}re(j,h,d,q,d+k|0,v,u);if((c[j>>2]|0)==0){j=c[(c[l>>2]|0)-12>>2]|0;bl(n+j|0,c[n+(j+16)>>2]|5)}}Yl(g);i=e;return b|0}function ne(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;i=i+64|0;e=d|0;f=d+8|0;g=d+16|0;h=c[a+16>>2]|0;if((h|0)==0){a=dd(4)|0;c[a>>2]=7344;ac(a|0,19560,246);return 0}if(!(Ed[c[(c[h>>2]|0)+24>>2]&255](h)|0)){j=0;i=d;return j|0}if((lc(g|0)|0)==0){j=1;i=d;return j|0}h=g|0;a=g+16|0;k=g+24|0;l=b+16|0;while(1){b=c[h>>2]|0;if((b|0)==768){switch(c[a>>2]|0){case 1103:case 1118:{m=57364;break};case 1106:case 1120:{m=57361;break};case 1105:case 1114:{m=57362;break};case 1101:case 1113:{m=57377;break};case 1098:case 1119:{m=57376;break};case 1099:case 1121:{m=57378;break};case 1102:case 1115:{m=57379;break};case 1104:case 1116:{m=57363;break};default:{m=c[k>>2]|0}}n=_l(26240,m)|0;dl(e,n+(c[(c[n>>2]|0)-12>>2]|0)|0);o=Pp(e,26144)|0;p=Bd[c[(c[o>>2]|0)+28>>2]&127](o,10)|0;Np(e);$l(n,p)|0;Nl(n)|0;if((m|0)!=0){c[f>>2]=m;n=c[l>>2]|0;if((n|0)==0){q=21;break}if(!(Bd[c[(c[n>>2]|0)+24>>2]&127](n,f)|0)){j=0;q=24;break}}}else if((b|0)==256){j=0;q=24;break}if((lc(g|0)|0)==0){j=1;q=24;break}}if((q|0)==21){g=dd(4)|0;c[g>>2]=7344;ac(g|0,19560,246);return 0}else if((q|0)==24){i=d;return j|0}return 0}function oe(a){a=a|0;pe(a,4);return}function pe(a,b){a=a|0;b=b|0;Nt(a);return}function qe(a){a=a|0;Mb(a|0)|0;xc()}function re(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;k=i;i=i+16|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=k|0;m=d|0;d=c[m>>2]|0;if((d|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g|0;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;if((h|0)>0?(Cd[c[(c[d>>2]|0)+48>>2]&63](d,e,h)|0)!=(h|0):0){c[m>>2]=0;c[b>>2]=0;i=k;return}do{if((q|0)>0){if(q>>>0<11>>>0){h=q<<1&255;e=l;a[e]=h;r=l+1|0;s=h;t=e}else{e=q+16&-16;h=Lt(e)|0;c[l+8>>2]=h;g=e|1;c[l>>2]=g;c[l+4>>2]=q;r=h;s=g&255;t=l}eu(r|0,j|0,q|0)|0;a[r+q|0]=0;if((s&1)==0){u=l+1|0}else{u=c[l+8>>2]|0}if((Cd[c[(c[d>>2]|0)+48>>2]&63](d,u,q)|0)==(q|0)){if((a[t]&1)==0){break}Nt(c[l+8>>2]|0);break}c[m>>2]=0;c[b>>2]=0;if((a[t]&1)==0){i=k;return}Nt(c[l+8>>2]|0);i=k;return}}while(0);l=n-o|0;if((l|0)>0?(Cd[c[(c[d>>2]|0)+48>>2]&63](d,f,l)|0)!=(l|0):0){c[m>>2]=0;c[b>>2]=0;i=k;return}c[p>>2]=0;c[b>>2]=d;i=k;return}function se(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;i=i+120|0;e=b;b=i;i=i+8|0;c[b>>2]=c[e>>2];c[b+4>>2]=c[e+4>>2];e=b;b=c[e>>2]|0;f=c[e+4>>2]|0;e=ha(f,b)|0;g=d|0;eu(g|0,0,120)|0;h=a|0;c[h>>2]=0;j=a+4|0;c[j>>2]=0;k=a+8|0;c[k>>2]=0;if((e|0)==0){l=a+12|0;m=l;n=m|0;c[n>>2]=b;o=m+4|0;c[o>>2]=f;i=d;return}if(e>>>0>35791394>>>0){Ep(a)}p=Lt(e*120|0)|0;c[j>>2]=p;c[h>>2]=p;c[k>>2]=p+(e*120|0);k=e;e=p;do{if((e|0)==0){q=0}else{du(e|0,g|0,120)|0;q=c[j>>2]|0}e=q+120|0;c[j>>2]=e;k=k-1|0}while((k|0)!=0);l=a+12|0;m=l;n=m|0;c[n>>2]=b;o=m+4|0;c[o>>2]=f;i=d;return}function te(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=b;eu(f|0,0,12)|0;g=a[d]|0;if((g&1)==0){h=d+1|0;i=(g&255)>>>1;j=fu(e|0)|0}else{g=c[d+4>>2]|0;k=fu(e|0)|0;h=c[d+8>>2]|0;i=g;j=k}k=j+i|0;if(k>>>0>4294967279>>>0){Dk(b)}if(k>>>0<11>>>0){g=i<<1&255;a[f]=g;l=b+1|0;m=g}else{g=k+16&-16;k=Lt(g)|0;c[b+8>>2]=k;d=g|1;c[b>>2]=d;c[b+4>>2]=i;l=k;m=d&255}du(l|0,h|0,i)|0;a[l+i|0]=0;if((m&1)==0){n=10;o=m}else{m=c[b>>2]|0;n=(m&-2)-1|0;o=m&255}m=(o&1)==0;if(m){p=(o&255)>>>1}else{p=c[b+4>>2]|0}if((n-p|0)>>>0<j>>>0){Qk(b,n,j-n+p|0,p,p,0,j,e);return}if((j|0)==0){return}if(m){q=b+1|0}else{q=c[b+8>>2]|0}du(q+p|0,e|0,j)|0;e=p+j|0;if((a[f]&1)==0){a[f]=e<<1}else{c[b+4>>2]=e}a[q+e|0]=0;return}function ue(a){a=a|0;c[a>>2]=7708;c[a+108>>2]=7728;ye(a+8|0);cl(a+108|0);return}function ve(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;c[b+d>>2]=7708;a=b+(d+108)|0;c[a>>2]=7728;ye(b+(d+8)|0);cl(a);return}function we(a){a=a|0;c[a>>2]=7708;c[a+108>>2]=7728;ye(a+8|0);cl(a+108|0);pe(a,188);return}function xe(a){a=a|0;var b=0,d=0,e=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;a=b+d|0;c[a>>2]=7708;e=b+(d+108)|0;c[e>>2]=7728;ye(b+(d+8)|0);cl(e);pe(a,188);return}function ye(b){b=b|0;var d=0,e=0,f=0;d=b|0;c[d>>2]=7944;e=b+64|0;f=c[e>>2]|0;if((f|0)!=0?(Ee(b)|0,(Ka(f|0)|0)==0):0){c[e>>2]=0}if((a[b+96|0]|0)!=0?(e=c[b+32>>2]|0,(e|0)!=0):0){Ot(e)}if((a[b+97|0]|0)!=0?(e=c[b+56>>2]|0,(e|0)!=0):0){Ot(e)}c[d>>2]=7632;Np(b+4|0);return}function ze(a){a=a|0;ye(a);pe(a,100);return}function Ae(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;Ed[c[(c[b>>2]|0)+24>>2]&255](b)|0;e=Pp(d,25840)|0;d=e;c[b+68>>2]=d;f=b+98|0;g=a[f]|0;h=Ed[c[(c[e>>2]|0)+28>>2]&255](d)|0;a[f]=h&1;if((g&255|0)==(h&1|0)){return}g=b+96|0;eu(b+8|0,0,24)|0;f=(a[g]|0)!=0;if(h){h=b+32|0;if(f?(d=c[h>>2]|0,(d|0)!=0):0){Ot(d)}d=b+97|0;a[g]=a[d]|0;e=b+60|0;c[b+52>>2]=c[e>>2];i=b+56|0;c[h>>2]=c[i>>2];c[e>>2]=0;c[i>>2]=0;a[d]=0;return}if(!f?(f=b+32|0,d=c[f>>2]|0,(d|0)!=(b+44|0)):0){i=c[b+52>>2]|0;c[b+60>>2]=i;c[b+56>>2]=d;a[b+97|0]=0;c[f>>2]=Mt(i)|0;a[g]=1;return}g=c[b+52>>2]|0;c[b+60>>2]=g;c[b+56>>2]=Mt(g)|0;a[b+97|0]=1;return}function Be(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b|0;g=b+96|0;eu(b+8|0,0,24)|0;if((a[g]|0)!=0?(h=c[b+32>>2]|0,(h|0)!=0):0){Ot(h)}h=b+97|0;if((a[h]|0)!=0?(i=c[b+56>>2]|0,(i|0)!=0):0){Ot(i)}i=b+52|0;c[i>>2]=e;do{if(e>>>0>8>>>0){j=a[b+98|0]|0;if(j<<24>>24!=0&(d|0)!=0){c[b+32>>2]=d;a[g]=0;k=j;break}else{c[b+32>>2]=Mt(e)|0;a[g]=1;k=j;break}}else{c[b+32>>2]=b+44;c[i>>2]=8;a[g]=0;k=a[b+98|0]|0}}while(0);if(!(k<<24>>24==0)){c[b+60>>2]=0;c[b+56>>2]=0;a[h]=0;return f|0}k=(e|0)<8?8:e;c[b+60>>2]=k;if((d|0)!=0&k>>>0>7>>>0){c[b+56>>2]=d;a[h]=0;return f|0}else{c[b+56>>2]=Mt(k)|0;a[h]=1;return f|0}return 0}function Ce(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;g=c[b+68>>2]|0;if((g|0)==0){h=dd(4)|0;ht(h);ac(h|0,18472,230)}h=Ed[c[(c[g>>2]|0)+24>>2]&255](g)|0;g=b+64|0;if(((c[g>>2]|0)!=0?!((h|0)<1&((d|0)!=0|(e|0)!=0)):0)?(Ed[c[(c[b>>2]|0)+24>>2]&255](b)|0)==0:0){if(!(f>>>0<3>>>0)){i=a;c[i>>2]=0;c[i+4>>2]=0;i=a+8|0;c[i>>2]=-1;c[i+4>>2]=-1;return}i=c[g>>2]|0;if((h|0)>0){j=su(h,(h|0)<0|0?-1:0,d,e)|0;k=j}else{k=0}if(($c(i|0,k|0,f|0)|0)==0){f=yb(c[g>>2]|0)|0;g=b+72|0;b=c[g+4>>2]|0;k=a;c[k>>2]=c[g>>2];c[k+4>>2]=b;b=a+8|0;c[b>>2]=f;c[b+4>>2]=(f|0)<0|0?-1:0;return}else{f=a;c[f>>2]=0;c[f+4>>2]=0;f=a+8|0;c[f>>2]=-1;c[f+4>>2]=-1;return}}f=a;c[f>>2]=0;c[f+4>>2]=0;f=a+8|0;c[f>>2]=-1;c[f+4>>2]=-1;return}function De(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;e=i;f=d;d=i;i=i+16|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];c[d+12>>2]=c[f+12>>2];f=b+64|0;if((c[f>>2]|0)!=0?(Ed[c[(c[b>>2]|0)+24>>2]&255](b)|0)==0:0){if(($c(c[f>>2]|0,c[d+8>>2]|0,0)|0)==0){f=d;g=c[f+4>>2]|0;h=b+72|0;c[h>>2]=c[f>>2];c[h+4>>2]=g;g=a;h=d;c[g>>2]=c[h>>2];c[g+4>>2]=c[h+4>>2];c[g+8>>2]=c[h+8>>2];c[g+12>>2]=c[h+12>>2];i=e;return}else{h=a;c[h>>2]=0;c[h+4>>2]=0;h=a+8|0;c[h>>2]=-1;c[h+4>>2]=-1;i=e;return}}h=a;c[h>>2]=0;c[h+4>>2]=0;h=a+8|0;c[h>>2]=-1;c[h+4>>2]=-1;i=e;return}function Ee(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+16|0;e=d|0;f=d+8|0;g=f;h=b+64|0;if((c[h>>2]|0)==0){j=0;i=d;return j|0}k=b+68|0;l=c[k>>2]|0;if((l|0)==0){m=dd(4)|0;ht(m);ac(m|0,18472,230);return 0}m=b+92|0;n=c[m>>2]|0;do{if((n&16|0)==0){if((n&8|0)!=0){o=b+80|0;p=c[o+4>>2]|0;c[f>>2]=c[o>>2];c[f+4>>2]=p;do{if((a[b+98|0]|0)==0){p=Ed[c[(c[l>>2]|0)+24>>2]&255](l)|0;o=b+36|0;q=c[o>>2]|0;r=(c[b+40>>2]|0)-q|0;if((p|0)>0){s=(ha((c[b+16>>2]|0)-(c[b+12>>2]|0)|0,p)|0)+r|0;t=0;break}p=c[b+12>>2]|0;if((p|0)==(c[b+16>>2]|0)){s=r;t=0}else{u=c[k>>2]|0;v=b+32|0;w=Nd[c[(c[u>>2]|0)+32>>2]&31](u,g,c[v>>2]|0,q,p-(c[b+8>>2]|0)|0)|0;s=r-w+(c[o>>2]|0)-(c[v>>2]|0)|0;t=1}}else{s=(c[b+16>>2]|0)-(c[b+12>>2]|0)|0;t=0}}while(0);if(($c(c[h>>2]|0,-s|0,1)|0)!=0){j=-1;i=d;return j|0}if(t){v=b+72|0;o=c[f+4>>2]|0;c[v>>2]=c[f>>2];c[v+4>>2]=o}o=c[b+32>>2]|0;c[b+40>>2]=o;c[b+36>>2]=o;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[m>>2]=0}}else{if((c[b+24>>2]|0)!=(c[b+20>>2]|0)?(Bd[c[(c[b>>2]|0)+52>>2]&127](b,-1)|0)==-1:0){j=-1;i=d;return j|0}o=b+72|0;v=b+32|0;w=b+52|0;while(1){r=c[k>>2]|0;p=c[v>>2]|0;q=Nd[c[(c[r>>2]|0)+20>>2]&31](r,o,p,p+(c[w>>2]|0)|0,e)|0;p=c[v>>2]|0;r=(c[e>>2]|0)-p|0;if((Sa(p|0,1,r|0,c[h>>2]|0)|0)!=(r|0)){j=-1;x=23;break}if((q|0)==2){j=-1;x=23;break}else if((q|0)!=1){x=10;break}}if((x|0)==10){if((Qa(c[h>>2]|0)|0)==0){break}else{j=-1}i=d;return j|0}else if((x|0)==23){i=d;return j|0}}}while(0);j=0;i=d;return j|0}function Fe(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;e=i;i=i+16|0;f=e|0;g=e+8|0;h=b+64|0;if((c[h>>2]|0)==0){j=-1;i=e;return j|0}k=b+92|0;if((c[k>>2]&8|0)==0){c[b+24>>2]=0;c[b+20>>2]=0;c[b+28>>2]=0;if((a[b+98|0]|0)==0){l=c[b+56>>2]|0;m=l+(c[b+60>>2]|0)|0;c[b+8>>2]=l;c[b+12>>2]=m;c[b+16>>2]=m;n=m}else{m=c[b+32>>2]|0;l=m+(c[b+52>>2]|0)|0;c[b+8>>2]=m;c[b+12>>2]=l;c[b+16>>2]=l;n=l}c[k>>2]=8;o=1;p=n;q=b+12|0}else{n=b+12|0;o=0;p=c[n>>2]|0;q=n}if((p|0)==0){n=f+1|0;c[b+8>>2]=f;c[q>>2]=n;c[b+16>>2]=n;r=n}else{r=p}p=c[b+16>>2]|0;if(o){s=0}else{o=(p-(c[b+8>>2]|0)|0)/2|0;s=o>>>0>4>>>0?4:o}o=b+16|0;do{if((r|0)==(p|0)){n=b+8|0;gu(c[n>>2]|0,r+(-s|0)|0,s|0)|0;if((a[b+98|0]|0)!=0){k=c[n>>2]|0;l=Qc(k+s|0,1,(c[o>>2]|0)-s-k|0,c[h>>2]|0)|0;if((l|0)==0){t=-1;u=n;break}k=c[n>>2]|0;m=k+s|0;c[q>>2]=m;c[o>>2]=k+(l+s);t=d[m]|0;u=n;break}m=b+32|0;l=b+36|0;k=c[l>>2]|0;v=b+40|0;gu(c[m>>2]|0,k|0,(c[v>>2]|0)-k|0)|0;k=c[m>>2]|0;w=k+((c[v>>2]|0)-(c[l>>2]|0))|0;c[l>>2]=w;if((k|0)==(b+44|0)){x=8}else{x=c[b+52>>2]|0}y=k+x|0;c[v>>2]=y;k=b+60|0;z=(c[k>>2]|0)-s|0;A=y-w|0;y=b+72|0;B=y;C=b+80|0;D=c[B+4>>2]|0;c[C>>2]=c[B>>2];c[C+4>>2]=D;D=Qc(w|0,1,(A>>>0<z>>>0?A:z)|0,c[h>>2]|0)|0;if((D|0)!=0){z=c[b+68>>2]|0;if((z|0)==0){A=dd(4)|0;ht(A);ac(A|0,18472,230);return 0}A=(c[l>>2]|0)+D|0;c[v>>2]=A;D=c[n>>2]|0;if((Id[c[(c[z>>2]|0)+16>>2]&31](z,y,c[m>>2]|0,A,l,D+s|0,D+(c[k>>2]|0)|0,g)|0)==3){k=c[m>>2]|0;m=c[v>>2]|0;c[n>>2]=k;c[q>>2]=k;c[o>>2]=m;t=d[k]|0;u=n;break}k=c[g>>2]|0;m=c[n>>2]|0;v=m+s|0;if((k|0)!=(v|0)){c[n>>2]=m;c[q>>2]=v;c[o>>2]=k;t=d[v]|0;u=n}else{t=-1;u=n}}else{t=-1;u=n}}else{t=d[r]|0;u=b+8|0}}while(0);if((c[u>>2]|0)!=(f|0)){j=t;i=e;return j|0}c[u>>2]=0;c[q>>2]=0;c[o>>2]=0;j=t;i=e;return j|0}function Ge(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;if((c[b+64>>2]|0)==0){e=-1;return e|0}f=b+12|0;g=c[f>>2]|0;if(!((c[b+8>>2]|0)>>>0<g>>>0)){e=-1;return e|0}if((d|0)==-1){c[f>>2]=g-1;e=0;return e|0}if((c[b+88>>2]&16|0)==0){b=d&255;h=g-1|0;if(b<<24>>24==(a[h]|0)){i=h;j=b}else{e=-1;return e|0}}else{i=g-1|0;j=d&255}c[f>>2]=i;a[i]=j;e=d;return e|0}function He(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;e=i;i=i+24|0;f=e|0;g=e+8|0;h=e+16|0;j=b+64|0;if((c[j>>2]|0)==0){k=-1;i=e;return k|0}l=b+92|0;if((c[l>>2]&16|0)==0){c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;m=c[b+52>>2]|0;do{if(m>>>0>8>>>0){if((a[b+98|0]|0)==0){n=c[b+56>>2]|0;o=n+((c[b+60>>2]|0)-1)|0;c[b+24>>2]=n;c[b+20>>2]=n;c[b+28>>2]=o;p=n;q=o;break}else{o=c[b+32>>2]|0;n=o+(m-1)|0;c[b+24>>2]=o;c[b+20>>2]=o;c[b+28>>2]=n;p=o;q=n;break}}else{c[b+24>>2]=0;c[b+20>>2]=0;c[b+28>>2]=0;p=0;q=0}}while(0);c[l>>2]=16;r=p;s=q;t=b+20|0;u=b+28|0}else{q=b+20|0;p=b+28|0;r=c[q>>2]|0;s=c[p>>2]|0;t=q;u=p}p=(d|0)==-1;q=b+24|0;l=c[q>>2]|0;if(p){v=l;w=r}else{if((l|0)==0){c[q>>2]=f;c[t>>2]=f;c[u>>2]=f+1;x=f}else{x=l}a[x]=d;x=(c[q>>2]|0)+1|0;c[q>>2]=x;v=x;w=c[t>>2]|0}x=b+24|0;if((v|0)!=(w|0)){a:do{if((a[b+98|0]|0)==0){q=b+32|0;l=c[q>>2]|0;c[g>>2]=l;f=b+68|0;m=c[f>>2]|0;if((m|0)==0){y=dd(4)|0;z=y;ht(z);ac(y|0,18472,230);return 0}n=b+72|0;o=b+52|0;A=m;m=w;B=v;C=l;while(1){l=Id[c[(c[A>>2]|0)+12>>2]&31](A,n,m,B,h,C,C+(c[o>>2]|0)|0,g)|0;D=c[t>>2]|0;if((c[h>>2]|0)==(D|0)){k=-1;E=30;break}if((l|0)==3){E=22;break}if(!(l>>>0<2>>>0)){k=-1;E=30;break}F=c[q>>2]|0;G=(c[g>>2]|0)-F|0;if((Sa(F|0,1,G|0,c[j>>2]|0)|0)!=(G|0)){k=-1;E=30;break}if((l|0)!=1){break a}l=c[h>>2]|0;G=c[x>>2]|0;c[t>>2]=l;c[u>>2]=G;F=l+(G-l)|0;c[x>>2]=F;G=c[f>>2]|0;if((G|0)==0){E=19;break}A=G;m=l;B=F;C=c[q>>2]|0}if((E|0)==19){y=dd(4)|0;z=y;ht(z);ac(y|0,18472,230);return 0}else if((E|0)==22){q=(c[x>>2]|0)-D|0;if((Sa(D|0,1,q|0,c[j>>2]|0)|0)==(q|0)){break}else{k=-1}i=e;return k|0}else if((E|0)==30){i=e;return k|0}}else{q=v-w|0;if((Sa(w|0,1,q|0,c[j>>2]|0)|0)!=(q|0)){k=-1;i=e;return k|0}}}while(0);c[x>>2]=r;c[t>>2]=r;c[u>>2]=s}k=p?0:d;i=e;return k|0}function Ie(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[g>>2];eu(b|0,0,12)|0;g=d|0;d=e|0;e=c[g>>2]|0;a:while(1){if((e|0)!=0){if((c[e+12>>2]|0)==(c[e+16>>2]|0)?(Ed[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1:0){c[g>>2]=0;h=0}else{h=e}}else{h=0}j=(h|0)==0;k=c[d>>2]|0;do{if((k|0)!=0){if((c[k+12>>2]|0)!=(c[k+16>>2]|0)){if(j){break}else{l=27;break a}}if(!((Ed[c[(c[k>>2]|0)+36>>2]&255](k)|0)==-1)){if(j){break}else{l=27;break a}}else{c[d>>2]=0;l=13;break}}else{l=13}}while(0);if((l|0)==13?(l=0,j):0){l=27;break}k=h+12|0;m=c[k>>2]|0;n=h+16|0;if((m|0)==(c[n>>2]|0)){o=(Ed[c[(c[h>>2]|0)+36>>2]&255](h)|0)&255}else{o=a[m]|0}Pk(b,o);m=c[k>>2]|0;if((m|0)==(c[n>>2]|0)){Ed[c[(c[h>>2]|0)+40>>2]&255](h)|0;e=h;continue}else{c[k>>2]=m+1;e=h;continue}}if((l|0)==27){i=f;return}}function Je(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d|0;f=d+8|0;g=b|0;c[g>>2]=7632;h=b+4|0;Lp(h);eu(b+8|0,0,24)|0;c[g>>2]=7944;c[b+32>>2]=0;c[b+36>>2]=0;c[b+40>>2]=0;g=b+68|0;eu(b+52|0,0,47)|0;Mp(e,h);j=Op(e,25840)|0;Np(e);if(j){Mp(f,h);c[g>>2]=Pp(f,25840)|0;Np(f);f=c[g>>2]|0;a[b+98|0]=(Ed[c[(c[f>>2]|0)+28>>2]&255](f)|0)&1}Cd[c[(c[b>>2]|0)+12>>2]&63](b,0,4096)|0;i=d;return}function Ke(){var a=0,b=0;a=i;i=i+16|0;b=a|0;c[b>>2]=0;c[b+4>>2]=0;se(26664,b,a+8|0);qb(250,26664,v|0)|0;i=a;return}function Le(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=(b|0)>(c|0);e=d?c:b;f=d?b:c;d=f-e+1|0;g=32-(hu(d|0)|0)|0;h=(((-1>>>((33-g|0)>>>0)&d|0)==0)<<31>>31)+g|0;if((f|0)==(e|0)){i=(c|0)>(b|0)?c:b;return i|0}if((d|0)==0){i=Te(a)|0;return i|0}b=(h>>>0)/((((h&31|0)!=0)+(h>>>5)|0)>>>0)|0;if((b|0)==0){j=0}else{j=-1>>>((32-b|0)>>>0)}do{k=(Te(a)|0)&j}while(!(k>>>0<d>>>0));i=e+k|0;return i|0}function Me(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=(b|0)>(c|0);f=e?c:b;g=e?b:c;if((d|0)==0){h=0;i=(h|0)/(d|0)|0;return i|0}e=g-f+1|0;j=32-(hu(e|0)|0)|0;k=(((-1>>>((33-j|0)>>>0)&e|0)==0)<<31>>31)+j|0;j=((k&31|0)!=0)+(k>>>5)|0;if((g|0)==(f|0)){h=ha((c|0)>(b|0)?c:b,d)|0;i=(h|0)/(d|0)|0;return i|0}if((e|0)==0){b=d;c=0;while(1){g=b-1|0;l=(Te(a)|0)+c|0;if((g|0)==0){h=l;break}else{b=g;c=l}}i=(h|0)/(d|0)|0;return i|0}else{m=d;n=0}while(1){c=m-1|0;b=(k>>>0)/(j>>>0)|0;if((b|0)==0){o=0}else{o=-1>>>((32-b|0)>>>0)}do{p=(Te(a)|0)&o}while(!(p>>>0<e>>>0));b=n+f+p|0;if((c|0)==0){h=b;break}else{m=c;n=b}}i=(h|0)/(d|0)|0;return i|0}function Ne(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;if((b|0)<1){c=0;return c|0}d=32-(hu(b|0)|0)|0;e=(((-1>>>((33-d|0)>>>0)&b|0)==0)<<31>>31)+d|0;if((b|0)==1){c=0;return c|0}d=(e>>>0)/((((e&31|0)!=0)+(e>>>5)|0)>>>0)|0;if((d|0)==0){f=0}else{f=-1>>>((32-d|0)>>>0)}while(1){d=(Te(a)|0)&f;if(d>>>0<b>>>0){c=d;break}}return c|0}function Oe(a){a=a|0;return((Te(a)|0)&1|0)==0|0}function Pe(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=i;f=d;d=i;i=i+16|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];c[d+12>>2]=c[f+12>>2];f=a|0;g=c[d>>2]|0;h=g-1+(c[d+8>>2]|0)|0;j=(g|0)>(h|0);k=j?h:g;l=j?g:h;j=l-k+1|0;m=32-(hu(j|0)|0)|0;n=(((j&-1>>>((33-m|0)>>>0)|0)==0)<<31>>31)+m|0;m=((n&31|0)!=0)+(n>>>5)|0;do{if((l|0)==(k|0)){o=(h|0)>(g|0)?h:g}else{if((j|0)==0){o=Te(b)|0;break}p=(n>>>0)/(m>>>0)|0;if((p|0)==0){q=0}else{q=-1>>>((32-p|0)>>>0)}do{r=(Te(b)|0)&q}while(!(r>>>0<j>>>0));o=r+k|0}}while(0);c[f>>2]=o;o=a+4|0;a=c[d+4>>2]|0;f=a-1+(c[d+12>>2]|0)|0;d=(a|0)>(f|0);k=d?f:a;r=d?a:f;d=r-k+1|0;j=32-(hu(d|0)|0)|0;q=(((d&-1>>>((33-j|0)>>>0)|0)==0)<<31>>31)+j|0;if((r|0)==(k|0)){s=(f|0)>(a|0)?f:a;c[o>>2]=s;i=e;return}if((d|0)==0){s=Te(b)|0;c[o>>2]=s;i=e;return}a=(q>>>0)/((((q&31|0)!=0)+(q>>>5)|0)>>>0)|0;if((a|0)==0){t=0}else{t=-1>>>((32-a|0)>>>0)}do{u=(Te(b)|0)&t}while(!(u>>>0<d>>>0));s=u+k|0;c[o>>2]=s;i=e;return}function Qe(a){a=a|0;c[a>>2]=12345678;c[a+4>>2]=43219876;c[a+8>>2]=6543217;c[a+12>>2]=987654321;c[a+16>>2]=7654321;return}function Re(a,b){a=a|0;b=b|0;Se(a,b);return}function Se(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=a|0;e=a+4|0;f=a+8|0;g=a+12|0;h=a+16|0;a=(b>>>0)%2147483647|0;b=(a|0)==0?1:a;a=((b>>>0)%44488|0)*48271|0;i=((b>>>0)/44488|0)*3399|0;b=(a>>>0<i>>>0?2147483647:0)+(a-i)|0;i=((b>>>0)%44488|0)*48271|0;a=((b>>>0)/44488|0)*3399|0;j=(i>>>0<a>>>0?2147483647:0)+(i-a)|0;a=((j>>>0)%44488|0)*48271|0;i=((j>>>0)/44488|0)*3399|0;k=(a>>>0<i>>>0?2147483647:0)+(a-i)|0;i=((k>>>0)%44488|0)*48271|0;a=((k>>>0)/44488|0)*3399|0;l=(i>>>0<a>>>0?2147483647:0)+(i-a)|0;a=((l>>>0)%44488|0)*48271|0;i=((l>>>0)/44488|0)*3399|0;m=(a>>>0<i>>>0?2147483647:0)+(a-i)|0;c[d>>2]=b;c[e>>2]=j;c[f>>2]=k;c[g>>2]=l;c[h>>2]=m;if((m|0)!=0){return}c[h>>2]=7654321;m=b;b=1;i=l;l=j;j=k;while(1){m=(ha(m,314527869)|0)+1234567|0;if((-b&1|0)==0){k=su(l,0,-382903,0)|0;a=ju(k,L,j,0)|0;k=L;c[f>>2]=k;n=a;c[e>>2]=n;o=n;p=i;q=k}else{k=i<<5^i;n=k>>>7^k;k=n<<22^n;c[g>>2]=k;o=l;p=k;q=j}r=p+m+o|0;if((r|0)!=0){break}else{b=0;i=p;l=o;j=q}}c[h>>2]=r;c[d>>2]=m;return}function Te(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;b=a|0;d=(ha(c[b>>2]|0,314527869)|0)+1234567|0;c[b>>2]=d;b=a+16|0;e=c[b>>2]|0;f=-(e&1)&-805306367^e>>>1;c[b>>2]=f;if((f&1|0)==0){f=a+4|0;b=su(c[f>>2]|0,0,-382903,0)|0;e=a+8|0;g=ju(b,L,c[e>>2]|0,0)|0;c[e>>2]=L;e=g;c[f>>2]=e;h=e;i=c[a+12>>2]|0;j=h+d|0;k=j+i|0;return k|0}else{e=a+12|0;f=c[e>>2]|0;g=f<<5^f;f=g>>>7^g;g=f<<22^f;c[e>>2]=g;h=c[a+4>>2]|0;i=g;j=h+d|0;k=j+i|0;return k|0}return 0}function Ue(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=i;i=i+24|0;g=d;d=i;i=i+8|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];g=e;e=i;i=i+8|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];g=f|0;h=f+8|0;j=f+16|0;k=g|0;a[k]=0;l=h|0;a[l]=0;m=j|0;a[m]=2;a:do{if(xi(h,j)|0){n=d|0;o=d+4|0;p=e|0;q=e+4|0;r=1;while(1){s=r?n:o;t=c[s>>2]|0;u=c[(r?p:q)>>2]|0;c[s>>2]=(t|0)<(u|0)?u:t;wi(g)|0;a[l]=a[k]|0;a[m]=2;if(!(xi(h,j)|0)){break a}r=(a[k]|0)==0}}}while(0);k=d;d=b;b=c[k+4>>2]|0;c[d>>2]=c[k>>2];c[d+4>>2]=b;i=f;return}function Ve(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=a;a=i;i=i+8|0;c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];e=b;b=i;i=i+8|0;c[b>>2]=c[e>>2];c[b+4>>2]=c[e+4>>2];e=(c[a>>2]|0)-(c[b>>2]|0)|0;f=(e|0)>-1?e:-e|0;e=(c[a+4>>2]|0)-(c[b+4>>2]|0)|0;b=(e|0)>-1?e:-e|0;i=d;return((f|0)<(b|0)?b:f)|0}function We(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;f=i;i=i+56|0;g=d;d=i;i=i+16|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];c[d+8>>2]=c[g+8>>2];c[d+12>>2]=c[g+12>>2];g=e;e=i;i=i+16|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;l=f+32|0;m=f+40|0;n=f+48|0;o=l|0;a[o]=0;p=m|0;a[p]=0;q=n|0;a[q]=2;if(!(xi(m,n)|0)){r=0;s=0;t=0;u=0;v=0;w=0;x=0;y=0;z=b;A=u|s;B=t|r;C=z|0;c[C>>2]=A;D=z+4|0;c[D>>2]=B;E=b+8|0;F=E;G=y|w;H=x|v;I=F|0;c[I>>2]=G;J=F+4|0;c[J>>2]=H;i=f;return}K=d|0;L=d+4|0;M=e|0;N=e+4|0;O=c[K>>2]|0;P=c[d+8>>2]|0;Q=c[L>>2]|0;R=c[d+12>>2]|0;d=c[M>>2]|0;S=c[e+8>>2]|0;T=c[N>>2]|0;U=c[e+12>>2]|0;e=1;while(1){V=c[(e?K:L)>>2]|0;W=c[(e?M:N)>>2]|0;X=(V|0)<(W|0)?W:V;c[(e?g:h)>>2]=X;V=e?P+O|0:R+Q|0;W=e?S+d|0:U+T|0;c[(e?j:k)>>2]=((W|0)<(V|0)?W:V)-X;wi(l)|0;a[p]=a[o]|0;a[q]=2;if(!(xi(m,n)|0)){break}e=(a[o]|0)==0}r=0;s=c[g>>2]|0;t=c[h>>2]|0;u=0;v=0;w=c[j>>2]|0;x=c[k>>2]|0;y=0;z=b;A=u|s;B=t|r;C=z|0;c[C>>2]=A;D=z+4|0;c[D>>2]=B;E=b+8|0;F=E;G=y|w;H=x|v;I=F|0;c[I>>2]=G;J=F+4|0;c[J>>2]=H;i=f;return}function Xe(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;f=b;b=i;i=i+8|0;c[b>>2]=c[f>>2];c[b+4>>2]=c[f+4>>2];f=b;b=c[f+4>>2]|0;c[a>>2]=(c[f>>2]|0)-d;c[a+4>>2]=b-d;b=d<<1|1;c[a+8>>2]=b;c[a+12>>2]=b;i=e;return}function Ye(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=i;i=i+40|0;g=d;d=i;i=i+8|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];g=e;e=i;i=i+16|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];c[e+12>>2]=c[g+12>>2];g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;l=f+32|0;m=d;d=c[m+4>>2]|0;n=e+8|0;o=c[n>>2]|0;p=c[n+4>>2]|0;n=c[m>>2]|0;c[k>>2]=n;m=d;c[l>>2]=m;d=p;q=0;r=g|0;s=h|0;t=j|0;a[r]=0;a[s]=0;a[t]=2;u=o;if(xi(h,j)|0){v=(u|0)<(n|0)?u:n;c[k>>2]=v;wi(g)|0;a[s]=a[r]|0;a[t]=2;if(xi(h,j)|0){do{w=(a[r]|0)==0;x=w?k:l;w?p:q;y=w?o:d;w=c[x>>2]|0;c[x>>2]=(y|0)<(w|0)?y:w;wi(g)|0;a[s]=a[r]|0;a[t]=2}while(xi(h,j)|0);z=c[k>>2]|0;A=c[l>>2]|0}else{z=v;A=m}}else{z=n;A=m}m=((c[e+12>>2]|0)+(c[e+4>>2]<<1)|0)/2|0;c[b>>2]=((u+(c[e>>2]<<1)|0)/2|0)-((z|0)/2|0);c[b+4>>2]=m-((A|0)/2|0);m=b+8|0;c[m>>2]=z;c[m+4>>2]=A;i=f;return}function Ze(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=b;b=i;i=i+16|0;c[b>>2]=c[f>>2];c[b+4>>2]=c[f+4>>2];c[b+8>>2]=c[f+8>>2];c[b+12>>2]=c[f+12>>2];f=d;d=i;i=i+8|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];f=c[d>>2]|0;g=b|0;c[g>>2]=(c[g>>2]|0)+f;g=c[d+4>>2]|0;d=b+4|0;c[d>>2]=(c[d>>2]|0)+g;d=b+8|0;h=(c[d>>2]|0)-(f<<1)|0;c[d>>2]=(h|0)>0?h:0;h=b+12|0;d=(c[h>>2]|0)-(g<<1)|0;c[h>>2]=(d|0)>0?d:0;d=a;a=b;c[d>>2]=c[a>>2];c[d+4>>2]=c[a+4>>2];c[d+8>>2]=c[a+8>>2];c[d+12>>2]=c[a+12>>2];i=e;return}function _e(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=d;d=i;i=i+8|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];f=c[d>>2]|0;g=ha(f,c[b>>2]|0)|0;h=c[d+4>>2]|0;d=(ha(h,c[b+12>>2]|0)|0)+g|0;c[a>>2]=d+(c[b+24>>2]|0);d=ha(f,c[b+4>>2]|0)|0;f=(ha(h,c[b+16>>2]|0)|0)+d|0;c[a+4>>2]=f+(c[b+28>>2]|0);i=e;return}function $e(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;f=d;d=i;i=i+16|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];c[d+12>>2]=c[f+12>>2];f=d;g=c[f>>2]|0;h=c[f+4>>2]|0;f=c[b>>2]|0;j=ha(g,f)|0;k=c[b+12>>2]|0;l=(ha(h,k)|0)+j|0;j=c[b+24>>2]|0;m=l+j|0;l=c[b+4>>2]|0;n=ha(l,g)|0;o=c[b+16>>2]|0;p=(ha(o,h)|0)+n|0;n=c[b+28>>2]|0;b=p+n|0;p=g-1+(c[d+8>>2]|0)|0;g=(c[d+4>>2]|0)-1+(c[d+12>>2]|0)|0;d=(ha(p,f)|0)+j+(ha(g,k)|0)|0;k=(ha(p,l)|0)+n+(ha(g,o)|0)|0;o=(m|0)>(d|0);g=o?d:m;n=(b|0)>(k|0);l=n?k:b;p=a;c[p>>2]=g;c[p+4>>2]=l;c[a+8>>2]=(o?m:d)+1-g;c[a+12>>2]=(n?b:k)+1-l;i=e;return}function af(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=b;b=i;i=i+16|0;c[b>>2]=c[e>>2];c[b+4>>2]=c[e+4>>2];c[b+8>>2]=c[e+8>>2];c[b+12>>2]=c[e+12>>2];e=b;f=c[e>>2]|0;g=c[e+4>>2]|0;c[a>>2]=1;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=1;c[a+20>>2]=0;c[a+24>>2]=f;c[a+28>>2]=g;c[a+32>>2]=1;c[a+36>>2]=1;c[a+40>>2]=0;c[a+44>>2]=0;c[a+48>>2]=0;c[a+52>>2]=1;c[a+56>>2]=0;c[a+60>>2]=-f;c[a+64>>2]=-g;c[a+68>>2]=1;g=b+8|0;b=a+72|0;a=c[g+4>>2]|0;c[b>>2]=c[g>>2];c[b+4>>2]=a;i=d;return}function bf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0;e=i;f=d;d=i;i=i+16|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];c[d+12>>2]=c[f+12>>2];f=d;g=c[f>>2]|0;h=c[f+4>>2]|0;f=c[b>>2]|0;j=c[b+12>>2]|0;k=c[b+24>>2]|0;l=c[b+4>>2]|0;m=c[b+16>>2]|0;n=c[b+28>>2]|0;o=c[b+8>>2]|0;p=c[b+20>>2]|0;q=c[b+32>>2]|0;c[a>>2]=f;c[a+4>>2]=l;c[a+8>>2]=o;c[a+12>>2]=j;c[a+16>>2]=m;c[a+20>>2]=p;c[a+24>>2]=(ha(h,j)|0)+(ha(g,f)|0)+k;c[a+28>>2]=(ha(h,m)|0)+(ha(g,l)|0)+n;c[a+32>>2]=(ha(h,p)|0)+(ha(g,o)|0)+q;q=c[b+40>>2]|0;o=c[b+44>>2]|0;c[a+36>>2]=(c[b+36>>2]|0)-(ha(o,g)|0);c[a+40>>2]=q-(ha(o,h)|0);c[a+44>>2]=o;o=c[b+52>>2]|0;q=c[b+56>>2]|0;c[a+48>>2]=(c[b+48>>2]|0)-(ha(q,g)|0);c[a+52>>2]=o-(ha(q,h)|0);c[a+56>>2]=q;q=c[b+64>>2]|0;o=c[b+68>>2]|0;c[a+60>>2]=(c[b+60>>2]|0)-(ha(o,g)|0);c[a+64>>2]=q-(ha(o,h)|0);c[a+68>>2]=o;o=d+8|0;h=a+72|0;a=c[o>>2]|0;q=c[o+4>>2]|0;c[h>>2]=a;c[h+4>>2]=q;q=c[d>>2]|0;h=c[d+4>>2]|0;o=c[d+12>>2]|0;d=b+72|0;b=c[d>>2]|0;g=c[d+4>>2]|0;if((h|q|0)<0){s=c[r>>2]|0;t=Vc(s|0,1864,(u=i,i=i+24|0,c[u>>2]=2640,c[u+8>>2]=264,c[u+16>>2]=2912,u)|0)|0;i=u;Uc()}if((a+q|0)>(b|0)){s=c[r>>2]|0;t=Vc(s|0,1864,(u=i,i=i+24|0,c[u>>2]=2640,c[u+8>>2]=264,c[u+16>>2]=2912,u)|0)|0;i=u;Uc()}if((o+h|0)>(g|0)){s=c[r>>2]|0;t=Vc(s|0,1864,(u=i,i=i+24|0,c[u>>2]=2640,c[u+8>>2]=264,c[u+16>>2]=2912,u)|0)|0;i=u;Uc()}else{i=e;return}}function cf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;f=i;i=i+8|0;g=d;d=i;i=i+8|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];g=e;e=i;i=i+8|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];g=f|0;h=g;j=i;i=i+8|0;k=i;i=i+8|0;l=i;i=i+8|0;m=l;n=c[d>>2]|0;o=c[e>>2]|0;if((n|0)!=(o|0)?(p=c[d+4>>2]|0,q=c[e+4>>2]|0,(p|0)!=(q|0)):0){if(Oe(a)|0){r=n;s=Me(a,q,p,3)|0}else{r=Me(a,o,n,3)|0;s=p}p=d;n=c[p+4>>2]|0;c[g>>2]=c[p>>2];c[g+4>>2]=n;c[j>>2]=r;c[j+4>>2]=s;cf(a,b,h,j);c[k>>2]=r;c[k+4>>2]=s;s=e;r=c[s+4>>2]|0;c[l>>2]=c[s>>2];c[l+4>>2]=r;cf(a,b,k,m);i=f;return}m=d;d=c[m>>2]|0;k=c[m+4>>2]|0;m=e;e=c[m>>2]|0;a=c[m+4>>2]|0;m=e-d|0;r=(m|0)>-1?m:-m|0;m=a-k|0;l=(m|0)>-1?m:-m|0;m=(e|0)>(d|0)?1:-1;s=(a|0)>(k|0)?1:-1;j=c[b>>2]|0;h=c[b+12>>2]|0;c[j+((ha(h,k)|0)+d<<2)>>2]=4;b=(a|0)==(k|0);if((e|0)==(d|0)&b){i=f;return}n=-l|0;g=ha(h,a)|0;p=k;k=d;d=r-l|0;o=b;a:while(1){b:do{if((p|0)==(a|0)){if(o){b=k;q=d;while(1){if((q<<1|0)>(n|0)){t=q-l|0;u=b+m|0}else{t=q;u=b}v=(u|0)==(e|0);if(!((t<<1|0)>=(r|0)|v)){w=u;x=t;break b}c[j+(u+g<<2)>>2]=4;if(v){y=29;break a}else{b=u;q=t}}}else{q=k;b=d;while(1){if((b<<1|0)>(n|0)){z=b-l|0;A=q+m|0}else{z=b;A=q}if(!((z<<1|0)>=(r|0)|(A|0)==(e|0))){w=A;x=z;break b}c[j+(A+g<<2)>>2]=4;q=A;b=z}}}else{b=ha(p,h)|0;if(o){q=k;v=d;while(1){if((v<<1|0)>(n|0)){B=v-l|0;C=q+m|0}else{B=v;C=q}if((B<<1|0)<(r|0)){w=C;x=B;break b}c[j+(C+b<<2)>>2]=4;if((C|0)==(e|0)){y=29;break a}else{q=C;v=B}}}else{v=k;q=d;while(1){if((q<<1|0)>(n|0)){D=q-l|0;E=v+m|0}else{D=q;E=v}if((D<<1|0)<(r|0)){w=E;x=D;break b}c[j+(E+b<<2)>>2]=4;v=E;q=D}}}}while(0);q=p+s|0;c[j+(w+(ha(q,h)|0)<<2)>>2]=4;v=(q|0)==(a|0);if((w|0)==(e|0)&v){y=29;break}else{p=q;k=w;d=x+r|0;o=v}}if((y|0)==29){i=f;return}}function df(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0;d=i;i=i+64|0;e=d|0;f=d+16|0;g=d+32|0;h=d+48|0;j=d+56|0;k=j;l=i;i=i+16|0;m=i;i=i+8|0;n=m;o=i;i=i+8|0;p=o;q=a|0;c[q>>2]=0;s=a+4|0;c[s>>2]=0;t=a+8|0;c[t>>2]=0;u=Lt(1e4)|0;v=u;c[s>>2]=v;c[q>>2]=v;w=u+1e4|0;c[t>>2]=w;t=2500;u=v;while(1){if((u|0)!=0){c[u>>2]=2}t=t-1|0;if((t|0)==0){break}else{u=u+4|0}}c[s>>2]=w;w=a+12|0;c[w>>2]=50;c[w+4>>2]=50;s=Le(b,26,30)|0;u=e|0;c[u>>2]=0;t=e+4|0;c[t>>2]=0;v=e+8|0;c[v>>2]=0;if((s|0)==0){i=d;return}x=g|0;y=g+4|0;z=g+8|0;A=h|0;B=h+4|0;C=f|0;D=f+4|0;E=f+8|0;F=f+12|0;G=l|0;H=l+4|0;I=l+8|0;J=l+12|0;K=0;do{L=c[w>>2]|0;M=c[w+4>>2]|0;c[x>>2]=0;c[y>>2]=0;c[z>>2]=L;c[z+4>>2]=M;c[A>>2]=1;c[B>>2]=1;Ze(f,g,h);M=c[C>>2]|0;L=c[D>>2]|0;N=c[E>>2]|0;O=c[F>>2]|0;P=Le(b,3,8)|0;Q=Le(b,3,8)|0;R=Le(b,M,N+M-P|0)|0;M=Le(b,L,O+L-Q|0)|0;L=R;O=0;N=c[w>>2]|0;if((M|R|0)<0){S=16;break}T=R+P|0;if((T|0)>(N|0)){S=16;break}U=M+Q|0;if((U|0)>(c[w+4>>2]|0)){S=16;break}if((Q|0)!=0){V=c[q>>2]|0;W=M|O;X=L|0;Y=R;Z=M;while(1){c[V+((ha(Z,N)|0)+Y<<2)>>2]=4;_=Y+1|0;if((_|0)==(T|0)){$=Z+1|O;aa=L|0}else{$=W|0|0;aa=_|X&0}Y=aa;Z=$;if(!((Z|0)!=(U|0)|(Y|0)!=(R|0))){break}else{W=$;X=aa}}}c[G>>2]=R;c[H>>2]=M;c[I>>2]=P;c[J>>2]=Q;Pe(k,b,l);if((K|0)>0){X=Ne(b,(c[t>>2]|0)-(c[u>>2]|0)>>3)|0;W=(c[u>>2]|0)+(X<<3)|0;X=c[W>>2]|0;Y=c[W+4>>2]|0;W=c[j+4>>2]|0;c[m>>2]=c[j>>2];c[m+4>>2]=W;c[o>>2]=X;c[o+4>>2]=Y;cf(b,a,n,p)}Y=c[t>>2]|0;if((Y|0)==(c[v>>2]|0)){ef(e,k)}else{if((Y|0)==0){ba=0}else{X=Y;Y=c[j+4>>2]|0;c[X>>2]=c[j>>2];c[X+4>>2]=Y;ba=c[t>>2]|0}c[t>>2]=ba+8}K=K+1|0}while((K|0)!=(s|0));if((S|0)==16){Vc(c[r>>2]|0,1592,(S=i,i=i+24|0,c[S>>2]=3544,c[S+8>>2]=235,c[S+16>>2]=2824,S)|0)|0;i=S;Uc()}S=c[u>>2]|0;if((S|0)==0){i=d;return}u=c[t>>2]|0;if((u|0)!=(S|0)){c[t>>2]=u+(~((u-8-S|0)>>>3)<<3)}Nt(S);i=d;return}function ef(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=(c[d>>2]|0)-f>>3;h=g+1|0;if(h>>>0>536870911>>>0){Ep(a)}i=a+8|0;a=(c[i>>2]|0)-f|0;if(a>>3>>>0<268435455>>>0){f=a>>2;a=f>>>0<h>>>0?h:f;if((a|0)==0){j=0;k=0}else{l=a;m=5}}else{l=536870911;m=5}if((m|0)==5){j=Lt(l<<3)|0;k=l}l=j+(g<<3)|0;if((l|0)!=0){m=b;b=l;l=c[m+4>>2]|0;c[b>>2]=c[m>>2];c[b+4>>2]=l}l=c[e>>2]|0;b=(c[d>>2]|0)-l|0;m=j+(g-(b>>3)<<3)|0;g=l;du(m|0,g|0,b)|0;c[e>>2]=m;c[d>>2]=j+(h<<3);c[i>>2]=j+(k<<3);if((l|0)==0){return}Nt(g);return}function ff(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=a[b]|0;e=(d&1)==0;if(e){f=(d&255)>>>1}else{f=c[b+4>>2]|0}if((f|0)==0){g=0;return g|0}if(e){h=b+1|0}else{h=c[b+8>>2]|0}switch((iu(a[h]|0)|0)<<24>>24|0){case 97:case 101:case 105:case 111:case 117:{g=1;return g|0};default:{}}g=0;return g|0}function gf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=d;f=a[e]|0;g=(f&1)==0;if(g){h=(f&255)>>>1}else{h=c[d+4>>2]|0}if((h|0)==0){h=b;c[h>>2]=c[e>>2];c[h+4>>2]=c[e+4>>2];c[h+8>>2]=c[e+8>>2];eu(e|0,0,12)|0;return}if(g){i=d+1|0}else{i=c[d+8>>2]|0}g=(bc(a[i]|0)|0)&255;if((a[e]&1)==0){j=d+1|0}else{j=c[d+8>>2]|0}a[j]=g;g=b;c[g>>2]=c[e>>2];c[g+4>>2]=c[e+4>>2];c[g+8>>2]=c[e+8>>2];eu(e|0,0,12)|0;return}function hf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+16|0;f=e|0;c[b>>2]=0;g=b+4|0;c[g>>2]=0;h=b+8|0;c[h>>2]=0;j=f;eu(j|0,0,12)|0;k=a[d]|0;if((k&1)==0){l=(k&255)>>>1;m=d+1|0;n=d+1|0}else{k=c[d+8>>2]|0;l=c[d+4>>2]|0;m=k;n=k}k=m+l|0;if((n|0)!=(k|0)){l=f+1|0;m=f+8|0;d=f+4|0;o=n;a:do{n=a[o]|0;do{if(n<<24>>24==10){p=c[g>>2]|0;if((p|0)==(c[h>>2]|0)){lf(b,f)}else{do{if((p|0)!=0){if((a[j]&1)==0){q=p;c[q>>2]=c[j>>2];c[q+4>>2]=c[j+4>>2];c[q+8>>2]=c[j+8>>2];break}q=c[m>>2]|0;r=c[d>>2]|0;if(r>>>0>4294967279>>>0){s=12;break a}if(r>>>0<11>>>0){a[p]=r<<1;t=p+1|0}else{u=r+16&-16;v=Lt(u)|0;c[p+8>>2]=v;c[p>>2]=u|1;c[p+4>>2]=r;t=v}du(t|0,q|0,r)|0;a[t+r|0]=0}}while(0);c[g>>2]=(c[g>>2]|0)+12}if((a[j]&1)==0){a[l]=0;a[j]=0;break}else{a[c[m>>2]|0]=0;c[d>>2]=0;break}}else{Pk(f,n)}}while(0);o=o+1|0}while((o|0)!=(k|0));if((s|0)==12){Dk(p)}p=c[g>>2]|0;if((p|0)!=(c[h>>2]|0)){do{if((p|0)!=0){if((a[j]&1)==0){h=p;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];break}h=c[f+8>>2]|0;k=c[f+4>>2]|0;if(k>>>0>4294967279>>>0){Dk(p)}if(k>>>0<11>>>0){a[p]=k<<1;w=p+1|0}else{o=k+16&-16;d=Lt(o)|0;c[p+8>>2]=d;c[p>>2]=o|1;c[p+4>>2]=k;w=d}du(w|0,h|0,k)|0;a[w+k|0]=0}}while(0);c[g>>2]=(c[g>>2]|0)+12}else{s=51}}else{s=51}if((s|0)==51){lf(b,f)}if((a[j]&1)==0){i=e;return}Nt(c[f+8>>2]|0);i=e;return}function jf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;f=i;i=i+16|0;g=f|0;c[b>>2]=0;h=b+4|0;c[h>>2]=0;j=b+8|0;c[j>>2]=0;k=d;if((a[k]&1)==0){l=d+1|0;m=l;n=l;o=d+8|0}else{l=d+8|0;m=c[l>>2]|0;n=d+1|0;o=l}l=g;p=g+1|0;q=d+4|0;d=g+8|0;r=g|0;s=g+4|0;t=m;u=m;v=m;a:while(1){m=v;if((t-m|0)!=(e|0)?(a[t]|0)!=10:0){w=a[k]|0;if((w&1)==0){x=(w&255)>>>1;y=n}else{x=c[q>>2]|0;y=c[o>>2]|0}if((t|0)!=(y+x|0)){z=t+1|0;A=u;B=v}else{C=11}}else{C=11}do{if((C|0)==11){C=0;if((u|0)!=(v|0)){w=a[k]|0;if((w&1)==0){D=(w&255)>>>1;E=n}else{D=c[q>>2]|0;E=c[o>>2]|0}if((t|0)!=(E+D|0)){F=u}else{C=16}}else{C=16}if((C|0)==16){C=0;F=t}w=F;while(1){if((Wa(a[w]|0)|0)!=0&(w|0)!=(v|0)){w=w-1|0}else{break}}if((w|0)==(F|0)){G=F}else{H=(Wa(a[w]|0)|0)==0;G=H?w+1|0:w}H=G-m|0;if(H>>>0>4294967279>>>0){break a}if(H>>>0<11>>>0){a[l]=H<<1;I=p}else{J=H+16&-16;K=Lt(J)|0;c[d>>2]=K;c[r>>2]=J|1;c[s>>2]=H;I=K}if((v|0)==(G|0)){L=I}else{K=I;J=v;while(1){a[K]=a[J]|0;J=J+1|0;if((J|0)==(G|0)){break}else{K=K+1|0}}L=I+H|0}a[L]=0;K=c[h>>2]|0;if(K>>>0<(c[j>>2]|0)>>>0){if((K|0)==0){M=0}else{J=K;c[J>>2]=c[l>>2];c[J+4>>2]=c[l+4>>2];c[J+8>>2]=c[l+8>>2];eu(l|0,0,12)|0;M=c[h>>2]|0}c[h>>2]=M+12}else{kf(b,g)}if(!((a[l]&1)==0)){Nt(c[d>>2]|0)}J=a[k]|0;if((J&1)==0){N=(J&255)>>>1;O=n}else{N=c[q>>2]|0;O=c[o>>2]|0}if((t|0)==(O+N|0)){C=65;break a}if((a[t]|0)==10){K=t+1|0;z=K;A=K;B=K;break}else{P=F;Q=J}while(1){if((Q&1)==0){R=(Q&255)>>>1;S=n}else{R=c[q>>2]|0;S=c[o>>2]|0}if((P|0)==(S+R|0)){break}J=a[P]|0;if(J<<24>>24==10){break}if((Wa(J<<24>>24|0)|0)==0){break}P=P+1|0;Q=a[k]|0}z=P+1|0;A=P;B=P}}while(0);m=(Wa(a[z]|0)|0)==0;t=z;u=m?A:z;v=B}if((C|0)==65){i=f;return}Dk(g)}function kf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=b+4|0;f=b|0;g=c[f>>2]|0;h=((c[e>>2]|0)-g|0)/12|0;i=h+1|0;if(i>>>0>357913941>>>0){Ep(b)}j=b+8|0;b=((c[j>>2]|0)-g|0)/12|0;if(b>>>0<178956970>>>0){g=b<<1;b=g>>>0<i>>>0?i:g;if((b|0)==0){k=0;l=0}else{m=b;n=5}}else{m=357913941;n=5}if((n|0)==5){k=Lt(m*12|0)|0;l=m}m=k+(h*12|0)|0;n=k+(l*12|0)|0;if((m|0)!=0){l=m;b=d;c[l>>2]=c[b>>2];c[l+4>>2]=c[b+4>>2];c[l+8>>2]=c[b+8>>2];eu(b|0,0,12)|0}b=k+(i*12|0)|0;i=c[f>>2]|0;l=c[e>>2]|0;if((l|0)!=(i|0)){d=h-1-(((l-12-i|0)>>>0)/12|0)|0;h=l;l=m;do{l=l-12|0;h=h-12|0;g=l;o=h;c[g>>2]=c[o>>2];c[g+4>>2]=c[o+4>>2];c[g+8>>2]=c[o+8>>2];eu(o|0,0,12)|0}while((h|0)!=(i|0));h=c[f>>2]|0;l=c[e>>2]|0;c[f>>2]=k+(d*12|0);c[e>>2]=b;c[j>>2]=n;if((l|0)==(h|0)){p=h}else{d=l;while(1){l=d-12|0;if(!((a[l]&1)==0)){Nt(c[d-12+8>>2]|0)}if((l|0)==(h|0)){p=h;break}else{d=l}}}}else{c[f>>2]=m;c[e>>2]=b;c[j>>2]=n;p=i}if((p|0)==0){return}Nt(p);return}function lf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=b+4|0;f=b|0;g=c[f>>2]|0;h=((c[e>>2]|0)-g|0)/12|0;i=h+1|0;if(i>>>0>357913941>>>0){Ep(b)}j=b+8|0;b=((c[j>>2]|0)-g|0)/12|0;if(b>>>0<178956970>>>0){g=b<<1;b=g>>>0<i>>>0?i:g;if((b|0)==0){k=0;l=0}else{m=b;n=5}}else{m=357913941;n=5}if((n|0)==5){k=Lt(m*12|0)|0;l=m}m=k+(h*12|0)|0;n=k+(l*12|0)|0;do{if((m|0)!=0){l=d;if((a[l]&1)==0){b=m;c[b>>2]=c[l>>2];c[b+4>>2]=c[l+4>>2];c[b+8>>2]=c[l+8>>2];break}l=c[d+8>>2]|0;b=c[d+4>>2]|0;if(b>>>0>4294967279>>>0){Dk(m)}if(b>>>0<11>>>0){a[m]=b<<1;o=m+1|0}else{g=b+16&-16;p=Lt(g)|0;c[k+(h*12|0)+8>>2]=p;c[m>>2]=g|1;c[k+(h*12|0)+4>>2]=b;o=p}du(o|0,l|0,b)|0;a[o+b|0]=0}}while(0);o=k+(i*12|0)|0;i=c[f>>2]|0;d=c[e>>2]|0;if((d|0)!=(i|0)){b=h-1-(((d-12-i|0)>>>0)/12|0)|0;h=d;d=m;do{d=d-12|0;h=h-12|0;l=d;p=h;c[l>>2]=c[p>>2];c[l+4>>2]=c[p+4>>2];c[l+8>>2]=c[p+8>>2];eu(p|0,0,12)|0}while((h|0)!=(i|0));h=c[f>>2]|0;d=c[e>>2]|0;c[f>>2]=k+(b*12|0);c[e>>2]=o;c[j>>2]=n;if((d|0)==(h|0)){q=h}else{b=d;while(1){d=b-12|0;if(!((a[d]&1)==0)){Nt(c[b-12+8>>2]|0)}if((d|0)==(h|0)){q=h;break}else{b=d}}}}else{c[f>>2]=m;c[e>>2]=o;c[j>>2]=n;q=i}if((q|0)==0){return}Nt(q);return}function mf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+8|0;f=a;a=i;i=i+8|0;c[a>>2]=c[f>>2];c[a+4>>2]=c[f+4>>2];f=b;b=i;i=i+8|0;c[b>>2]=c[f>>2];c[b+4>>2]=c[f+4>>2];f=e|0;g=i;i=i+8|0;h=a;a=c[h+4>>2]|0;c[f>>2]=c[h>>2];c[f+4>>2]=a;a=b;b=c[a+4>>2]|0;c[g>>2]=c[a>>2];c[g+4>>2]=b;b=((Ve(f,g)|0)<<1)+d|0;i=e;return b|0}function nf(a,b){a=a|0;b=b|0;var c=0;c=ha(b,a)|0;return((c|0)>-1?c:-c|0)+2|0}function of(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=i;i=i+8|0;f=d;d=i;i=i+16|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];c[d+12>>2]=c[f+12>>2];f=e|0;g=f;h=i;i=i+8|0;j=i;i=i+8|0;k=i;i=i+20|0;i=i+7&-8;l=i;i=i+3|0;i=i+7&-8;m=b+12|0;n=c[m>>2]|0;o=c[m+4>>2]|0;p=d+8|0;q=c[p>>2]|0;r=c[p+4>>2]|0;if(!((n|0)<(q|0)|(o|0)<(r|0))){p=b+28|0;c[p>>2]=(c[p>>2]|0)+1;p=c[b>>2]|0;s=c[b+4>>2]|0;if((p|0)==(s|0)){i=e;return}else{t=p}do{a[t+20|0]=0;t=t+24|0}while((t|0)!=(s|0));i=e;return}c[h>>2]=n;c[h+4>>2]=o;c[j>>2]=q;c[j+4>>2]=r;Ue(g,h,j);j=f;c[j>>2]=(c[j>>2]|0)+32;j=g+4|0;c[j>>2]=(c[j>>2]|0)+32;j=c[f>>2]|0;g=c[f+4>>2]|0;f=ha(g,j)|0;h=k|0;c[h>>2]=0;r=k+4|0;c[r>>2]=0;q=k+8|0;c[q>>2]=0;if((f|0)==0){u=0;v=0}else{if(f>>>0>178956970>>>0){Ep(k)}o=Lt(f*24|0)|0;c[r>>2]=o;c[h>>2]=o;c[q>>2]=o+(f*24|0);n=l|0;l=f;f=o;while(1){if((f|0)==0){w=0}else{c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=-1;c[f+16>>2]=-1;a[f+20|0]=0;s=f+21|0;a[s]=a[n]|0;a[s+1|0]=a[n+1|0]|0;a[s+2|0]=a[n+2|0]|0;w=c[r>>2]|0}s=w+24|0;c[r>>2]=s;t=l-1|0;if((t|0)==0){u=o;v=s;break}else{l=t;f=s}}}f=k+12|0;c[f>>2]=j;c[f+4>>2]=g;f=b|0;k=c[f>>2]|0;l=b+4|0;if((k|0)==0){x=b+8|0}else{o=c[l>>2]|0;if((o|0)!=(k|0)){c[l>>2]=o+(~(((o-24-k|0)>>>0)/24|0)*24|0)}Nt(k);k=b+8|0;c[k>>2]=0;c[l>>2]=0;c[f>>2]=0;x=k}c[f>>2]=u;c[l>>2]=v;c[x>>2]=c[q>>2];c[q>>2]=0;c[r>>2]=0;c[h>>2]=0;c[m>>2]=j;c[m+4>>2]=g;g=d;d=b+20|0;m=c[g+4>>2]|0;c[d>>2]=c[g>>2];c[d+4>>2]=m;c[b+28>>2]=0;i=e;return}function pf(a,b){a=a|0;b=b|0;return(c[b+4>>2]|0)>>>0>(c[a+28>>2]|0)>>>0|0}function qf(a,b){a=a|0;b=b|0;c[b+4>>2]=(c[a+28>>2]|0)+1;return}function rf(a,b){a=a|0;b=b|0;c[b+4>>2]=c[a+28>>2];return}function sf(a,b){a=a|0;b=b|0;return(c[b+8>>2]|0)>>>0>(c[a+28>>2]|0)>>>0|0}function tf(a,b){a=a|0;b=b|0;c[b+8>>2]=(c[a+28>>2]|0)+1;return}function uf(){var a=0,b=0,d=0;a=i;i=i+32|0;b=a|0;d=a+16|0;c[b>>2]=0;c[b+4>>2]=0;vf(26848,b,a+8|0);c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=128;c[d+12>>2]=128;of(26848,d);qb(292,26848,v|0)|0;i=a;return}function vf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;i=i+24|0;e=b;b=i;i=i+8|0;c[b>>2]=c[e>>2];c[b+4>>2]=c[e+4>>2];e=b;b=c[e>>2]|0;f=c[e+4>>2]|0;e=ha(f,b)|0;g=d|0;eu(g|0,0,24)|0;h=a|0;c[h>>2]=0;j=a+4|0;c[j>>2]=0;k=a+8|0;c[k>>2]=0;if((e|0)==0){l=a+12|0;m=l;n=m|0;c[n>>2]=b;o=m+4|0;c[o>>2]=f;i=d;return}if(e>>>0>178956970>>>0){Ep(a)}p=Lt(e*24|0)|0;c[j>>2]=p;c[h>>2]=p;c[k>>2]=p+(e*24|0);k=e;e=p;do{if((e|0)==0){q=0}else{p=e;c[p>>2]=c[g>>2];c[p+4>>2]=c[g+4>>2];c[p+8>>2]=c[g+8>>2];c[p+12>>2]=c[g+12>>2];c[p+16>>2]=c[g+16>>2];c[p+20>>2]=c[g+20>>2];q=c[j>>2]|0}e=q+24|0;c[j>>2]=e;k=k-1|0}while((k|0)!=0);l=a+12|0;m=l;n=m|0;c[n>>2]=b;o=m+4|0;c[o>>2]=f;i=d;return}function wf(a){a=a|0;var b=0,d=0;b=c[a>>2]|0;if((b|0)==0){return}d=a+4|0;a=c[d>>2]|0;if((a|0)!=(b|0)){c[d>>2]=a+(~(((a-24-b|0)>>>0)/24|0)*24|0)}Nt(b);return}function xf(a,b){a=a|0;b=b|0;c[a>>2]=32;c[a+4>>2]=0;c[a+8>>2]=b;return}function yf(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b|0;c[d>>2]=0;c[d+4>>2]=0;ie(d+8|0);af(a|0,d);i=b;return}function zf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+16|0;g=d;d=i;i=i+12|0;i=i+7&-8;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];c[d+8>>2]=c[g+8>>2];g=e;e=i;i=i+8|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];g=f|0;h=f+8|0;j=i;i=i+3|0;i=i+7&-8;k=i;i=i+3|0;i=i+7&-8;l=i;i=i+8|0;m=i;i=i+3|0;i=i+7&-8;n=e;e=c[n+4>>2]|0;c[g>>2]=c[n>>2];c[g+4>>2]=e;_e(h,b|0,g);Qf(j,c[d+4>>2]|0);Qf(k,c[d+8>>2]|0);a[j+1|0]=a[k|0]|0;k=c[d>>2]|0;d=c[h+4>>2]|0;c[l>>2]=c[h>>2];c[l+4>>2]=d;d=m|0;h=j|0;a[d]=a[h]|0;a[d+1|0]=a[h+1|0]|0;a[d+2|0]=a[h+2|0]|0;je(k,l,m);i=f;return}function Af(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;g=i;i=i+48|0;h=e;e=i;i=i+8|0;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];h=g|0;j=g+8|0;k=g+24|0;l=g+40|0;m=l;n=i;i=i+3|0;i=i+7&-8;o=i;i=i+8|0;p=o;q=i;i=i+3|0;i=i+7&-8;r=d;if((a[r]&1)==0){s=k;c[s>>2]=c[r>>2];c[s+4>>2]=c[r+4>>2];c[s+8>>2]=c[r+8>>2]}else{r=c[d+8>>2]|0;s=c[d+4>>2]|0;if(s>>>0>4294967279>>>0){Dk(k)}if(s>>>0<11>>>0){a[k]=s<<1;t=k+1|0}else{d=s+16&-16;u=Lt(d)|0;c[k+8>>2]=u;c[k>>2]=d|1;c[k+4>>2]=s;t=u}du(t|0,r|0,s)|0;a[t+s|0]=0}hf(j,k);if(!((a[k]&1)==0)){Nt(c[k+8>>2]|0)}k=e;e=c[k+4>>2]|0;c[h>>2]=c[k>>2];c[h+4>>2]=e;_e(m,b|0,h);Qf(n,f);f=j|0;h=c[f>>2]|0;b=j+4|0;j=c[b>>2]|0;if((h|0)==(j|0)){v=h}else{e=q|0;k=n|0;n=m+4|0;m=h;do{if((a[m]&1)==0){w=m+1|0}else{w=c[m+8>>2]|0}h=c[l+4>>2]|0;c[o>>2]=c[l>>2];c[o+4>>2]=h;a[e]=a[k]|0;a[e+1|0]=a[k+1|0]|0;a[e+2|0]=a[k+2|0]|0;ke(w,p,q);c[n>>2]=(c[n>>2]|0)+1;m=m+12|0}while((m|0)!=(j|0));v=c[f>>2]|0}if((v|0)==0){i=g;return}j=c[b>>2]|0;if((j|0)==(v|0)){x=v}else{m=j;while(1){j=m-12|0;c[b>>2]=j;if((a[j]&1)==0){y=j}else{Nt(c[m-12+8>>2]|0);y=c[b>>2]|0}if((y|0)==(v|0)){break}else{m=y}}x=c[f>>2]|0}Nt(x);i=g;return}function Bf(a,b){a=a|0;b=b|0;var d=0;d=b+72|0;b=a;a=c[d+4>>2]|0;c[b>>2]=c[d>>2];c[b+4>>2]=a;return}function Cf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+192|0;f=e|0;g=e+16|0;h=e+32|0;j=e+112|0;k=b+72|0;l=(c[k>>2]|0)-d|0;m=c[k+4>>2]|0;k=b|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=d;c[f+12>>2]=m;bf(h|0,k,f);c[g>>2]=d;c[g+4>>2]=0;c[g+8>>2]=l;c[g+12>>2]=m;bf(j|0,k,g);du(a|0,h|0,80)|0;du(a+80|0,j|0,80)|0;i=e;return}function Df(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+192|0;f=e|0;g=e+16|0;h=e+32|0;j=e+112|0;k=b+72|0;l=(c[k+4>>2]|0)-d|0;m=c[k>>2]|0;k=b|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=m;c[f+12>>2]=d;bf(h|0,k,f);c[g>>2]=0;c[g+4>>2]=d;c[g+8>>2]=m;c[g+12>>2]=l;bf(j|0,k,g);du(a|0,h|0,80)|0;du(a+80|0,j|0,80)|0;i=e;return}function Ef(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;i=i+24|0;e=d|0;f=d+16|0;g=b+72|0;h=c[g+4>>2]|0;j=c[g>>2]|0;g=f|0;k=d+8|0;l=e;m=b|0;if((h|0)==0){i=d;return}else{n=0;o=0;p=0;q=0}while(1){c[e>>2]=o;c[e+4>>2]=n;_e(k,m,l);eu(g|0,0,3)|0;a[g]=0;je(32,k,f);b=p+1|0;if((b|0)==(j|0)){r=q+1|0;s=0}else{r=n|0|0;s=b|o&0}p=s;q=r;if(!((q|0)!=(h|0)|(p|0)!=0)){break}else{n=r;o=s}}i=d;return}function Ff(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0;e=i;i=i+224|0;f=b;b=i;i=i+16|0;c[b>>2]=c[f>>2];c[b+4>>2]=c[f+4>>2];c[b+8>>2]=c[f+8>>2];c[b+12>>2]=c[f+12>>2];f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=e+40|0;m=e+48|0;n=e+56|0;o=e+64|0;p=e+72|0;q=e+80|0;r=e+88|0;s=e+96|0;t=e+104|0;u=e+112|0;v=e+120|0;w=e+128|0;x=e+136|0;y=e+144|0;z=e+160|0;A=e+168|0;B=e+176|0;C=e+184|0;D=e+192|0;E=e+208|0;F=D;G=a|0;a=b;c[F>>2]=c[a>>2];c[F+4>>2]=c[a+4>>2];c[F+8>>2]=c[a+8>>2];c[F+12>>2]=c[a+12>>2];$e(E,G,D);D=E;c[a>>2]=c[D>>2];c[a+4>>2]=c[D+4>>2];c[a+8>>2]=c[D+8>>2];c[a+12>>2]=c[D+12>>2];D=c[b>>2]|0;a=c[b+4>>2]|0;E=D+1|0;F=c[b+8>>2]|0;H=D-1+F|0;if((E|0)<(H|0)){I=e+152|0;J=y;K=0;L=a;M=D+F-1|0;F=D+2|0;N=(M|0)>(F|0);O=E;do{c[y>>2]=O|K;c[y+4>>2]=L;_e(I,G,J);Qf(z,d);je(57600,I,z);O=O+1|0}while((O|0)<(H|0));P=N?M:F;Q=L;R=K}else{P=E;Q=a;R=0}E=w;w=P;K=0;c[v>>2]=w|R;c[v+4>>2]=K|Q;_e(E,G,v);Qf(x,d);je(57603,E,x);x=a+1|0;E=c[b+12>>2]|0;b=a-1+E|0;if((x|0)<(b|0)){v=t;t=s;Q=a+E-1|0;E=a+2|0;R=(Q|0)>(E|0);L=x;do{c[s>>2]=w;c[s+4>>2]=L|K;_e(v,G,t);Qf(u,d);je(57601,v,u);L=L+1|0}while((L|0)<(b|0));S=R?Q:E}else{S=x}x=q;q=0;E=S;c[p>>2]=q|w;c[p+4>>2]=E|K;_e(x,G,p);Qf(r,d);je(57605,x,r);r=P-1|0;if((r|0)>(D|0)){x=n;n=m;p=~D;K=1-P|0;P=(K|0)<(p|0)?p:K;K=r;do{c[m>>2]=K|q;c[m+4>>2]=E;_e(x,G,n);Qf(o,d);je(57600,x,o);K=K-1|0}while((K|0)>(D|0));T=~P}else{T=r}r=k;k=T;T=0;c[j>>2]=k|q;c[j+4>>2]=T|E;_e(r,G,j);Qf(l,d);je(57604,r,l);l=S-1|0;if((l|0)<=(a|0)){U=l;V=B;W=8;X=0;Y=C|0;Z=3;_=0;$=B;aa=A;ba=8;ca=0;da=A;ea=U;fa=0;ga=0;ha=ea;ia=ga|k;ja=ha|T;ka=A|0;c[ka>>2]=ia;la=A+4|0;c[la>>2]=ja;_e($,G,da);ma=8;na=0;Qf(C,d);je(57602,$,C);oa=8;pa=0;qa=3;ra=0;i=e;return}r=g;g=f;j=~a;E=1-S|0;S=(E|0)<(j|0)?j:E;E=l;do{c[f>>2]=k;c[f+4>>2]=E|T;_e(r,G,g);Qf(h,d);je(57601,r,h);E=E-1|0}while((E|0)>(a|0));U=~S;V=B;W=8;X=0;Y=C|0;Z=3;_=0;$=B;aa=A;ba=8;ca=0;da=A;ea=U;fa=0;ga=0;ha=ea;ia=ga|k;ja=ha|T;ka=A|0;c[ka>>2]=ia;la=A+4|0;c[la>>2]=ja;_e($,G,da);ma=8;na=0;Qf(C,d);je(57602,$,C);oa=8;pa=0;qa=3;ra=0;i=e;return}function Gf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=i;i=i+40|0;g=d;d=i;i=i+16|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];c[d+8>>2]=c[g+8>>2];c[d+12>>2]=c[g+12>>2];g=f|0;h=f+16|0;j=f+24|0;k=d;l=d;m=c[l>>2]|0;n=c[l+4>>2]|0;l=d+8|0;d=n;o=d;p=m|0;q=n&0;n=c[l+4>>2]|0;r=n+o|0;s=m;m=h|0;t=f+8|0;u=g;v=b|0;w=(c[l>>2]|0)+s|0;if((n|0)==0){x=j;c[x>>2]=c[k>>2];c[x+4>>2]=c[k+4>>2];c[x+8>>2]=c[k+8>>2];c[x+12>>2]=c[k+12>>2];Ff(b,j,e);i=f;return}n=d|q;d=p|0;l=s;y=o;while(1){c[g>>2]=d;c[g+4>>2]=n;_e(t,v,u);eu(m|0,0,3)|0;a[m]=0;je(32,t,h);o=l+1|0;if((o|0)==(w|0)){z=y+1|q;A=p|0}else{z=n|0|0;A=o|d&0}l=A;y=z;if(!((y|0)!=(r|0)|(l|0)!=(s|0))){break}else{n=z;d=A}}x=j;c[x>>2]=c[k>>2];c[x+4>>2]=c[k+4>>2];c[x+8>>2]=c[k+8>>2];c[x+12>>2]=c[k+12>>2];Ff(b,j,e);i=f;return}function Hf(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0;a=c[6658]|0;b=c[6659]|0;if((a|0)!=(b|0)){d=a;do{a=c[6663]|0;if(a>>>0<(c[6664]|0)>>>0){if((a|0)==0){e=0}else{f=d|0;g=c[f>>2]|0;c[f>>2]=0;c[a>>2]=g;e=c[6663]|0}c[6663]=e+4}else{Rf(26648,d)}d=d+4|0}while((d|0)!=(b|0));b=c[6658]|0;d=c[6659]|0;if((d|0)!=(b|0)){e=d;do{d=e-4|0;c[6659]=d;g=d|0;d=c[g>>2]|0;c[g>>2]=0;if((d|0)!=0){zd[c[(c[d>>2]|0)+4>>2]&511](d)}e=c[6659]|0}while((e|0)!=(b|0))}b=c[(c[6663]|0)-4>>2]|0;Ad[c[(c[b>>2]|0)+12>>2]&127](b,22104)}if((c[6662]|0)==(c[6663]|0)){h=0;return h|0}le();h=1;return h|0}function If(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;b=i;i=i+104|0;d=b|0;e=b+16|0;f=b+96|0;g=c[6663]|0;if((c[6662]|0)==(g|0)){Vc(c[r>>2]|0,320,(h=i,i=i+24|0,c[h>>2]=1936,c[h+8>>2]=273,c[h+16>>2]=2232,h)|0)|0;i=h;Uc();return 0}h=c[g-4>>2]|0;g=Bd[c[(c[h>>2]|0)+16>>2]&127](h,a)|0;h=c[6662]|0;j=c[6663]|0;a:do{if((h|0)==(j|0)){k=h;l=h}else{m=f|0;n=f+4|0;o=g;p=(g|0)==0?a:0;q=j;while(1){s=c[q-4>>2]|0;t=c[(c[s>>2]|0)+20>>2]|0;c[m>>2]=o;c[n>>2]=p;u=Bd[t&127](s,f)|0;v=c[6663]|0;if(!u){break}u=v-4|0;s=v;do{t=s-4|0;c[6663]=t;w=t|0;t=c[w>>2]|0;c[w>>2]=0;if((t|0)!=0){zd[c[(c[t>>2]|0)+4>>2]&511](t)}s=c[6663]|0}while((s|0)!=(u|0));if((c[6662]|0)==(u|0)){k=u;l=u;break a}else{o=0;p=0;q=u}}k=v;l=c[6662]|0}}while(0);v=k-l>>2;if((v|0)==0){x=80;y=0;i=b;return 1}else{z=v}while(1){l=z-1|0;if((l|0)==0){A=0;break}k=c[(c[6662]|0)+(l<<2)>>2]|0;if(Ed[c[(c[k>>2]|0)+8>>2]&255](k)|0){z=l}else{A=l;break}}if(!(A>>>0<v>>>0)){x=80;y=0;i=b;return 1}z=e|0;l=d|0;k=d+4|0;f=d+8|0;j=A;do{A=j;j=j+1|0;a=c[(c[6662]|0)+(A<<2)>>2]|0;A=c[(c[a>>2]|0)+12>>2]|0;c[l>>2]=0;c[k>>2]=0;ie(f);af(z,d);Ad[A&127](a,e)}while(j>>>0<v>>>0);x=80;y=0;i=b;return 1}function Jf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;e=i;i=i+144|0;f=e|0;g=e+16|0;h=e+24|0;j=e+32|0;k=e+48|0;l=e+64|0;m=e+80|0;n=e+88|0;o=e+104|0;p=e+120|0;q=e+136|0;r=q;s=d+72|0;t=(c[s>>2]|0)/2|0;u=b+4|0;if((a[u]&1)==0){v=k;c[v>>2]=c[u>>2];c[v+4>>2]=c[u+4>>2];c[v+8>>2]=c[u+8>>2]}else{u=c[b+12>>2]|0;v=c[b+8>>2]|0;if(v>>>0>4294967279>>>0){Dk(k)}if(v>>>0<11>>>0){a[k]=v<<1;w=k+1|0}else{b=v+16&-16;x=Lt(b)|0;c[k+8>>2]=x;c[k>>2]=b|1;c[k+4>>2]=v;w=x}du(w|0,u|0,v)|0;a[w+v|0]=0}jf(j,k,t-2|0);if(!((a[k]&1)==0)){Nt(c[k+8>>2]|0)}k=j+4|0;v=j|0;j=(((c[k>>2]|0)-(c[v>>2]|0)|0)/12|0)+2|0;c[m>>2]=t;c[m+4>>2]=j;j=c[s>>2]|0;t=c[s+4>>2]|0;c[n>>2]=0;c[n+4>>2]=0;s=n+8|0;c[s>>2]=j;c[s+4>>2]=t;Ye(l,m,n);n=l;m=c[n>>2]|0;t=c[n+4>>2]|0;s=c[l+8>>2]|0;j=c[l+12>>2]|0;a[o]=0;a[o+1|0]=0;a[p]=12;l=p;w=l+1|0;a[w]=a[1552]|0;a[w+1|0]=a[1553]|0;a[w+2|0]=a[1554]|0;a[w+3|0]=a[1555]|0;a[w+4|0]=a[1556]|0;a[w+5|0]=a[1557]|0;a[l+7|0]=0;l=f;c[l>>2]=m;c[l+4>>2]=t;c[f+8>>2]=s;c[f+12>>2]=j;Gf(d,f,7);c[g>>2]=m;c[g+4>>2]=t;Af(d,o,g,7);c[h>>2]=m-1+s-6;c[h+4>>2]=t-1+j;Af(d,p,h,7);h=c[v>>2]|0;p=c[k>>2]|0;j=(c[n>>2]|0)+1|0;t=0;if((h|0)==(p|0)){y=p}else{s=h;h=c[n+4>>2]|0;do{h=h+1|0;c[q>>2]=j;c[q+4>>2]=h|t;Af(d,s,r,7);s=s+12|0}while((s|0)!=(p|0));y=c[v>>2]|0}if((y|0)==0){i=e;return}p=c[k>>2]|0;if((p|0)==(y|0)){z=y}else{s=p;while(1){p=s-12|0;c[k>>2]=p;if((a[p]&1)==0){A=p}else{Nt(c[s-12+8>>2]|0);A=c[k>>2]|0}if((A|0)==(y|0)){break}else{s=A}}z=c[v>>2]|0}Nt(z);i=e;return}function Kf(a,b){a=a|0;b=b|0;var c=0;if((b|0)==110){c=5}else if((b|0)==121){c=4}else{c=0}return c|0}function Lf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=d;d=i;i=i+8|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];f=e|0;g=e+8|0;h=c[d>>2]|0;if((h|0)==5){a[f]=0;d=c[b+32>>2]|0;if((d|0)==0){j=dd(4)|0;c[j>>2]=7344;ac(j|0,19560,246);return 0}Ad[c[(c[d>>2]|0)+24>>2]&127](d,f);k=1;i=e;return k|0}else if((h|0)==4){a[g]=1;h=c[b+32>>2]|0;if((h|0)==0){b=dd(4)|0;c[b>>2]=7344;ac(b|0,19560,246);return 0}Ad[c[(c[h>>2]|0)+24>>2]&127](h,g);k=1;i=e;return k|0}else{k=0;i=e;return k|0}return 0}function Mf(){var a=0,b=0;a=i;i=i+16|0;b=a|0;c[b>>2]=0;c[b+4>>2]=0;ie(b+8|0);af(22104,b);c[6658]=0;c[6659]=0;c[6660]=0;qb(184,26632,v|0)|0;c[6662]=0;c[6663]=0;c[6664]=0;qb(184,26648,v|0)|0;i=a;return}function Nf(b){b=b|0;var d=0;c[b>>2]=9400;d=c[b+32>>2]|0;if((d|0)!=(b+16|0)){if((d|0)!=0){zd[c[(c[d>>2]|0)+20>>2]&511](d)}}else{zd[c[(c[d>>2]|0)+16>>2]&511](d)}if((a[b+4|0]&1)==0){return}Nt(c[b+12>>2]|0);return}function Of(b){b=b|0;var d=0,e=0;c[b>>2]=9400;d=c[b+32>>2]|0;if((d|0)!=(b+16|0)){if((d|0)!=0){zd[c[(c[d>>2]|0)+20>>2]&511](d)}}else{zd[c[(c[d>>2]|0)+16>>2]&511](d)}if((a[b+4|0]&1)==0){e=b;pe(e,40);return}Nt(c[b+12>>2]|0);e=b;pe(e,40);return}function Pf(a){a=a|0;return 1}function Qf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+80|0;f=e|0;g=e+16|0;if((d|0)==18){if((a[27080]|0)==0?(Lb(27080)|0)!=0:0){Re(24952,ud(0)|0)}c[f>>2]=14;c[f+4>>2]=4;c[f+8>>2]=12;h=c[f+((Ne(24952,3)|0)<<2)>>2]|0}else if((d|0)==17){if((a[27080]|0)==0?(Lb(27080)|0)!=0:0){Re(24952,ud(0)|0)}c[g>>2]=1;c[g+4>>2]=2;c[g+8>>2]=3;c[g+12>>2]=4;c[g+16>>2]=5;c[g+20>>2]=6;c[g+24>>2]=7;c[g+28>>2]=8;c[g+32>>2]=9;c[g+36>>2]=10;c[g+40>>2]=11;c[g+44>>2]=12;c[g+48>>2]=13;c[g+52>>2]=14;c[g+56>>2]=15;h=c[g+((Ne(24952,15)|0)<<2)>>2]|0}else{h=d}d=b|0;eu(d|0,0,3)|0;switch(h|0){case 5:{j=28;break};case 14:{a[b+2|0]=1;j=30;break};case 6:{j=30;break};case 4:{j=26;break};case 13:{a[b+2|0]=1;j=28;break};case 10:{a[b+2|0]=1;j=22;break};case 0:{j=18;break};case 15:{a[b+2|0]=1;j=32;break};case 7:{j=32;break};case 1:{j=20;break};case 2:{j=22;break};case 11:{a[b+2|0]=1;j=24;break};case 3:{j=24;break};case 12:{a[b+2|0]=1;j=26;break};case 9:{a[b+2|0]=1;j=20;break};case 8:{a[b+2|0]=1;j=18;break};default:{i=e;return}}if((j|0)==18){a[d]=0;i=e;return}else if((j|0)==20){a[d]=1;i=e;return}else if((j|0)==22){a[d]=2;i=e;return}else if((j|0)==24){a[d]=3;i=e;return}else if((j|0)==26){a[d]=4;i=e;return}else if((j|0)==28){a[d]=5;i=e;return}else if((j|0)==30){a[d]=6;i=e;return}else if((j|0)==32){a[d]=7;i=e;return}}function Rf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=(c[d>>2]|0)-f>>2;h=g+1|0;if(h>>>0>1073741823>>>0){Ep(a)}i=a+8|0;a=(c[i>>2]|0)-f|0;if(a>>2>>>0<536870911>>>0){f=a>>1;a=f>>>0<h>>>0?h:f;if((a|0)==0){j=0;k=0}else{l=a;m=5}}else{l=1073741823;m=5}if((m|0)==5){j=Lt(l<<2)|0;k=l}l=j+(g<<2)|0;m=j+(k<<2)|0;if((l|0)!=0){k=b|0;b=c[k>>2]|0;c[k>>2]=0;c[l>>2]=b}b=j+(h<<2)|0;h=c[e>>2]|0;k=c[d>>2]|0;if((k|0)!=(h|0)){a=g-1-((k-4-h|0)>>>2)|0;g=k;k=l;while(1){g=g-4|0;f=g|0;n=c[f>>2]|0;c[f>>2]=0;c[k-4>>2]=n;if((g|0)==(h|0)){break}else{k=k-4|0}}k=c[e>>2]|0;g=c[d>>2]|0;c[e>>2]=j+(a<<2);c[d>>2]=b;c[i>>2]=m;if((g|0)==(k|0)){o=k}else{a=g;while(1){g=a-4|0;j=g|0;n=c[j>>2]|0;c[j>>2]=0;if((n|0)!=0){zd[c[(c[n>>2]|0)+4>>2]&511](n)}if((g|0)==(k|0)){o=k;break}else{a=g}}}}else{c[e>>2]=l;c[d>>2]=b;c[i>>2]=m;o=h}if((o|0)==0){return}Nt(o);return}function Sf(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=a|0;d=c[b>>2]|0;if((d|0)==0){return}e=a+4|0;a=c[e>>2]|0;if((a|0)==(d|0)){f=d}else{g=a;do{a=g-4|0;c[e>>2]=a;h=a|0;a=c[h>>2]|0;c[h>>2]=0;if((a|0)!=0){zd[c[(c[a>>2]|0)+4>>2]&511](a)}g=c[e>>2]|0}while((g|0)!=(d|0));f=c[b>>2]|0}Nt(f);return}function Tf(b){b=b|0;var d=0,e=0;if((b|0)==0){if((a[27096]|0)!=0){d=25048;return d|0}if((Lb(27096)|0)==0){d=25048;return d|0}c[6262]=0;c[6263]=1584;c[6264]=3464;c[6265]=114;c[6266]=6;c[6267]=1;c[6268]=1;c[6269]=10;c[6270]=8;c[6271]=1;c[6272]=0;c[6273]=20;e=25096;c[e>>2]=0;c[e+4>>2]=0;c[6276]=10;e=25108;c[e>>2]=0;c[e+4>>2]=0;c[6277]=0;c[6278]=0;d=25048;return d|0}else if((b|0)==1){if((a[27088]|0)!=0){d=24976;return d|0}if((Lb(27088)|0)==0){d=24976;return d|0}c[6244]=1;c[6245]=2696;c[6246]=2208;c[6247]=115;c[6248]=2;c[6249]=1;c[6250]=1;c[6251]=30;c[6252]=8;c[6253]=1;c[6254]=0;c[6255]=20;b=25024;c[b>>2]=0;c[b+4>>2]=0;c[6258]=10;b=25036;c[b>>2]=0;c[b+4>>2]=0;c[6259]=0;c[6260]=0;d=24976;return d|0}else{if((a[27096]|0)!=0){d=25048;return d|0}if((Lb(27096)|0)==0){d=25048;return d|0}c[6262]=0;c[6263]=1584;c[6264]=3464;c[6265]=114;c[6266]=6;c[6267]=1;c[6268]=1;c[6269]=10;c[6270]=8;c[6271]=1;c[6272]=0;c[6273]=20;b=25096;c[b>>2]=0;c[b+4>>2]=0;c[6276]=10;b=25108;c[b>>2]=0;c[b+4>>2]=0;c[6277]=0;c[6278]=0;d=25048;return d|0}return 0}function Uf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;Zg(a|0,b|0);d=b+12|0;b=a+12|0;e=c[d+4>>2]|0;c[b>>2]=c[d>>2];c[b+4>>2]=e;c[a+20>>2]=2;c[a+24>>2]=0;c[a+28>>2]=0;c[a+32>>2]=0;e=a+36|0;b=c[d>>2]|0;f=c[d+4>>2]|0;d=ha(f,b)|0;g=e|0;c[g>>2]=0;h=a+40|0;c[h>>2]=0;i=a+44|0;c[i>>2]=0;if((d|0)!=0){if(d>>>0>1073741823>>>0){Ep(e)}e=Lt(d<<2)|0;c[h>>2]=e;c[g>>2]=e;c[i>>2]=e+(d<<2);i=d;d=e;do{if((d|0)==0){j=0}else{c[d>>2]=0;j=c[h>>2]|0}d=j+4|0;c[h>>2]=d;i=i-1|0}while((i|0)!=0)}i=a+48|0;c[i>>2]=b;c[i+4>>2]=f;c[a+56>>2]=0;c[a+60>>2]=0;c[a+64>>2]=0;Vi(a+68|0,80);return}function Vf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+24|0;e=b;b=i;i=i+8|0;c[b>>2]=c[e>>2];c[b+4>>2]=c[e+4>>2];e=d+8|0;f=Lt(8)|0;g=f;h=b;b=f;f=c[h+4>>2]|0;c[b>>2]=c[h>>2];c[b+4>>2]=f;c[e>>2]=a;c[e+4>>2]=g;c[e+8>>2]=0;f=Lt(4744)|0;b=f;h=f;ah(h,d|0,e);if((c[f+16>>2]|0)>=1){Vc(c[r>>2]|0,1896,(f=i,i=i+24|0,c[f>>2]=1416,c[f+8>>2]=57,c[f+16>>2]=3392,f)|0)|0;i=f;Uc();return 0}bh(h);h=a+56|0;f=c[h>>2]|0;c[h>>2]=g;g=a+60|0;a=c[g>>2]|0;c[g>>2]=b;if((a|0)!=0){_g(a|0);pe(a,4744)}if((f|0)==0){i=d;return b|0}pe(f,8);i=d;return b|0}function Wf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;f=i;i=i+48|0;g=e;e=i;i=i+8|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;l=f+40|0;m=l;n=e;e=c[n>>2]|0;o=c[n+4>>2]|0;n=b+12|0;p=e;q=o;if(!((q|e|0)>-1&(p|0)<(c[n>>2]|0))){s=0;i=f;return s|0}t=q;if((t|0)>=(c[n+4>>2]|0)){s=0;i=f;return s|0}n=c[b+60>>2]|0;if((n|0)!=0?(q=c[n+4712>>2]|0,(p|0)==(c[q>>2]|0)&(t|0)==(c[q+4>>2]|0)):0){s=0;i=f;return s|0}q=b+36|0;n=(ha(c[b+48>>2]|0,t)|0)+p|0;u=c[q>>2]|0;if(!((c[b+40>>2]|0)-u>>2>>>0>n>>>0)){Fp(q);return 0}if((c[u+(n<<2)>>2]|0)!=0){s=0;i=f;return s|0}n=b+20|0;u=c[n>>2]|0;c[n>>2]=u+1;c[j>>2]=u;c[j+4>>2]=0;ch(h,b+24|0,j);j=c[h>>2]|0;if((a[h+4|0]|0)==0){Vc(c[r>>2]|0,1896,(v=i,i=i+24|0,c[v>>2]=1416,c[v+8>>2]=76,c[v+16>>2]=2624,v)|0)|0;i=v;Uc();return 0}h=Lt(16)|0;n=h;c[h>>2]=u;u=h+4|0;c[u>>2]=e;c[u+4>>2]=o;c[h+12>>2]=0;h=j+4|0;u=c[h>>2]|0;c[h>>2]=n;if((u|0)==0){w=n}else{n=u+12|0;q=c[n>>2]|0;c[n>>2]=0;if((q|0)!=0){n=q+28|0;dh(n|0);x=q+32|0;y=c[x>>2]|0;z=q+36|0;A=c[z>>2]|0;if((y|0)!=(A|0)){B=y;do{Nt(c[B>>2]|0);B=B+4|0}while((B|0)!=(A|0));A=c[x>>2]|0;x=c[z>>2]|0;if((x|0)!=(A|0)){c[z>>2]=x+(~((x-4-A|0)>>>2)<<2)}}A=c[n>>2]|0;if((A|0)!=0){Nt(A)}pe(q,56)}pe(u,16);w=c[h>>2]|0}c[k>>2]=b;c[k+4>>2]=w;c[k+8>>2]=d;d=Lt(56)|0;eh(d,g,k);k=w+12|0;w=c[k>>2]|0;c[k>>2]=d;if((w|0)!=0){d=w+28|0;dh(d|0);k=w+32|0;g=c[k>>2]|0;u=w+36|0;q=c[u>>2]|0;if((g|0)!=(q|0)){A=g;do{Nt(c[A>>2]|0);A=A+4|0}while((A|0)!=(q|0));q=c[k>>2]|0;k=c[u>>2]|0;if((k|0)!=(q|0)){c[u>>2]=k+(~((k-4-q|0)>>>2)<<2)}}q=c[d>>2]|0;if((q|0)!=0){Nt(q)}pe(w,56)}w=c[(c[h>>2]|0)+12>>2]|0;h=b+48|0;q=(ha(t,c[h>>2]|0)|0)+p|0;d=b+36|0;k=(c[d>>2]|0)+(q<<2)|0;if((c[k>>2]|0)!=0){Vc(c[r>>2]|0,1896,(v=i,i=i+24|0,c[v>>2]=1416,c[v+8>>2]=89,c[v+16>>2]=2096,v)|0)|0;i=v;Uc();return 0}c[k>>2]=w;c[l>>2]=e;c[l+4>>2]=o;if(fh(w+24|0,m)|0){s=w;i=f;return s|0}w=(ha(c[h>>2]|0,t)|0)+p|0;c[(c[d>>2]|0)+(w<<2)>>2]=0;w=j;d=c[b+24>>2]|0;p=j+8|0;t=p;h=b+28|0;b=c[h>>2]|0;m=d+(b<<3)|0;if((t|0)==(m|0)){C=w}else{o=t;t=w;while(1){gh(t,o)|0;o=o+8|0;if((o|0)==(m|0)){break}else{t=t+8|0}}C=j+(((d+(b-1<<3)-p|0)>>>3)+1<<3)|0}$g(C);c[h>>2]=(c[h>>2]|0)-1;s=0;i=f;return s|0}function Xf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;f=b+24|0;g=b+28|0;h=c[g>>2]|0;j=d|0;d=c[j>>2]|0;if((d|0)==((c[f>>2]|0)+(h<<3)|0)){Vc(c[r>>2]|0,1896,(k=i,i=i+24|0,c[k>>2]=1416,c[k+8>>2]=111,c[k+16>>2]=1472,k)|0)|0;i=k;Uc()}k=c[(c[(c[d+4>>2]|0)+12>>2]|0)+24>>2]|0;d=(ha(c[k+4>>2]|0,c[b+48>>2]|0)|0)+(c[k>>2]|0)|0;c[(c[b+36>>2]|0)+(d<<2)>>2]=0;d=c[j>>2]|0;j=d;b=c[f>>2]|0;f=d+8|0;k=f;l=b+(h<<3)|0;if((k|0)==(l|0)){m=j;$g(m);n=c[g>>2]|0;o=n-1|0;c[g>>2]=o;p=a|0;c[p>>2]=d;i=e;return}q=b+(h-1<<3)|0;h=k;k=j;while(1){gh(k,h)|0;h=h+8|0;if((h|0)==(l|0)){break}else{k=k+8|0}}m=d+(((q-f|0)>>>3)+1<<3)|0;$g(m);n=c[g>>2]|0;o=n-1|0;c[g>>2]=o;p=a|0;c[p>>2]=d;i=e;return}function Yf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;e=b;b=i;i=i+8|0;c[b>>2]=c[e>>2];c[b+4>>2]=c[e+4>>2];e=b;b=c[e>>2]|0;f=a+12|0;g=b;h=c[e+4>>2]|0;if(!((h|b|0)>-1&(g|0)<(c[f>>2]|0))){j=0;i=d;return j|0}b=h;if((b|0)>=(c[f+4>>2]|0)){j=0;i=d;return j|0}f=a+36|0;h=(ha(c[a+48>>2]|0,b)|0)+g|0;g=c[f>>2]|0;if(!((c[a+40>>2]|0)-g>>2>>>0>h>>>0)){Fp(f);return 0}j=c[g+(h<<2)>>2]|0;i=d;return j|0}function Zf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+56|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+60|0;if((c[(c[k>>2]|0)+16>>2]|0)>=1){Vc(c[r>>2]|0,1896,(l=i,i=i+24|0,c[l>>2]=1416,c[l+8>>2]=185,c[l+16>>2]=1080,l)|0)|0;i=l;Uc();return 0}if((a[d|0]|0)==0){m=0;i=e;return m|0}l=d+4|0;d=f|0;jh(f,l);n=a[d]|0;o=n<<24>>24!=0;p=((o?0:0)&1|(o?28:0)|0)==0;do{if(!p){o=(c[l>>2]|0)+16|0;if(!(n<<24>>24==0)){q=c[f+4>>2]|0;s=o|0;c[s>>2]=((q|0)>1?q:1)+(c[s>>2]|0);lh(o-16|0);break}Pc(3368,3312,631,4384);return 0}}while(0);if(!(n<<24>>24==0)){a[d]=0}if(p){m=1;i=e;return m|0}mh(c[k>>2]|0);p=c[k>>2]|0;if((c[p+16>>2]|0)<1){t=p}else{d=b+64|0;n=b+24|0;f=b+28|0;l=h|0;o=g|0;s=j+24|0;q=p;while(1){c[d>>2]=(c[d>>2]|0)+1;nh(q|0);if((c[f>>2]|0)!=0){p=c[n>>2]|0;while(1){u=c[(c[p+4>>2]|0)+12>>2]|0;if((c[u+20>>2]|0)==0){c[l>>2]=p;Xf(g,b,h);v=c[o>>2]|0;_f(j,b);me((c[s>>2]|0)+8|0,496)|0;oh(j);w=v}else{v=u|0;ph(v);if((c[u+16>>2]|0)<1){qh(v);rh(u);sh(v)}w=p+8|0}if((w|0)==((c[n>>2]|0)+(c[f>>2]<<3)|0)){break}else{p=w}}}p=c[k>>2]|0;if((c[p+16>>2]|0)<1){t=p;break}else{q=p}}}bh(t|0);m=2;i=e;return m|0}function _f(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+16|0;f=e|0;c[b+16>>2]=b;if((b|0)!=0){c[b>>2]=4656;c[b+4>>2]=d}d=Lt(144)|0;g=d;h=d+64|0;j=h;k=d;l=d+8|0;c[l>>2]=7296;m=d+12|0;c[k>>2]=20708;c[j>>2]=20728;c[d+4>>2]=0;el(h,m);c[d+136>>2]=0;c[d+140>>2]=-1;c[k>>2]=7276;c[j>>2]=7316;c[l>>2]=7296;l=f;j=m;c[j>>2]=7632;Lp(d+16|0);eu(d+20|0,0,24)|0;c[j>>2]=7488;eu(d+44|0,0,16)|0;c[d+60>>2]=24;eu(l|0,0,12)|0;th(m,f);if((a[l]&1)==0){n=12;o=0;p=b+24|0;c[p>>2]=g;i=e;return}Nt(c[f+8>>2]|0);n=12;o=0;p=b+24|0;c[p>>2]=g;i=e;return}function $f(b){b=b|0;var d=0;c[b>>2]=7276;c[b+64>>2]=7316;c[b+8>>2]=7296;d=b+12|0;c[d>>2]=7488;if(!((a[b+44|0]&1)==0)){Nt(c[b+52>>2]|0)}c[d>>2]=7632;Np(b+16|0);cl(b+64|0);return}function ag(b){b=b|0;var d=0;c[b>>2]=7276;c[b+64>>2]=7316;c[b+8>>2]=7296;d=b+12|0;c[d>>2]=7488;if(!((a[b+44|0]&1)==0)){Nt(c[b+52>>2]|0)}c[d>>2]=7632;Np(b+16|0);cl(b+64|0);pe(b,144);return}function bg(b){b=b|0;var d=0,e=0;d=b-144+136|0;c[d>>2]=7276;b=d+64|0;c[b>>2]=7316;c[d+8>>2]=7296;e=d+12|0;c[e>>2]=7488;if(!((a[d+44|0]&1)==0)){Nt(c[d+52>>2]|0)}c[e>>2]=7632;Np(d+16|0);cl(b);return}function cg(b){b=b|0;var d=0,e=0;d=b-144+136|0;c[d>>2]=7276;b=d+64|0;c[b>>2]=7316;c[d+8>>2]=7296;e=d+12|0;c[e>>2]=7488;if(!((a[d+44|0]&1)==0)){Nt(c[d+52>>2]|0)}c[e>>2]=7632;Np(d+16|0);cl(b);pe(d,144);return}function dg(b){b=b|0;var d=0,e=0,f=0;d=b;e=c[(c[b>>2]|0)-12>>2]|0;c[d+e>>2]=7276;b=d+(e+64)|0;c[b>>2]=7316;c[d+(e+8)>>2]=7296;f=d+(e+12)|0;c[f>>2]=7488;if(!((a[d+(e+44)|0]&1)==0)){Nt(c[d+(e+52)>>2]|0)}c[f>>2]=7632;Np(d+(e+16)|0);cl(b);return}function eg(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;e=c[(c[b>>2]|0)-12>>2]|0;b=d+e|0;c[b>>2]=7276;f=d+(e+64)|0;c[f>>2]=7316;c[d+(e+8)>>2]=7296;g=d+(e+12)|0;c[g>>2]=7488;if(!((a[d+(e+44)|0]&1)==0)){Nt(c[d+(e+52)>>2]|0)}c[g>>2]=7632;Np(d+(e+16)|0);cl(f);pe(b,144);return}function fg(b){b=b|0;var d=0;d=b|0;c[d>>2]=7488;if(!((a[b+32|0]&1)==0)){Nt(c[b+40>>2]|0)}c[d>>2]=7632;Np(b+4|0);return}function gg(b){b=b|0;var d=0;d=b|0;c[d>>2]=7488;if(!((a[b+32|0]&1)==0)){Nt(c[b+40>>2]|0)}c[d>>2]=7632;Np(b+4|0);pe(b,52);return}function hg(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;i=d+44|0;j=c[i>>2]|0;k=d+24|0;l=c[k>>2]|0;if(j>>>0<l>>>0){c[i>>2]=l;m=l}else{m=j}j=h&24;if((j|0)==0){i=b;c[i>>2]=0;c[i+4>>2]=0;i=b+8|0;c[i>>2]=-1;c[i+4>>2]=-1;return}if((j|0)==24&(g|0)==1){j=b;c[j>>2]=0;c[j+4>>2]=0;j=b+8|0;c[j>>2]=-1;c[j+4>>2]=-1;return}do{if((g|0)==0){n=0;o=0}else if((g|0)==2){j=d+32|0;if((a[j]&1)==0){p=j+1|0}else{p=c[d+40>>2]|0}j=m-p|0;n=(j|0)<0|0?-1:0;o=j}else if((g|0)==1){if((h&8|0)==0){j=l-(c[d+20>>2]|0)|0;n=(j|0)<0|0?-1:0;o=j;break}else{j=(c[d+12>>2]|0)-(c[d+8>>2]|0)|0;n=(j|0)<0|0?-1:0;o=j;break}}else{j=b;c[j>>2]=0;c[j+4>>2]=0;j=b+8|0;c[j>>2]=-1;c[j+4>>2]=-1;return}}while(0);g=ju(o,n,e,f)|0;f=L;e=0;if(!((f|0)<(e|0)|(f|0)==(e|0)&g>>>0<0>>>0)){e=d+32|0;if((a[e]&1)==0){q=e+1|0}else{q=c[d+40>>2]|0}e=m-q|0;q=(e|0)<0|0?-1:0;if(!((q|0)<(f|0)|(q|0)==(f|0)&e>>>0<g>>>0)){e=h&8;if(!((g|0)==0&(f|0)==0)){if((e|0)!=0?(c[d+12>>2]|0)==0:0){q=b;c[q>>2]=0;c[q+4>>2]=0;q=b+8|0;c[q>>2]=-1;c[q+4>>2]=-1;return}if((h&16|0)!=0&(l|0)==0){l=b;c[l>>2]=0;c[l+4>>2]=0;l=b+8|0;c[l>>2]=-1;c[l+4>>2]=-1;return}}if((e|0)!=0){c[d+12>>2]=(c[d+8>>2]|0)+g;c[d+16>>2]=m}if((h&16|0)!=0){c[k>>2]=(c[d+20>>2]|0)+g}d=b;c[d>>2]=0;c[d+4>>2]=0;d=b+8|0;c[d>>2]=g;c[d+4>>2]=f;return}}f=b;c[f>>2]=0;c[f+4>>2]=0;f=b+8|0;c[f>>2]=-1;c[f+4>>2]=-1;return}function ig(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;g=d;d=i;i=i+16|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];c[d+8>>2]=c[g+8>>2];c[d+12>>2]=c[g+12>>2];g=d+8|0;Ld[c[(c[b>>2]|0)+16>>2]&63](a,b,c[g>>2]|0,c[g+4>>2]|0,0,e);i=f;return}function jg(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,i=0;b=a+44|0;e=c[b>>2]|0;f=c[a+24>>2]|0;if(e>>>0<f>>>0){c[b>>2]=f;g=f}else{g=e}if((c[a+48>>2]&8|0)==0){h=-1;return h|0}e=a+16|0;f=c[e>>2]|0;b=c[a+12>>2]|0;if(f>>>0<g>>>0){c[e>>2]=g;i=g}else{i=f}if(!(b>>>0<i>>>0)){h=-1;return h|0}h=d[b]|0;return h|0}function kg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=b+44|0;f=c[e>>2]|0;g=c[b+24>>2]|0;if(f>>>0<g>>>0){c[e>>2]=g;h=g}else{h=f}f=b+8|0;g=c[f>>2]|0;e=b+12|0;i=c[e>>2]|0;if(!(g>>>0<i>>>0)){j=-1;return j|0}if((d|0)==-1){c[f>>2]=g;c[e>>2]=i-1;c[b+16>>2]=h;j=0;return j|0}if((c[b+48>>2]&16|0)==0){k=d&255;l=i-1|0;if(k<<24>>24==(a[l]|0)){m=l;n=k}else{j=-1;return j|0}}else{m=i-1|0;n=d&255}c[f>>2]=g;c[e>>2]=m;c[b+16>>2]=h;a[m]=n;j=d;return j|0}function lg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;if((d|0)==-1){e=0;return e|0}f=b|0;g=b+12|0;h=b+8|0;i=(c[g>>2]|0)-(c[h>>2]|0)|0;j=b+24|0;k=c[j>>2]|0;l=b+28|0;m=c[l>>2]|0;if((k|0)==(m|0)){n=b+48|0;if((c[n>>2]&16|0)==0){e=-1;return e|0}o=b+20|0;p=c[o>>2]|0;q=k-p|0;r=b+44|0;s=(c[r>>2]|0)-p|0;p=b+32|0;Pk(p,0);t=p;u=a[t]|0;if((u&1)==0){v=10;w=u}else{u=c[p>>2]|0;v=(u&-2)-1|0;w=u&255}u=(w&1)==0;if(u){x=(w&255)>>>1}else{x=c[b+36>>2]|0}do{if(!(v>>>0>x>>>0)){if(u){a[p+1+v|0]=0;a[t]=v<<1;break}else{a[(c[b+40>>2]|0)+v|0]=0;c[b+36>>2]=v;break}}else{Mk(p,v-x|0,0)|0}}while(0);x=a[t]|0;if((x&1)==0){y=(x&255)>>>1;z=p+1|0}else{y=c[b+36>>2]|0;z=c[b+40>>2]|0}p=z+y|0;c[o>>2]=z;c[l>>2]=p;l=z+q|0;c[j>>2]=l;q=z+s|0;c[r>>2]=q;A=l;B=q;C=p;D=n}else{A=k;B=c[b+44>>2]|0;C=m;D=b+48|0}m=A+1|0;k=m>>>0<B>>>0?B:m;c[b+44>>2]=k;if((c[D>>2]&8|0)!=0){D=b+32|0;if((a[D]&1)==0){E=D+1|0}else{E=c[b+40>>2]|0}c[h>>2]=E;c[g>>2]=E+i;c[b+16>>2]=k}if((A|0)==(C|0)){e=Bd[c[(c[b>>2]|0)+52>>2]&127](f,d&255)|0;return e|0}else{c[j>>2]=m;a[A]=d;e=d&255;return e|0}return 0}function mg(a){a=a|0;return}function ng(a){a=a|0;pe(a,8);return}function og(a){a=a|0;var b=0,d=0;b=Lt(8)|0;if((b|0)==0){d=b;return d|0}c[b>>2]=4656;c[b+4>>2]=c[a+4>>2];d=b;return d|0}function pg(a,b){a=a|0;b=b|0;if((b|0)==0){return}c[b>>2]=4656;c[b+4>>2]=c[a+4>>2];return}function qg(a){a=a|0;return}function rg(a){a=a|0;Nt(a);return}function sg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+40|0;f=e|0;g=e+24|0;h=g;j=d;if((a[j]&1)==0){c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2]}else{j=c[d+8>>2]|0;k=c[d+4>>2]|0;if(k>>>0>4294967279>>>0){Dk(g)}if(k>>>0<11>>>0){a[h]=k<<1;l=g+1|0}else{d=k+16&-16;m=Lt(d)|0;c[g+8>>2]=m;c[g>>2]=d|1;c[g+4>>2]=k;l=m}du(l|0,j|0,k)|0;a[l+k|0]=0}k=c[b+4>>2]|0;c[f>>2]=c[k+64>>2];b=f+4|0;c[b>>2]=c[h>>2];c[b+4>>2]=c[h+4>>2];c[b+8>>2]=c[h+8>>2];eu(h|0,0,12)|0;c[f+16>>2]=0;Wi(k+68|0,f);if((a[b]&1)==0){n=20;o=0;p=12;q=0;i=e;return}Nt(c[f+12>>2]|0);n=20;o=0;p=12;q=0;i=e;return}function tg(a,b){a=a|0;b=b|0;var d=0;if((c[b+4>>2]|0)!=4792){d=0;return d|0}d=a+4|0;return d|0}function ug(a){a=a|0;return 5192}function vg(a){a=a|0;return}function wg(a){a=a|0;return}function xg(a){a=a|0;return}function yg(a){a=a|0;return}function zg(a){a=a|0;var b=0;b=(c[a+4>>2]|0)+16|0;a=b|0;c[a>>2]=(c[a>>2]|0)-1;uh(b-16|0);return}function Ag(a){a=a|0;return}function Bg(a){a=a|0;var b=0;b=(c[a+4>>2]|0)+16|0;a=b|0;c[a>>2]=(c[a>>2]|0)-1;lh(b-16|0);return}function Cg(a){a=a|0;return}function Dg(a){a=a|0;pe(a,8);return}function Eg(a){a=a|0;var b=0,d=0;b=Lt(8)|0;if((b|0)==0){d=b;return d|0}c[b>>2]=8648;c[b+4>>2]=c[a+4>>2];d=b;return d|0}function Fg(a,b){a=a|0;b=b|0;if((b|0)==0){return}c[b>>2]=8648;c[b+4>>2]=c[a+4>>2];return}function Gg(a){a=a|0;return}function Hg(a){a=a|0;Nt(a);return}function Ig(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=c[b+4>>2]|0;b=a[d]|0;if((b&1)==0){f=(b&255)>>>1;g=d+1|0}else{f=c[d+4>>2]|0;g=c[d+8>>2]|0}d=e;b=a[d]|0;if((b&1)==0){h=10;i=b}else{b=c[e>>2]|0;h=(b&-2)-1|0;i=b&255}b=(i&1)==0;if(b){j=(i&255)>>>1}else{j=c[e+4>>2]|0}if((h-j|0)>>>0<f>>>0){Qk(e,h,f-h+j|0,j,j,0,f,g);return}if((f|0)==0){return}if(b){k=e+1|0}else{k=c[e+8>>2]|0}du(k+j|0,g|0,f)|0;g=j+f|0;if((a[d]&1)==0){a[d]=g<<1}else{c[e+4>>2]=g}a[k+g|0]=0;return}function Jg(a,b){a=a|0;b=b|0;var d=0;if((c[b+4>>2]|0)!=9544){d=0;return d|0}d=a+4|0;return d|0}function Kg(a){a=a|0;return 18440}function Lg(a){a=a|0;return}function Mg(a){a=a|0;pe(a,8);return}function Ng(a){a=a|0;var b=0,d=0;b=Lt(8)|0;if((b|0)==0){d=b;return d|0}c[b>>2]=8592;c[b+4>>2]=c[a+4>>2];d=b;return d|0}function Og(a,b){a=a|0;b=b|0;if((b|0)==0){return}c[b>>2]=8592;c[b+4>>2]=c[a+4>>2];return}function Pg(a){a=a|0;return}function Qg(a){a=a|0;Nt(a);return}function Rg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=c[b+4>>2]|0;if((e|0)==(d|0)){return}b=a[d]|0;if((b&1)==0){f=(b&255)>>>1;g=d+1|0}else{f=c[d+4>>2]|0;g=c[d+8>>2]|0}Kk(e,g,f)|0;return}function Sg(a,b){a=a|0;b=b|0;var d=0;if((c[b+4>>2]|0)!=9440){d=0;return d|0}d=a+4|0;return d|0}function Tg(a){a=a|0;return 18432}function Ug(a){a=a|0;return}function Vg(a){a=a|0;vh((c[a+4>>2]|0)+4672|0);return}function Wg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;i=i+8|0;d=b|0;e=(c[a+4>>2]|0)+24|0;a=e-4648+4624|0;f=c[e-4648+9336>>2]|0;g=c[f+4>>2]|0;c[d>>2]=c[f>>2];c[d+4>>2]=g;ui(e|0,d,c[a>>2]|0);wh(a);i=b;return}function Xg(a){a=a|0;xh(c[a+4>>2]|0,a+8|0);return}function Yg(a){a=a|0;yh((c[a+4>>2]|0)+4672|0);return}function Zg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=a|0;c[d>>2]=0;e=a+4|0;c[e>>2]=0;f=a+8|0;c[f>>2]=0;g=b+4|0;h=b|0;b=(c[g>>2]|0)-(c[h>>2]|0)|0;i=b>>2;if((i|0)==0){return}if(i>>>0>1073741823>>>0){Ep(a)}a=Lt(b)|0;c[e>>2]=a;c[d>>2]=a;c[f>>2]=a+(i<<2);i=c[h>>2]|0;h=c[g>>2]|0;if((i|0)==(h|0)){return}g=(h-4-i|0)>>>2;f=i;i=a;while(1){if((i|0)!=0){c[i>>2]=c[f>>2]}f=f+4|0;if((f|0)==(h|0)){break}else{i=i+4|0}}c[e>>2]=a+(g+1<<2);return}function _g(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=a+4716|0;zh(b|0);d=a+4720|0;e=c[d>>2]|0;f=a+4724|0;g=c[f>>2]|0;if((e|0)!=(g|0)){h=e;do{Nt(c[h>>2]|0);h=h+4|0}while((h|0)!=(g|0));g=c[d>>2]|0;d=c[f>>2]|0;if((d|0)!=(g|0)){c[f>>2]=d+(~((d-4-g|0)>>>2)<<2)}}g=c[b>>2]|0;if((g|0)!=0){Nt(g)}g=c[a+4700>>2]|0;if((g|0)!=0){b=g;do{g=b;b=c[b>>2]|0;Nt(g)}while((b|0)!=0)}b=a+4692|0;g=c[b>>2]|0;c[b>>2]=0;if((g|0)!=0){Nt(g)}g=c[a+4672>>2]|0;if((g|0)==0){return}b=a+4676|0;a=c[b>>2]|0;if((a|0)!=(g|0)){c[b>>2]=a+(~((a-4-g|0)>>>2)<<2)}Nt(g);return}function $g(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;b=a+4|0;a=c[b>>2]|0;c[b>>2]=0;if((a|0)==0){return}b=a+12|0;d=c[b>>2]|0;c[b>>2]=0;if((d|0)!=0){b=d+28|0;dh(b|0);e=d+32|0;f=c[e>>2]|0;g=d+36|0;h=c[g>>2]|0;if((f|0)!=(h|0)){i=f;do{Nt(c[i>>2]|0);i=i+4|0}while((i|0)!=(h|0));h=c[e>>2]|0;e=c[g>>2]|0;if((e|0)!=(h|0)){c[g>>2]=e+(~((e-4-h|0)>>>2)<<2)}}h=c[b>>2]|0;if((h|0)!=0){Nt(h)}pe(d,56)}pe(a,16);return}function ah(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+16|0;g=d;d=i;i=i+1|0;i=i+7&-8;a[d]=a[g]|0;g=f|0;d=f+8|0;h=e|0;c[b>>2]=c[h>>2];j=e+4|0;c[b+4>>2]=c[j>>2];c[b+8>>2]=1;c[b+12>>2]=c[e+8>>2];c[b+16>>2]=0;k=b+20|0;l=k|0;c[l>>2]=0;m=c[j>>2]|0;n=c[m+4>>2]|0;c[g>>2]=c[m>>2];c[g+4>>2]=n;ti(b+24|0,g,c[h>>2]|0);Ah(b+4672|0,e);e=b+4712|0;h=e|0;c[h>>2]=c[j>>2];eu(b+4716|0,0,25)|0;b=(c[l>>2]|0)+97|0;j=(b|0)>97?97:b;c[l>>2]=(j|0)<0?0:j;Bh(k-20|0,-97,-97);k=c[h>>2]|0;h=c[k+4>>2]|0;c[d>>2]=c[k>>2];c[d+4>>2]=h;Ch(e-4712|0,d);i=f;return}function bh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=b+4740|0;if((a[d]|0)!=0){e=Lt(12)|0;c[e>>2]=9128;c[e+4>>2]=b;f=b+4724|0;g=c[f>>2]|0;h=b+4720|0;i=c[h>>2]|0;if((g|0)==(i|0)){j=0}else{j=(g-i<<8)-1|0}k=b+4732|0;l=c[k>>2]|0;m=b+4736|0;n=c[m>>2]|0;if((j-l|0)==(n|0)){Dh(b+4716|0);o=c[m>>2]|0;p=c[k>>2]|0;q=c[h>>2]|0;r=c[f>>2]|0}else{o=n;p=l;q=i;r=g}g=o+p|0;if((r|0)!=(q|0)?(r=(c[q+(g>>>10<<2)>>2]|0)+((g&1023)<<2)|0,(r|0)!=0):0){c[r>>2]=e}c[m>>2]=o+1;return}a[d]=1;yh(b+4672|0);o=b+4736|0;if((c[o>>2]|0)!=0){m=b+4720|0;e=b+4732|0;b=c[e>>2]|0;while(1){r=c[(c[(c[m>>2]|0)+(b>>>10<<2)>>2]|0)+((b&1023)<<2)>>2]|0;zd[c[c[r>>2]>>2]&511](r);r=c[e>>2]|0;g=(c[(c[m>>2]|0)+(r>>>10<<2)>>2]|0)+((r&1023)<<2)|0;q=c[g>>2]|0;c[g>>2]=0;if((q|0)==0){s=r}else{pe(q,4);s=c[e>>2]|0}q=(c[o>>2]|0)-1|0;c[o>>2]=q;r=s+1|0;c[e>>2]=r;if(r>>>0>2047>>>0){Nt(c[c[m>>2]>>2]|0);c[m>>2]=(c[m>>2]|0)+4;g=(c[e>>2]|0)-1024|0;c[e>>2]=g;t=g;u=c[o>>2]|0}else{t=r;u=q}if((u|0)==0){break}else{b=t}}}a[d]=0;return}function ch(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;f=i;i=i+56|0;g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;l=f+32|0;m=f+40|0;n=f+48|0;o=c[e>>2]|0;e=n|0;c[e>>2]=o;c[n+4>>2]=0;p=b|0;c[p>>2]=0;q=b+4|0;b=c[d>>2]|0;r=c[d+4>>2]|0;s=b+(r<<3)|0;t=r<<3>>3;a:do{if((t|0)==0){u=b}else{r=g|0;v=h|0;w=t;x=b;y=o;while(1){z=w>>>1;c[r>>2]=c[x+(z<<3)>>2];c[v>>2]=y;if(Ai(g,h)|0){A=w-1-z|0;B=x+(z+1<<3)|0}else{A=z;B=x}if((A|0)==0){u=B;break a}w=A;x=B;y=c[e>>2]|0}}}while(0);if((u|0)!=(s|0)){c[j>>2]=c[e>>2];c[k>>2]=c[u>>2];e=Ai(j,k)|0;a[q]=e&1;if(!e){c[m>>2]=u;C=u;D=C;c[p>>2]=D;E=4;F=0;$g(n);i=f;return}}else{a[q]=1}c[l>>2]=u;Eh(m,d|0,l,n);C=c[m>>2]|0;D=C;c[p>>2]=D;E=4;F=0;$g(n);i=f;return}function dh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;b=a+4|0;d=c[b>>2]|0;e=a+16|0;f=c[e>>2]|0;g=d+(f>>>10<<2)|0;h=a+8|0;if((c[h>>2]|0)==(d|0)){i=0;j=0;k=a+20|0}else{l=a+20|0;a=f+(c[l>>2]|0)|0;i=(c[d+(a>>>10<<2)>>2]|0)+((a&1023)<<2)|0;j=(c[g>>2]|0)+((f&1023)<<2)|0;k=l}l=g;g=j;a:while(1){j=g;do{if((j|0)==(i|0)){break a}f=j|0;a=c[f>>2]|0;c[f>>2]=0;if((a|0)!=0){pe(a,4)}j=j+4|0}while((j-(c[l>>2]|0)|0)!=4096);j=l+4|0;l=j;g=c[j>>2]|0}c[k>>2]=0;k=c[b>>2]|0;g=(c[h>>2]|0)-k>>2;if(g>>>0>2>>>0){l=k;while(1){Nt(c[l>>2]|0);k=(c[b>>2]|0)+4|0;c[b>>2]=k;i=(c[h>>2]|0)-k>>2;if(i>>>0>2>>>0){l=k}else{m=i;break}}}else{m=g}if((m|0)==1){c[e>>2]=512;return}else if((m|0)==2){c[e>>2]=1024;return}else{return}}function eh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+8|0;g=d;d=i;i=i+1|0;i=i+7&-8;a[d]=a[g]|0;g=f|0;c[b>>2]=c[e>>2];d=e+4|0;c[b+4>>2]=c[d>>2];c[b+8>>2]=c[c[d>>2]>>2];c[b+12>>2]=Tf(c[e+8>>2]|0)|0;c[b+16>>2]=0;e=b+20|0;h=e|0;c[h>>2]=0;j=b+24|0;k=j|0;c[k>>2]=(c[d>>2]|0)+4;eu(b+28|0,0,25)|0;c[h>>2]=97;Fh(e-20|0,-97,-97);e=c[k>>2]|0;k=c[e+4>>2]|0;c[g>>2]=c[e>>2];c[g+4>>2]=k;Gh(j-24|0,g);i=f;return}function fh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+16|0;e=b;b=i;i=i+8|0;c[b>>2]=c[e>>2];c[b+4>>2]=c[e+4>>2];e=d|0;f=b;b=c[f>>2]|0;g=a-24|0;h=c[g>>2]|0;j=h+12|0;k=b;l=c[f+4>>2]|0;f=c[j>>2]|0;if(!((l|b|0)>-1&(k|0)<(f|0))){m=0;i=d;return m|0}b=l;if((b|0)>=(c[j+4>>2]|0)){m=0;i=d;return m|0}j=(ha(f,b)|0)+k|0;$i(e,c[(c[h>>2]|0)+(j<<2)>>2]|0);if((c[e+12>>2]&1|0)!=0){m=0;i=d;return m|0}e=c[a>>2]|0;if((k|0)==(c[e>>2]|0)&(b|0)==(c[e+4>>2]|0)){m=1;i=d;return m|0}e=c[g>>2]|0;g=c[e+60>>2]|0;if((g|0)!=0?(a=c[g+4712>>2]|0,(k|0)==(c[a>>2]|0)&(b|0)==(c[a+4>>2]|0)):0){m=0;i=d;return m|0}a=e+12|0;if((k|0)>=(c[a>>2]|0)){m=1;i=d;return m|0}if((b|0)>=(c[a+4>>2]|0)){m=1;i=d;return m|0}a=e+36|0;g=(ha(c[e+48>>2]|0,b)|0)+k|0;k=c[a>>2]|0;if(!((c[e+40>>2]|0)-k>>2>>>0>g>>>0)){Fp(a);return 0}m=(c[k+(g<<2)>>2]|0)==0;i=d;return m|0}function gh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;c[a>>2]=c[b>>2];d=b+4|0;b=c[d>>2]|0;c[d>>2]=0;d=a+4|0;e=c[d>>2]|0;c[d>>2]=b;if((e|0)==0){return a|0}b=e+12|0;d=c[b>>2]|0;c[b>>2]=0;if((d|0)!=0){b=d+28|0;dh(b|0);f=d+32|0;g=c[f>>2]|0;h=d+36|0;i=c[h>>2]|0;if((g|0)!=(i|0)){j=g;do{Nt(c[j>>2]|0);j=j+4|0}while((j|0)!=(i|0));i=c[f>>2]|0;f=c[h>>2]|0;if((f|0)!=(i|0)){c[h>>2]=f+(~((f-4-i|0)>>>2)<<2)}}i=c[b>>2]|0;if((i|0)!=0){Nt(i)}pe(d,56)}pe(e,16);return a|0}function hh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;f=d;d=i;i=i+8|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];f=b+4712|0;g=c[f>>2]|0;h=d;d=c[h>>2]|0;j=c[h+4>>2]|0;h=d;k=j;l=k;if((c[g>>2]|0)==(h|0)&(c[g+4>>2]|0)==(l|0)){m=1;i=e;return m|0}g=c[a+60>>2]|0;if((g|0)!=0?(n=c[g+4712>>2]|0,(h|0)==(c[n>>2]|0)&(l|0)==(c[n+4>>2]|0)):0){m=0;i=e;return m|0}n=a+12|0;if((k|d|0)>-1&(h|0)<(c[n>>2]|0)?(l|0)<(c[n+4>>2]|0):0){n=a+36|0;k=(ha(c[a+48>>2]|0,l)|0)+h|0;g=c[n>>2]|0;if(!((c[a+40>>2]|0)-g>>2>>>0>k>>>0)){Fp(n);return 0}if((c[g+(k<<2)>>2]|0)!=0){m=0;i=e;return m|0}}k=c[b+4>>2]|0;c[k>>2]=d;c[k+4>>2]=j;j=c[f>>2]|0;if((c[j>>2]|0)==(h|0)&(c[j+4>>2]|0)==(l|0)){m=1;i=e;return m|0}else{Vc(c[r>>2]|0,1896,(m=i,i=i+24|0,c[m>>2]=1416,c[m+8>>2]=177,c[m+16>>2]=2264,m)|0)|0;i=m;Uc();return 0}return 0}function ih(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;f=d;d=i;i=i+8|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];f=b+24|0;g=c[f>>2]|0;h=d;d=c[h>>2]|0;j=c[h+4>>2]|0;h=d;k=j;l=k;if((c[g>>2]|0)==(h|0)&(c[g+4>>2]|0)==(l|0)){m=1;i=e;return m|0}g=c[a+60>>2]|0;if((g|0)!=0?(n=c[g+4712>>2]|0,(h|0)==(c[n>>2]|0)&(l|0)==(c[n+4>>2]|0)):0){m=0;i=e;return m|0}n=a+12|0;if((k|d|0)>-1&(h|0)<(c[n>>2]|0)?(l|0)<(c[n+4>>2]|0):0){n=a+36|0;k=(ha(c[a+48>>2]|0,l)|0)+h|0;g=c[n>>2]|0;if(!((c[a+40>>2]|0)-g>>2>>>0>k>>>0)){Fp(n);return 0}if((c[g+(k<<2)>>2]|0)!=0){m=0;i=e;return m|0}}k=(c[b+4>>2]|0)+4|0;c[k>>2]=d;c[k+4>>2]=j;j=c[f>>2]|0;if((c[j>>2]|0)==(h|0)&(c[j+4>>2]|0)==(l|0)){m=1;i=e;return m|0}else{Vc(c[r>>2]|0,1896,(m=i,i=i+24|0,c[m>>2]=1416,c[m+8>>2]=177,c[m+16>>2]=2264,m)|0)|0;i=m;Uc();return 0}return 0}function jh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+40|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=c[d+4>>2]|0;if((l|0)==1){m=d+8|0;n=c[m>>2]|0;o=c[m+4>>2]|0;m=(c[d>>2]|0)+4712|0;c[h>>2]=n;c[h+4>>2]=o;if(!(Hh(m,h)|0)){a[b|0]=0;i=e;return}h=c[m>>2]|0;p=c[h>>2]|0;q=c[h+4>>2]|0;h=m-4712|0;m=c[h>>2]|0;c[f>>2]=n;c[f+4>>2]=o;if(!(hh(m,h,f)|0)){Vc(c[r>>2]|0,1896,(f=i,i=i+24|0,c[f>>2]=120,c[f+8>>2]=25,c[f+16>>2]=4e3,f)|0)|0;i=f;Uc()}c[g>>2]=p;c[g+4>>2]=q;Ch(h,g);c[b+4>>2]=10;a[b|0]=1;i=e;return}else if((l|0)==2){l=c[d>>2]|0;g=c[l>>2]|0;c[j>>2]=c[d+8>>2];c[k>>2]=l;Ih(g,j,k);c[b+4>>2]=c[21956+((c[l+8>>2]|0)*44|0)>>2];a[b|0]=1;i=e;return}else{c[b+4>>2]=10;a[b|0]=1;i=e;return}}function kh(b){b=b|0;return(a[b|0]|0)!=0|0}function lh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=b+4740|0;if((a[d]|0)!=0){e=Lt(12)|0;c[e>>2]=9056;c[e+4>>2]=b;f=b+4724|0;g=c[f>>2]|0;h=b+4720|0;i=c[h>>2]|0;if((g|0)==(i|0)){j=0}else{j=(g-i<<8)-1|0}k=b+4732|0;l=c[k>>2]|0;m=b+4736|0;n=c[m>>2]|0;if((j-l|0)==(n|0)){Dh(b+4716|0);o=c[m>>2]|0;p=c[k>>2]|0;q=c[h>>2]|0;r=c[f>>2]|0}else{o=n;p=l;q=i;r=g}g=o+p|0;if((r|0)!=(q|0)?(r=(c[q+(g>>>10<<2)>>2]|0)+((g&1023)<<2)|0,(r|0)!=0):0){c[r>>2]=e}c[m>>2]=o+1;return}a[d]=1;o=b+4736|0;if((c[o>>2]|0)!=0){m=b+4720|0;e=b+4732|0;b=c[e>>2]|0;while(1){r=c[(c[(c[m>>2]|0)+(b>>>10<<2)>>2]|0)+((b&1023)<<2)>>2]|0;zd[c[c[r>>2]>>2]&511](r);r=c[e>>2]|0;g=(c[(c[m>>2]|0)+(r>>>10<<2)>>2]|0)+((r&1023)<<2)|0;q=c[g>>2]|0;c[g>>2]=0;if((q|0)==0){s=r}else{pe(q,4);s=c[e>>2]|0}q=(c[o>>2]|0)-1|0;c[o>>2]=q;r=s+1|0;c[e>>2]=r;if(r>>>0>2047>>>0){Nt(c[c[m>>2]>>2]|0);c[m>>2]=(c[m>>2]|0)+4;g=(c[e>>2]|0)-1024|0;c[e>>2]=g;t=g;u=c[o>>2]|0}else{t=r;u=q}if((u|0)==0){break}else{b=t}}}a[d]=0;return}function mh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=b+4740|0;if((a[d]|0)!=0){e=Lt(12)|0;c[e>>2]=9104;c[e+4>>2]=b;f=b+4724|0;g=c[f>>2]|0;h=b+4720|0;i=c[h>>2]|0;if((g|0)==(i|0)){j=0}else{j=(g-i<<8)-1|0}k=b+4732|0;l=c[k>>2]|0;m=b+4736|0;n=c[m>>2]|0;if((j-l|0)==(n|0)){Dh(b+4716|0);o=c[m>>2]|0;p=c[k>>2]|0;q=c[h>>2]|0;r=c[f>>2]|0}else{o=n;p=l;q=i;r=g}g=o+p|0;if((r|0)!=(q|0)?(r=(c[q+(g>>>10<<2)>>2]|0)+((g&1023)<<2)|0,(r|0)!=0):0){c[r>>2]=e}c[m>>2]=o+1;return}a[d]=1;o=b+4736|0;if((c[o>>2]|0)!=0){m=b+4720|0;e=b+4732|0;b=c[e>>2]|0;while(1){r=c[(c[(c[m>>2]|0)+(b>>>10<<2)>>2]|0)+((b&1023)<<2)>>2]|0;zd[c[c[r>>2]>>2]&511](r);r=c[e>>2]|0;g=(c[(c[m>>2]|0)+(r>>>10<<2)>>2]|0)+((r&1023)<<2)|0;q=c[g>>2]|0;c[g>>2]=0;if((q|0)==0){s=r}else{pe(q,4);s=c[e>>2]|0}q=(c[o>>2]|0)-1|0;c[o>>2]=q;r=s+1|0;c[e>>2]=r;if(r>>>0>2047>>>0){Nt(c[c[m>>2]>>2]|0);c[m>>2]=(c[m>>2]|0)+4;g=(c[e>>2]|0)-1024|0;c[e>>2]=g;t=g;u=c[o>>2]|0}else{t=r;u=q}if((u|0)==0){break}else{b=t}}}a[d]=0;return}function nh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=b+4740|0;if((a[d]|0)!=0){e=Lt(12)|0;c[e>>2]=9080;c[e+4>>2]=b;f=b+4724|0;g=c[f>>2]|0;h=b+4720|0;i=c[h>>2]|0;if((g|0)==(i|0)){j=0}else{j=(g-i<<8)-1|0}k=b+4732|0;l=c[k>>2]|0;m=b+4736|0;n=c[m>>2]|0;if((j-l|0)==(n|0)){Dh(b+4716|0);o=c[m>>2]|0;p=c[k>>2]|0;q=c[h>>2]|0;r=c[f>>2]|0}else{o=n;p=l;q=i;r=g}g=o+p|0;if((r|0)!=(q|0)?(r=(c[q+(g>>>10<<2)>>2]|0)+((g&1023)<<2)|0,(r|0)!=0):0){c[r>>2]=e}c[m>>2]=o+1;return}a[d]=1;o=b+16|0;m=o|0;c[m>>2]=(c[m>>2]|0)-1;lh(o-16|0);o=b+4736|0;if((c[o>>2]|0)!=0){m=b+4720|0;e=b+4732|0;b=c[e>>2]|0;while(1){r=c[(c[(c[m>>2]|0)+(b>>>10<<2)>>2]|0)+((b&1023)<<2)>>2]|0;zd[c[c[r>>2]>>2]&511](r);r=c[e>>2]|0;g=(c[(c[m>>2]|0)+(r>>>10<<2)>>2]|0)+((r&1023)<<2)|0;q=c[g>>2]|0;c[g>>2]=0;if((q|0)==0){s=r}else{pe(q,4);s=c[e>>2]|0}q=(c[o>>2]|0)-1|0;c[o>>2]=q;r=s+1|0;c[e>>2]=r;if(r>>>0>2047>>>0){Nt(c[c[m>>2]>>2]|0);c[m>>2]=(c[m>>2]|0)+4;g=(c[e>>2]|0)-1024|0;c[e>>2]=g;t=g;u=c[o>>2]|0}else{t=r;u=q}if((u|0)==0){break}else{b=t}}}a[d]=0;return}function oh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d|0;f=b+24|0;Jh(e,(c[f>>2]|0)+12|0);g=b+16|0;h=c[g>>2]|0;if((h|0)==0){j=dd(4)|0;c[j>>2]=7344;ac(j|0,19560,246)}Ad[c[(c[h>>2]|0)+24>>2]&127](h,e);if(!((a[e]&1)==0)){Nt(c[e+8>>2]|0)}e=c[f>>2]|0;c[f>>2]=0;if((e|0)!=0){zd[c[(c[e>>2]|0)+4>>2]&511](e)}e=c[g>>2]|0;if((e|0)==(b|0)){zd[c[(c[e>>2]|0)+16>>2]&511](e);i=d;return}if((e|0)==0){i=d;return}zd[c[(c[e>>2]|0)+20>>2]&511](e);i=d;return}function ph(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=b+52|0;if((a[d]|0)!=0){e=Lt(12)|0;c[e>>2]=8888;c[e+4>>2]=b;f=b+36|0;g=c[f>>2]|0;h=b+32|0;i=c[h>>2]|0;if((g|0)==(i|0)){j=0}else{j=(g-i<<8)-1|0}k=b+44|0;l=c[k>>2]|0;m=b+48|0;n=c[m>>2]|0;if((j-l|0)==(n|0)){Kh(b+28|0);o=c[m>>2]|0;p=c[k>>2]|0;q=c[h>>2]|0;r=c[f>>2]|0}else{o=n;p=l;q=i;r=g}g=o+p|0;if((r|0)!=(q|0)?(r=(c[q+(g>>>10<<2)>>2]|0)+((g&1023)<<2)|0,(r|0)!=0):0){c[r>>2]=e}c[m>>2]=o+1;return}a[d]=1;o=b+16|0;m=o|0;c[m>>2]=(c[m>>2]|0)-1;uh(o-16|0);o=b+48|0;if((c[o>>2]|0)!=0){m=b+32|0;e=b+44|0;b=c[e>>2]|0;while(1){r=c[(c[(c[m>>2]|0)+(b>>>10<<2)>>2]|0)+((b&1023)<<2)>>2]|0;zd[c[c[r>>2]>>2]&511](r);r=c[e>>2]|0;g=(c[(c[m>>2]|0)+(r>>>10<<2)>>2]|0)+((r&1023)<<2)|0;q=c[g>>2]|0;c[g>>2]=0;if((q|0)==0){s=r}else{pe(q,4);s=c[e>>2]|0}q=(c[o>>2]|0)-1|0;c[o>>2]=q;r=s+1|0;c[e>>2]=r;if(r>>>0>2047>>>0){Nt(c[c[m>>2]>>2]|0);c[m>>2]=(c[m>>2]|0)+4;g=(c[e>>2]|0)-1024|0;c[e>>2]=g;t=g;u=c[o>>2]|0}else{t=r;u=q}if((u|0)==0){break}else{b=t}}}a[d]=0;return}function qh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=b+52|0;if((a[d]|0)!=0){e=Lt(12)|0;c[e>>2]=8936;c[e+4>>2]=b;f=b+36|0;g=c[f>>2]|0;h=b+32|0;i=c[h>>2]|0;if((g|0)==(i|0)){j=0}else{j=(g-i<<8)-1|0}k=b+44|0;l=c[k>>2]|0;m=b+48|0;n=c[m>>2]|0;if((j-l|0)==(n|0)){Kh(b+28|0);o=c[m>>2]|0;p=c[k>>2]|0;q=c[h>>2]|0;r=c[f>>2]|0}else{o=n;p=l;q=i;r=g}g=o+p|0;if((r|0)!=(q|0)?(r=(c[q+(g>>>10<<2)>>2]|0)+((g&1023)<<2)|0,(r|0)!=0):0){c[r>>2]=e}c[m>>2]=o+1;return}a[d]=1;o=b+48|0;if((c[o>>2]|0)!=0){m=b+32|0;e=b+44|0;b=c[e>>2]|0;while(1){r=c[(c[(c[m>>2]|0)+(b>>>10<<2)>>2]|0)+((b&1023)<<2)>>2]|0;zd[c[c[r>>2]>>2]&511](r);r=c[e>>2]|0;g=(c[(c[m>>2]|0)+(r>>>10<<2)>>2]|0)+((r&1023)<<2)|0;q=c[g>>2]|0;c[g>>2]=0;if((q|0)==0){s=r}else{pe(q,4);s=c[e>>2]|0}q=(c[o>>2]|0)-1|0;c[o>>2]=q;r=s+1|0;c[e>>2]=r;if(r>>>0>2047>>>0){Nt(c[c[m>>2]>>2]|0);c[m>>2]=(c[m>>2]|0)+4;g=(c[e>>2]|0)-1024|0;c[e>>2]=g;t=g;u=c[o>>2]|0}else{t=r;u=q}if((u|0)==0){break}else{b=t}}}a[d]=0;return}function rh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;i=i+40|0;e=d|0;f=d+16|0;g=d+32|0;h=i;i=i+8|0;j=i;i=i+8|0;k=i;i=i+4|0;i=i+7&-8;l=i;i=i+8|0;m=l;n=b+24|0;o=n;p=n;n=c[p>>2]|0;q=c[n+4>>2]|0;c[g>>2]=c[n>>2];c[g+4>>2]=q;Xe(f,g,16);g=c[p>>2]|0;p=c[g+4>>2]|0;c[h>>2]=c[g>>2];c[h+4>>2]=p;p=c[(c[(c[b>>2]|0)+60>>2]|0)+4712>>2]|0;g=c[p+4>>2]|0;c[j>>2]=c[p>>2];c[j+4>>2]=g;c[k>>2]=b;Lh(e,f,h,j,k);if((a[e|0]|0)!=0?(k=c[e+8>>2]|0,(c[e+4>>2]|0)!=(k|0)):0){j=k-8|0;k=c[j+4>>2]|0;c[l>>2]=c[j>>2];c[l+4>>2]=k;Mh(o,m)|0}m=b+16|0;c[m>>2]=(c[m>>2]|0)+(c[(c[b+12>>2]|0)+28>>2]|0);uh(b);b=c[e+4>>2]|0;if((b|0)==0){i=d;return}m=e+8|0;e=c[m>>2]|0;if((e|0)!=(b|0)){c[m>>2]=e+(~((e-8-b|0)>>>3)<<3)}Nt(b);i=d;return}function sh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=b+52|0;if((a[d]|0)!=0){e=Lt(12)|0;c[e>>2]=8912;c[e+4>>2]=b;f=b+36|0;g=c[f>>2]|0;h=b+32|0;i=c[h>>2]|0;if((g|0)==(i|0)){j=0}else{j=(g-i<<8)-1|0}k=b+44|0;l=c[k>>2]|0;m=b+48|0;n=c[m>>2]|0;if((j-l|0)==(n|0)){Kh(b+28|0);o=c[m>>2]|0;p=c[k>>2]|0;q=c[h>>2]|0;r=c[f>>2]|0}else{o=n;p=l;q=i;r=g}g=o+p|0;if((r|0)!=(q|0)?(r=(c[q+(g>>>10<<2)>>2]|0)+((g&1023)<<2)|0,(r|0)!=0):0){c[r>>2]=e}c[m>>2]=o+1;return}a[d]=1;o=b+48|0;if((c[o>>2]|0)!=0){m=b+32|0;e=b+44|0;b=c[e>>2]|0;while(1){r=c[(c[(c[m>>2]|0)+(b>>>10<<2)>>2]|0)+((b&1023)<<2)>>2]|0;zd[c[c[r>>2]>>2]&511](r);r=c[e>>2]|0;g=(c[(c[m>>2]|0)+(r>>>10<<2)>>2]|0)+((r&1023)<<2)|0;q=c[g>>2]|0;c[g>>2]=0;if((q|0)==0){s=r}else{pe(q,4);s=c[e>>2]|0}q=(c[o>>2]|0)-1|0;c[o>>2]=q;r=s+1|0;c[e>>2]=r;if(r>>>0>2047>>>0){Nt(c[c[m>>2]>>2]|0);c[m>>2]=(c[m>>2]|0)+4;g=(c[e>>2]|0)-1024|0;c[e>>2]=g;t=g;u=c[o>>2]|0}else{t=r;u=q}if((u|0)==0){break}else{b=t}}}a[d]=0;return}function th(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=b+32|0;if((e|0)!=(d|0)){f=a[d]|0;if((f&1)==0){g=(f&255)>>>1;h=d+1|0}else{g=c[d+4>>2]|0;h=c[d+8>>2]|0}Kk(e,h,g)|0}g=b+44|0;c[g>>2]=0;h=b+48|0;d=c[h>>2]|0;if((d&8|0)!=0){f=a[e]|0;if((f&1)==0){i=((f&255)>>>1)+(e+1)|0;c[g>>2]=i;j=e+1|0;k=i;l=e+1|0}else{i=(c[b+40>>2]|0)+(c[b+36>>2]|0)|0;c[g>>2]=i;f=c[b+40>>2]|0;j=f;k=i;l=f}c[b+8>>2]=l;c[b+12>>2]=j;c[b+16>>2]=k}if((d&16|0)==0){return}d=e;k=a[d]|0;if((k&1)==0){j=(k&255)>>>1;c[g>>2]=e+1+j;m=10;n=k;o=j}else{j=c[b+36>>2]|0;c[g>>2]=(c[b+40>>2]|0)+j;g=c[e>>2]|0;m=(g&-2)-1|0;n=g&255;o=j}j=(n&1)==0;if(j){p=(n&255)>>>1}else{p=c[b+36>>2]|0}do{if(!(m>>>0>p>>>0)){if(j){a[e+1+m|0]=0;a[d]=m<<1;break}else{a[(c[b+40>>2]|0)+m|0]=0;c[b+36>>2]=m;break}}else{Mk(e,m-p|0,0)|0}}while(0);p=a[d]|0;if((p&1)==0){q=(p&255)>>>1;r=e+1|0;s=e+1|0}else{e=c[b+40>>2]|0;q=c[b+36>>2]|0;r=e;s=e}e=b+24|0;c[e>>2]=r;c[b+20>>2]=r;c[b+28>>2]=s+q;if((c[h>>2]&3|0)==0){return}c[e>>2]=r+o;return}function uh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=b+52|0;if((a[d]|0)!=0){e=Lt(12)|0;c[e>>2]=8864;c[e+4>>2]=b;f=b+36|0;g=c[f>>2]|0;h=b+32|0;i=c[h>>2]|0;if((g|0)==(i|0)){j=0}else{j=(g-i<<8)-1|0}k=b+44|0;l=c[k>>2]|0;m=b+48|0;n=c[m>>2]|0;if((j-l|0)==(n|0)){Kh(b+28|0);o=c[m>>2]|0;p=c[k>>2]|0;q=c[h>>2]|0;r=c[f>>2]|0}else{o=n;p=l;q=i;r=g}g=o+p|0;if((r|0)!=(q|0)?(r=(c[q+(g>>>10<<2)>>2]|0)+((g&1023)<<2)|0,(r|0)!=0):0){c[r>>2]=e}c[m>>2]=o+1;return}a[d]=1;o=b+48|0;if((c[o>>2]|0)!=0){m=b+32|0;e=b+44|0;b=c[e>>2]|0;while(1){r=c[(c[(c[m>>2]|0)+(b>>>10<<2)>>2]|0)+((b&1023)<<2)>>2]|0;zd[c[c[r>>2]>>2]&511](r);r=c[e>>2]|0;g=(c[(c[m>>2]|0)+(r>>>10<<2)>>2]|0)+((r&1023)<<2)|0;q=c[g>>2]|0;c[g>>2]=0;if((q|0)==0){s=r}else{pe(q,4);s=c[e>>2]|0}q=(c[o>>2]|0)-1|0;c[o>>2]=q;r=s+1|0;c[e>>2]=r;if(r>>>0>2047>>>0){Nt(c[c[m>>2]>>2]|0);c[m>>2]=(c[m>>2]|0)+4;g=(c[e>>2]|0)-1024|0;c[e>>2]=g;t=g;u=c[o>>2]|0}else{t=r;u=q}if((u|0)==0){break}else{b=t}}}a[d]=0;return}function vh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;b=i;i=i+8|0;d=b|0;e=d;f=a-4680+8|0;g=f+24|0;h=f+32|0;j=c[h>>2]|0;k=c[h+4>>2]|0;h=f+40|0;l=k;m=l;n=j|0;o=k&0;k=c[h+4>>2]|0;p=k+m|0;q=j;j=f;f=a+12|0;r=a|0;a=(c[h>>2]|0)+q|0;if((k|0)==0){s=8;t=0;i=b;return}k=l|o;l=n|0;h=q;u=m;while(1){c[d>>2]=l;c[d+4>>2]=k;if(vi(g,e)|0){m=c[j>>2]|0;v=(ha(c[m+12>>2]|0,u)|0)+h|0;w=(ha(c[f>>2]|0,u)|0)+h|0;c[(c[r>>2]|0)+(w<<2)>>2]=c[(c[m>>2]|0)+(v<<2)>>2]}v=h+1|0;if((v|0)==(a|0)){x=u+1|o;y=n|0}else{x=k|0|0;y=v|l&0}h=y;u=x;if(!((u|0)!=(p|0)|(h|0)!=(q|0))){break}else{k=x;l=y}}s=8;t=0;i=b;return}function wh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=b+4740|0;if((a[d]|0)!=0){e=Lt(12)|0;c[e>>2]=9008;c[e+4>>2]=b;f=b+4724|0;g=c[f>>2]|0;h=b+4720|0;i=c[h>>2]|0;if((g|0)==(i|0)){j=0}else{j=(g-i<<8)-1|0}k=b+4732|0;l=c[k>>2]|0;m=b+4736|0;n=c[m>>2]|0;if((j-l|0)==(n|0)){Dh(b+4716|0);o=c[m>>2]|0;p=c[k>>2]|0;q=c[h>>2]|0;r=c[f>>2]|0}else{o=n;p=l;q=i;r=g}g=o+p|0;if((r|0)!=(q|0)?(r=(c[q+(g>>>10<<2)>>2]|0)+((g&1023)<<2)|0,(r|0)!=0):0){c[r>>2]=e}c[m>>2]=o+1;return}a[d]=1;vh(b+4672|0);o=b+4736|0;if((c[o>>2]|0)!=0){m=b+4720|0;e=b+4732|0;b=c[e>>2]|0;while(1){r=c[(c[(c[m>>2]|0)+(b>>>10<<2)>>2]|0)+((b&1023)<<2)>>2]|0;zd[c[c[r>>2]>>2]&511](r);r=c[e>>2]|0;g=(c[(c[m>>2]|0)+(r>>>10<<2)>>2]|0)+((r&1023)<<2)|0;q=c[g>>2]|0;c[g>>2]=0;if((q|0)==0){s=r}else{pe(q,4);s=c[e>>2]|0}q=(c[o>>2]|0)-1|0;c[o>>2]=q;r=s+1|0;c[e>>2]=r;if(r>>>0>2047>>>0){Nt(c[c[m>>2]>>2]|0);c[m>>2]=(c[m>>2]|0)+4;g=(c[e>>2]|0)-1024|0;c[e>>2]=g;t=g;u=c[o>>2]|0}else{t=r;u=q}if((u|0)==0){break}else{b=t}}}a[d]=0;return}function xh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;e=i;i=i+136|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=e+48|0;m=e+56|0;n=e+88|0;o=e+104|0;p=e+120|0;q=e+128|0;r=k|0;c[r>>2]=0;s=k+4|0;c[s>>2]=0;t=k+8|0;c[t>>2]=0;u=c[d>>2]|0;v=c[d+4>>2]|0;if((u|0)==(v|0)){i=e;return}d=b;w=l|0;x=f|0;y=g|0;z=h|0;A=j|0;B=u;u=0;while(1){if((a[B+4|0]|0)==0){C=0;D=u}else{C=1;D=c[B+8>>2]|0}E=c[B>>2]|0;F=c[d>>2]|0;G=F+24|0;H=c[G>>2]|0;I=F+28|0;F=c[I>>2]|0;J=F<<3>>3;if((J|0)==0){K=H;L=H;M=F}else{F=J;J=H;while(1){H=F>>>1;c[z>>2]=c[J+(H<<3)>>2];c[A>>2]=E;if(Ai(h,j)|0){N=F-1-H|0;O=J+(H+1<<3)|0}else{N=H;O=J}if((N|0)==0){break}else{F=N;J=O}}K=O;L=c[G>>2]|0;M=c[I>>2]|0}J=L+(M<<3)|0;if((K|0)==(J|0)){P=K;Q=L;R=M}else{c[x>>2]=E;c[y>>2]=c[K>>2];F=Ai(f,g)|0;P=F?J:K;Q=c[G>>2]|0;R=c[I>>2]|0}do{if((P|0)!=(Q+(R<<3)|0)?(J=c[(c[P+4>>2]|0)+12>>2]|0,(J|0)!=0):0){if(!(C<<24>>24==0)?((c[(c[d>>2]|0)+64>>2]|0)-D|0)<=100:0){break}c[w>>2]=J;F=c[s>>2]|0;if(!(F>>>0<(c[t>>2]|0)>>>0)){Nh(k,l);break}if((F|0)==0){S=0}else{c[F>>2]=J;S=c[s>>2]|0}c[s>>2]=S+4}}while(0);B=B+12|0;if((B|0)==(v|0)){break}else{u=D}}D=c[s>>2]|0;if((c[r>>2]|0)==(D|0)){T=D}else{_f(m,c[b>>2]|0);c[p>>2]=c[r>>2];c[q>>2]=c[s>>2];Oh(o,p,q);gf(n,o);q=m+24|0;Ph((c[q>>2]|0)+8|0,n)|0;me(me((c[q>>2]|0)+8|0,((c[s>>2]|0)-(c[r>>2]|0)|0)==4?2088:2080)|0,2064)|0;if(!((a[n]&1)==0)){Nt(c[n+8>>2]|0)}if(!((a[o]&1)==0)){Nt(c[o+8>>2]|0)}oh(m);T=c[r>>2]|0}if((T|0)==0){i=e;return}r=c[s>>2]|0;if((r|0)!=(T|0)){c[s>>2]=r+(~((r-4-T|0)>>>2)<<2)}Nt(T);i=e;return}function yh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;d=i;i=i+32|0;e=d|0;f=d+8|0;g=d+24|0;h=g;j=i;i=i+12|0;i=i+7&-8;k=i;i=i+12|0;i=i+7&-8;l=f|0;c[l>>2]=0;m=f+4|0;c[m>>2]=0;n=f+8|0;c[n>>2]=0;o=b-4680+8|0;p=o+24|0;q=o+32|0;r=c[q>>2]|0;s=c[q+4>>2]|0;q=o+40|0;t=s;u=(c[q+4>>2]|0)+t|0;v=r|0;w=s&0;s=r;r=o;o=b+20|0;x=e+4|0;y=e|0;z=k|0;A=k+4|0;B=k+8|0;C=j|0;D=j+4|0;E=(c[q>>2]|0)+s|0;q=t|w;t=v|0;a:while(1){F=t;G=q;H=G;if(!((H|0)!=(u|0)|(F|0)!=(s|0))){break}c[g>>2]=t;c[g+4>>2]=q;do{if((vi(p,h)|0?(I=c[r>>2]|0,J=I+12|0,(G|t|0)>-1&(F|0)<(c[J>>2]|0)):0)?(H|0)<(c[J+4>>2]|0):0){K=I+36|0;J=(ha(c[I+48>>2]|0,H)|0)+F|0;L=c[K>>2]|0;if(!((c[I+40>>2]|0)-L>>2>>>0>J>>>0)){M=8;break a}N=c[L+(J<<2)>>2]|0;if((N|0)!=0){J=c[I+64>>2]|0;I=N+8|0;N=c[I>>2]|0;L=Lt(16)|0;c[L+8>>2]=N;c[L+12>>2]=J;c[L+4>>2]=N;c[L>>2]=0;Qh(e,o,L);N=a[x]|0;if(!(N<<24>>24!=0|(L|0)==0)){Nt(L)}L=c[y>>2]|0;if(!(N<<24>>24==0)){N=c[I>>2]|0;c[C>>2]=N;a[D]=0;O=c[m>>2]|0;if(!(O>>>0<(c[n>>2]|0)>>>0)){Rh(f,j);break}if((O|0)==0){P=0}else{a[O+4|0]=0;c[O>>2]=N;P=c[m>>2]|0}c[m>>2]=P+12;break}N=L+12|0;L=c[N>>2]|0;c[N>>2]=J;J=c[I>>2]|0;c[z>>2]=J;c[B>>2]=L;a[A]=1;I=c[m>>2]|0;if(I>>>0<(c[n>>2]|0)>>>0){if((I|0)==0){Q=0}else{c[I+8>>2]=L;a[I+4|0]=1;c[I>>2]=J;Q=c[m>>2]|0}c[m>>2]=Q+12}else{Rh(f,k)}a[A]=0}}}while(0);G=F+1|0;if((G|0)!=(E|0)){q=q|0|0;t=G|t&0;continue}q=H+1|w;t=v|0}if((M|0)==8){Fp(K)}K=c[l>>2]|0;if((K|0)==(c[m>>2]|0)){R=K}else{Sh(b,f);R=c[l>>2]|0}if((R|0)==0){i=d;return}l=c[m>>2]|0;if((l|0)!=(R|0)){f=l-12|0;b=l;do{K=b;b=b-12|0;M=K-12+4|0;if((a[M]|0)!=0){a[M]=0}}while((b|0)!=(R|0));c[m>>2]=l+(~(((f-R|0)>>>0)/12|0)*12|0)}Nt(R);i=d;return}function zh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;b=a+4|0;d=c[b>>2]|0;e=a+16|0;f=c[e>>2]|0;g=d+(f>>>10<<2)|0;h=a+8|0;if((c[h>>2]|0)==(d|0)){i=0;j=0;k=a+20|0}else{l=a+20|0;a=f+(c[l>>2]|0)|0;i=(c[d+(a>>>10<<2)>>2]|0)+((a&1023)<<2)|0;j=(c[g>>2]|0)+((f&1023)<<2)|0;k=l}l=g;g=j;a:while(1){j=g;do{if((j|0)==(i|0)){break a}f=j|0;a=c[f>>2]|0;c[f>>2]=0;if((a|0)!=0){pe(a,4)}j=j+4|0}while((j-(c[l>>2]|0)|0)!=4096);j=l+4|0;l=j;g=c[j>>2]|0}c[k>>2]=0;k=c[b>>2]|0;g=(c[h>>2]|0)-k>>2;if(g>>>0>2>>>0){l=k;while(1){Nt(c[l>>2]|0);k=(c[b>>2]|0)+4|0;c[b>>2]=k;i=(c[h>>2]|0)-k>>2;if(i>>>0>2>>>0){l=k}else{m=i;break}}}else{m=g}if((m|0)==2){c[e>>2]=1024;return}else if((m|0)==1){c[e>>2]=512;return}else{return}}function Ah(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0,j=0;d=(c[b>>2]|0)+12|0;b=c[d>>2]|0;e=c[d+4>>2]|0;d=ha(e,b)|0;f=a|0;c[f>>2]=0;h=a+4|0;c[h>>2]=0;i=a+8|0;c[i>>2]=0;if((d|0)!=0){if(d>>>0>1073741823>>>0){Ep(a)}j=Lt(d<<2)|0;c[h>>2]=j;c[f>>2]=j;f=j+(d<<2)|0;c[i>>2]=f;i=d;d=j;while(1){if((d|0)!=0){c[d>>2]=0}i=i-1|0;if((i|0)==0){break}else{d=d+4|0}}c[h>>2]=f}f=a+12|0;c[f>>2]=b;c[f+4>>2]=e;eu(a+20|0,0,16)|0;g[a+36>>2]=1.0;return}function Bh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=b+4740|0;if((a[f]|0)!=0){g=Lt(16)|0;c[g>>2]=9032;c[g+4>>2]=b;c[g+8>>2]=d;c[g+12>>2]=e;e=b+4724|0;d=c[e>>2]|0;h=b+4720|0;i=c[h>>2]|0;if((d|0)==(i|0)){j=0}else{j=(d-i<<8)-1|0}k=b+4732|0;l=c[k>>2]|0;m=b+4736|0;n=c[m>>2]|0;if((j-l|0)==(n|0)){Dh(b+4716|0);o=c[m>>2]|0;p=c[k>>2]|0;q=c[h>>2]|0;r=c[e>>2]|0}else{o=n;p=l;q=i;r=d}d=o+p|0;if((r|0)!=(q|0)?(r=(c[q+(d>>>10<<2)>>2]|0)+((d&1023)<<2)|0,(r|0)!=0):0){c[r>>2]=g}c[m>>2]=o+1;return}a[f]=1;o=b+4736|0;if((c[o>>2]|0)!=0){m=b+4720|0;g=b+4732|0;b=c[g>>2]|0;while(1){r=c[(c[(c[m>>2]|0)+(b>>>10<<2)>>2]|0)+((b&1023)<<2)>>2]|0;zd[c[c[r>>2]>>2]&511](r);r=c[g>>2]|0;d=(c[(c[m>>2]|0)+(r>>>10<<2)>>2]|0)+((r&1023)<<2)|0;q=c[d>>2]|0;c[d>>2]=0;if((q|0)==0){s=r}else{pe(q,4);s=c[g>>2]|0}q=(c[o>>2]|0)-1|0;c[o>>2]=q;r=s+1|0;c[g>>2]=r;if(r>>>0>2047>>>0){Nt(c[c[m>>2]>>2]|0);c[m>>2]=(c[m>>2]|0)+4;d=(c[g>>2]|0)-1024|0;c[g>>2]=d;t=d;u=c[o>>2]|0}else{t=r;u=q}if((u|0)==0){break}else{b=t}}}a[f]=0;return}function Ch(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=i;i=i+8|0;f=d;d=i;i=i+8|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];f=e|0;g=b+4740|0;if((a[g]|0)!=0){h=Lt(16)|0;c[h>>2]=8960;c[h+4>>2]=b;j=d;d=h+8|0;k=c[j+4>>2]|0;c[d>>2]=c[j>>2];c[d+4>>2]=k;k=b+4724|0;d=c[k>>2]|0;j=b+4720|0;l=c[j>>2]|0;if((d|0)==(l|0)){m=0}else{m=(d-l<<8)-1|0}n=b+4732|0;o=c[n>>2]|0;p=b+4736|0;q=c[p>>2]|0;if((m-o|0)==(q|0)){Dh(b+4716|0);r=c[p>>2]|0;s=c[n>>2]|0;t=c[j>>2]|0;u=c[k>>2]|0}else{r=q;s=o;t=l;u=d}d=r+s|0;if((u|0)!=(t|0)?(u=(c[t+(d>>>10<<2)>>2]|0)+((d&1023)<<2)|0,(u|0)!=0):0){c[u>>2]=h}c[p>>2]=r+1;i=e;return}a[g]=1;r=b+24|0;p=r-4648+4624|0;h=c[r-4648+9336>>2]|0;u=c[h+4>>2]|0;c[f>>2]=c[h>>2];c[f+4>>2]=u;ui(r|0,f,c[p>>2]|0);wh(p);p=b+4736|0;if((c[p>>2]|0)!=0){f=b+4720|0;r=b+4732|0;b=c[r>>2]|0;while(1){u=c[(c[(c[f>>2]|0)+(b>>>10<<2)>>2]|0)+((b&1023)<<2)>>2]|0;zd[c[c[u>>2]>>2]&511](u);u=c[r>>2]|0;h=(c[(c[f>>2]|0)+(u>>>10<<2)>>2]|0)+((u&1023)<<2)|0;d=c[h>>2]|0;c[h>>2]=0;if((d|0)==0){v=u}else{pe(d,4);v=c[r>>2]|0}d=(c[p>>2]|0)-1|0;c[p>>2]=d;u=v+1|0;c[r>>2]=u;if(u>>>0>2047>>>0){Nt(c[c[f>>2]>>2]|0);c[f>>2]=(c[f>>2]|0)+4;h=(c[r>>2]|0)-1024|0;c[r>>2]=h;w=h;x=c[p>>2]|0}else{w=u;x=d}if((x|0)==0){break}else{b=w}}}a[g]=0;i=e;return}function Dh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;b=i;i=i+48|0;d=b|0;e=b+8|0;f=b+16|0;g=b+40|0;h=a+16|0;j=c[h>>2]|0;if(j>>>0>1023>>>0){c[h>>2]=j-1024;j=a+4|0;h=c[j>>2]|0;k=c[h>>2]|0;l=h+4|0;c[j>>2]=l;m=a+8|0;n=c[m>>2]|0;o=a+12|0;do{if((n|0)==(c[o>>2]|0)){p=a|0;q=c[p>>2]|0;if(l>>>0>q>>>0){r=l;s=((r-q>>2)+1|0)/-2|0;t=n-r|0;gu(h+(s+1<<2)|0,l|0,t|0)|0;r=h+((t>>2)+1+s<<2)|0;c[m>>2]=r;c[j>>2]=(c[j>>2]|0)+(s<<2);u=r;v=12;break}r=n-q>>1;q=(r|0)==0?1:r;r=Lt(q<<2)|0;s=r+(q>>>2<<2)|0;t=r+(q<<2)|0;q=c[j>>2]|0;w=c[m>>2]|0;if((q|0)==(w|0)){x=s}else{y=q;q=s;while(1){if((q|0)==0){z=0}else{c[q>>2]=c[y>>2];z=q}A=z+4|0;B=y+4|0;if((B|0)==(w|0)){x=A;break}else{y=B;q=A}}}q=c[p>>2]|0;c[p>>2]=r;c[j>>2]=s;c[m>>2]=x;c[o>>2]=t;if((q|0)==0){C=x;v=11}else{Nt(q);C=c[m>>2]|0;v=11}}else{C=n;v=11}}while(0);if((v|0)==11){if((C|0)==0){D=0}else{u=C;v=12}}if((v|0)==12){c[u>>2]=k;D=c[m>>2]|0}c[m>>2]=D+4;i=b;return}D=a|0;m=a+8|0;k=c[m>>2]|0;u=a+4|0;C=k-(c[u>>2]|0)>>2;n=a+12|0;x=c[n>>2]|0;o=a|0;j=x-(c[o>>2]|0)|0;if(!(C>>>0<j>>2>>>0)){z=j>>1;j=(z|0)==0?1:z;z=f+12|0;c[f+16>>2]=a+12;a=Lt(j<<2)|0;h=f|0;c[h>>2]=a;l=a+(C<<2)|0;C=f+8|0;c[C>>2]=l;q=f+4|0;c[q>>2]=l;c[z>>2]=a+(j<<2);c[g>>2]=Lt(4096)|0;Vh(f,g);g=c[m>>2]|0;while(1){if((g|0)==(c[u>>2]|0)){break}j=g-4|0;Wh(f,j);g=j}f=c[o>>2]|0;c[o>>2]=c[h>>2];c[h>>2]=f;c[u>>2]=c[q>>2];c[q>>2]=g;q=c[m>>2]|0;c[m>>2]=c[C>>2];c[C>>2]=q;h=c[n>>2]|0;c[n>>2]=c[z>>2];c[z>>2]=h;if((q|0)!=(g|0)){c[C>>2]=q+(~((q-4-g|0)>>>2)<<2)}if((f|0)==0){i=b;return}Nt(f);i=b;return}f=Lt(4096)|0;if((x|0)!=(k|0)){c[d>>2]=f;Th(D,d);i=b;return}c[e>>2]=f;Uh(D,e);e=c[u>>2]|0;D=c[e>>2]|0;f=e+4|0;c[u>>2]=f;d=c[m>>2]|0;do{if((d|0)==(c[n>>2]|0)){k=c[o>>2]|0;if(f>>>0>k>>>0){x=f;g=((x-k>>2)+1|0)/-2|0;q=d-x|0;gu(e+(g+1<<2)|0,f|0,q|0)|0;x=e+((q>>2)+1+g<<2)|0;c[m>>2]=x;c[u>>2]=(c[u>>2]|0)+(g<<2);E=x;v=27;break}x=d-k>>1;k=(x|0)==0?1:x;x=Lt(k<<2)|0;g=x+(k>>>2<<2)|0;q=x+(k<<2)|0;k=c[u>>2]|0;C=c[m>>2]|0;if((k|0)==(C|0)){F=g}else{h=k;k=g;while(1){if((k|0)==0){G=0}else{c[k>>2]=c[h>>2];G=k}z=G+4|0;j=h+4|0;if((j|0)==(C|0)){F=z;break}else{h=j;k=z}}}k=c[o>>2]|0;c[o>>2]=x;c[u>>2]=g;c[m>>2]=F;c[n>>2]=q;if((k|0)==0){H=F;v=26}else{Nt(k);H=c[m>>2]|0;v=26}}else{H=d;v=26}}while(0);if((v|0)==26){if((H|0)==0){I=0}else{E=H;v=27}}if((v|0)==27){c[E>>2]=D;I=c[m>>2]|0}c[m>>2]=I+4;i=b;return}function Eh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+16|0;g=f|0;h=f+8|0;j=b;k=c[b+8>>2]|0;l=c[d>>2]|0;if((k|0)==(c[b+4>>2]|0)){d=b|0;m=l-(c[d>>2]|0)>>3;n=k+1|0;o=(k>>>1)+k|0;k=n>>>0>o>>>0?n:o;o=Lt(k<<3)|0;c[g>>2]=j;c[g+4>>2]=e;Yh(b,o,k,l,1,g);c[a>>2]=(c[d>>2]|0)+(m<<3);p=8;q=0;i=f;return}else{m=b|0;d=l-(c[m>>2]|0)>>3;c[h>>2]=j;c[h+4>>2]=e;Xh(b,l,1,h);c[a>>2]=(c[m>>2]|0)+(d<<3);p=8;q=0;i=f;return}}function Fh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=b+52|0;if((a[f]|0)!=0){g=Lt(16)|0;c[g>>2]=8840;c[g+4>>2]=b;c[g+8>>2]=d;c[g+12>>2]=e;e=b+36|0;d=c[e>>2]|0;h=b+32|0;i=c[h>>2]|0;if((d|0)==(i|0)){j=0}else{j=(d-i<<8)-1|0}k=b+44|0;l=c[k>>2]|0;m=b+48|0;n=c[m>>2]|0;if((j-l|0)==(n|0)){Kh(b+28|0);o=c[m>>2]|0;p=c[k>>2]|0;q=c[h>>2]|0;r=c[e>>2]|0}else{o=n;p=l;q=i;r=d}d=o+p|0;if((r|0)!=(q|0)?(r=(c[q+(d>>>10<<2)>>2]|0)+((d&1023)<<2)|0,(r|0)!=0):0){c[r>>2]=g}c[m>>2]=o+1;return}a[f]=1;o=b+48|0;if((c[o>>2]|0)!=0){m=b+32|0;g=b+44|0;b=c[g>>2]|0;while(1){r=c[(c[(c[m>>2]|0)+(b>>>10<<2)>>2]|0)+((b&1023)<<2)>>2]|0;zd[c[c[r>>2]>>2]&511](r);r=c[g>>2]|0;d=(c[(c[m>>2]|0)+(r>>>10<<2)>>2]|0)+((r&1023)<<2)|0;q=c[d>>2]|0;c[d>>2]=0;if((q|0)==0){s=r}else{pe(q,4);s=c[g>>2]|0}q=(c[o>>2]|0)-1|0;c[o>>2]=q;r=s+1|0;c[g>>2]=r;if(r>>>0>2047>>>0){Nt(c[c[m>>2]>>2]|0);c[m>>2]=(c[m>>2]|0)+4;d=(c[g>>2]|0)-1024|0;c[g>>2]=d;t=d;u=c[o>>2]|0}else{t=r;u=q}if((u|0)==0){break}else{b=t}}}a[f]=0;return}function Gh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;f=d;d=i;i=i+8|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];f=b+52|0;if((a[f]|0)!=0){g=Lt(16)|0;c[g>>2]=8816;c[g+4>>2]=b;h=d;d=g+8|0;j=c[h+4>>2]|0;c[d>>2]=c[h>>2];c[d+4>>2]=j;j=b+36|0;d=c[j>>2]|0;h=b+32|0;k=c[h>>2]|0;if((d|0)==(k|0)){l=0}else{l=(d-k<<8)-1|0}m=b+44|0;n=c[m>>2]|0;o=b+48|0;p=c[o>>2]|0;if((l-n|0)==(p|0)){Kh(b+28|0);q=c[o>>2]|0;r=c[m>>2]|0;s=c[h>>2]|0;t=c[j>>2]|0}else{q=p;r=n;s=k;t=d}d=q+r|0;if((t|0)!=(s|0)?(t=(c[s+(d>>>10<<2)>>2]|0)+((d&1023)<<2)|0,(t|0)!=0):0){c[t>>2]=g}c[o>>2]=q+1;i=e;return}a[f]=1;q=b+48|0;if((c[q>>2]|0)!=0){o=b+32|0;g=b+44|0;b=c[g>>2]|0;while(1){t=c[(c[(c[o>>2]|0)+(b>>>10<<2)>>2]|0)+((b&1023)<<2)>>2]|0;zd[c[c[t>>2]>>2]&511](t);t=c[g>>2]|0;d=(c[(c[o>>2]|0)+(t>>>10<<2)>>2]|0)+((t&1023)<<2)|0;s=c[d>>2]|0;c[d>>2]=0;if((s|0)==0){u=t}else{pe(s,4);u=c[g>>2]|0}s=(c[q>>2]|0)-1|0;c[q>>2]=s;t=u+1|0;c[g>>2]=t;if(t>>>0>2047>>>0){Nt(c[c[o>>2]>>2]|0);c[o>>2]=(c[o>>2]|0)+4;d=(c[g>>2]|0)-1024|0;c[g>>2]=d;v=d;w=c[q>>2]|0}else{v=t;w=s}if((w|0)==0){break}else{b=v}}}a[f]=0;i=e;return}function Hh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+16|0;e=b;b=i;i=i+8|0;c[b>>2]=c[e>>2];c[b+4>>2]=c[e+4>>2];e=d|0;f=b;b=c[f>>2]|0;g=a-4712|0;h=c[g>>2]|0;j=h+12|0;k=b;l=c[f+4>>2]|0;f=c[j>>2]|0;if(!((l|b|0)>-1&(k|0)<(f|0))){m=0;i=d;return m|0}b=l;if((b|0)>=(c[j+4>>2]|0)){m=0;i=d;return m|0}j=(ha(f,b)|0)+k|0;$i(e,c[(c[h>>2]|0)+(j<<2)>>2]|0);if((c[e+12>>2]&1|0)!=0){m=0;i=d;return m|0}e=c[a>>2]|0;if((k|0)==(c[e>>2]|0)&(b|0)==(c[e+4>>2]|0)){m=1;i=d;return m|0}e=c[g>>2]|0;g=c[e+60>>2]|0;if((g|0)!=0?(a=c[g+4712>>2]|0,(k|0)==(c[a>>2]|0)&(b|0)==(c[a+4>>2]|0)):0){m=0;i=d;return m|0}a=e+12|0;if((k|0)>=(c[a>>2]|0)){m=1;i=d;return m|0}if((b|0)>=(c[a+4>>2]|0)){m=1;i=d;return m|0}a=e+36|0;g=(ha(c[e+48>>2]|0,b)|0)+k|0;k=c[a>>2]|0;if(!((c[e+40>>2]|0)-k>>2>>>0>g>>>0)){Fp(a);return 0}m=(c[k+(g<<2)>>2]|0)==0;i=d;return m|0}function Ih(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;e=i;i=i+48|0;f=b;b=i;i=i+4|0;i=i+7&-8;c[b>>2]=c[f>>2];f=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[f>>2];f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=e+40|0;m=c[b>>2]|0;b=c[d>>2]|0;c[k>>2]=m;c[l>>2]=1;if(yi(k,l)|0){l=c[a+60>>2]|0;if((l|0)==0){n=4;o=0;p=4;q=0;i=e;return}Zh(b,l);n=4;o=0;p=4;q=0;i=e;return}l=a+24|0;k=c[l>>2]|0;d=a+28|0;a=c[d>>2]|0;r=a<<3>>3;if((r|0)==0){s=k;t=k;u=a}else{a=h|0;v=j|0;w=r;r=k;while(1){k=w>>>1;c[a>>2]=c[r+(k<<3)>>2];c[v>>2]=m;if(Ai(h,j)|0){x=w-1-k|0;y=r+(k+1<<3)|0}else{x=k;y=r}if((x|0)==0){break}else{w=x;r=y}}s=y;t=c[l>>2]|0;u=c[d>>2]|0}y=t+(u<<3)|0;if((s|0)==(y|0)){z=s;A=t;B=u}else{c[f>>2]=m;c[g>>2]=c[s>>2];m=Ai(f,g)|0;z=m?y:s;A=c[l>>2]|0;B=c[d>>2]|0}if((z|0)==(A+(B<<3)|0)){n=4;o=0;p=4;q=0;i=e;return}B=c[(c[z+4>>2]|0)+12>>2]|0;if((B|0)==0){n=4;o=0;p=4;q=0;i=e;return}_h(b,B);n=4;o=0;p=4;q=0;i=e;return}function Jh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=c[d+48>>2]|0;if((e&16|0)!=0){f=d+44|0;g=c[f>>2]|0;h=c[d+24>>2]|0;if(g>>>0<h>>>0){c[f>>2]=h;i=h}else{i=g}g=c[d+20>>2]|0;h=i-g|0;if(h>>>0>4294967279>>>0){Dk(b)}if(h>>>0<11>>>0){a[b]=h<<1;j=b+1|0}else{f=h+16&-16;k=Lt(f)|0;c[b+8>>2]=k;c[b>>2]=f|1;c[b+4>>2]=h;j=k}if((g|0)==(i|0)){l=j}else{k=j;f=g;while(1){a[k]=a[f]|0;f=f+1|0;if((f|0)==(i|0)){break}else{k=k+1|0}}l=j+h|0}a[l]=0;return}if((e&8|0)==0){eu(b|0,0,12)|0;return}e=c[d+8>>2]|0;l=c[d+16>>2]|0;d=l-e|0;if(d>>>0>4294967279>>>0){Dk(b)}if(d>>>0<11>>>0){a[b]=d<<1;m=b+1|0}else{h=d+16&-16;j=Lt(h)|0;c[b+8>>2]=j;c[b>>2]=h|1;c[b+4>>2]=d;m=j}if((e|0)==(l|0)){n=m}else{j=m;b=e;while(1){a[j]=a[b]|0;b=b+1|0;if((b|0)==(l|0)){break}else{j=j+1|0}}n=m+d|0}a[n]=0;return}function Kh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;b=i;i=i+48|0;d=b|0;e=b+8|0;f=b+16|0;g=b+40|0;h=a+16|0;j=c[h>>2]|0;if(j>>>0>1023>>>0){c[h>>2]=j-1024;j=a+4|0;h=c[j>>2]|0;k=c[h>>2]|0;l=h+4|0;c[j>>2]=l;m=a+8|0;n=c[m>>2]|0;o=a+12|0;do{if((n|0)==(c[o>>2]|0)){p=a|0;q=c[p>>2]|0;if(l>>>0>q>>>0){r=l;s=((r-q>>2)+1|0)/-2|0;t=n-r|0;gu(h+(s+1<<2)|0,l|0,t|0)|0;r=h+((t>>2)+1+s<<2)|0;c[m>>2]=r;c[j>>2]=(c[j>>2]|0)+(s<<2);u=r;v=12;break}r=n-q>>1;q=(r|0)==0?1:r;r=Lt(q<<2)|0;s=r+(q>>>2<<2)|0;t=r+(q<<2)|0;q=c[j>>2]|0;w=c[m>>2]|0;if((q|0)==(w|0)){x=s}else{y=q;q=s;while(1){if((q|0)==0){z=0}else{c[q>>2]=c[y>>2];z=q}A=z+4|0;B=y+4|0;if((B|0)==(w|0)){x=A;break}else{y=B;q=A}}}q=c[p>>2]|0;c[p>>2]=r;c[j>>2]=s;c[m>>2]=x;c[o>>2]=t;if((q|0)==0){C=x;v=11}else{Nt(q);C=c[m>>2]|0;v=11}}else{C=n;v=11}}while(0);if((v|0)==11){if((C|0)==0){D=0}else{u=C;v=12}}if((v|0)==12){c[u>>2]=k;D=c[m>>2]|0}c[m>>2]=D+4;i=b;return}D=a|0;m=a+8|0;k=c[m>>2]|0;u=a+4|0;C=k-(c[u>>2]|0)>>2;n=a+12|0;x=c[n>>2]|0;o=a|0;j=x-(c[o>>2]|0)|0;if(!(C>>>0<j>>2>>>0)){z=j>>1;j=(z|0)==0?1:z;z=f+12|0;c[f+16>>2]=a+12;a=Lt(j<<2)|0;h=f|0;c[h>>2]=a;l=a+(C<<2)|0;C=f+8|0;c[C>>2]=l;q=f+4|0;c[q>>2]=l;c[z>>2]=a+(j<<2);c[g>>2]=Lt(4096)|0;bi(f,g);g=c[m>>2]|0;while(1){if((g|0)==(c[u>>2]|0)){break}j=g-4|0;ci(f,j);g=j}f=c[o>>2]|0;c[o>>2]=c[h>>2];c[h>>2]=f;c[u>>2]=c[q>>2];c[q>>2]=g;q=c[m>>2]|0;c[m>>2]=c[C>>2];c[C>>2]=q;h=c[n>>2]|0;c[n>>2]=c[z>>2];c[z>>2]=h;if((q|0)!=(g|0)){c[C>>2]=q+(~((q-4-g|0)>>>2)<<2)}if((f|0)==0){i=b;return}Nt(f);i=b;return}f=Lt(4096)|0;if((x|0)!=(k|0)){c[d>>2]=f;$h(D,d);i=b;return}c[e>>2]=f;ai(D,e);e=c[u>>2]|0;D=c[e>>2]|0;f=e+4|0;c[u>>2]=f;d=c[m>>2]|0;do{if((d|0)==(c[n>>2]|0)){k=c[o>>2]|0;if(f>>>0>k>>>0){x=f;g=((x-k>>2)+1|0)/-2|0;q=d-x|0;gu(e+(g+1<<2)|0,f|0,q|0)|0;x=e+((q>>2)+1+g<<2)|0;c[m>>2]=x;c[u>>2]=(c[u>>2]|0)+(g<<2);E=x;v=27;break}x=d-k>>1;k=(x|0)==0?1:x;x=Lt(k<<2)|0;g=x+(k>>>2<<2)|0;q=x+(k<<2)|0;k=c[u>>2]|0;C=c[m>>2]|0;if((k|0)==(C|0)){F=g}else{h=k;k=g;while(1){if((k|0)==0){G=0}else{c[k>>2]=c[h>>2];G=k}z=G+4|0;j=h+4|0;if((j|0)==(C|0)){F=z;break}else{h=j;k=z}}}k=c[o>>2]|0;c[o>>2]=x;c[u>>2]=g;c[m>>2]=F;c[n>>2]=q;if((k|0)==0){H=F;v=26}else{Nt(k);H=c[m>>2]|0;v=26}}else{H=d;v=26}}while(0);if((v|0)==26){if((H|0)==0){I=0}else{E=H;v=27}}if((v|0)==27){c[E>>2]=D;I=c[m>>2]|0}c[m>>2]=I+4;i=b;return}



function qs(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0;d=i;i=i+376|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+128|0;m=d+136|0;n=d+144|0;o=d+160|0;p=d+176|0;q=d+184|0;r=d+344|0;s=d+352|0;t=d+360|0;u=d+368|0;v=d|0;_m(n,g,v,l,m);g=o;eu(g|0,0,12)|0;Lk(o,10,0);if((a[g]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=c[l>>2]|0;l=c[m>>2]|0;m=x;x=c[A>>2]|0;a:while(1){if((x|0)!=0){D=c[x+12>>2]|0;if((D|0)==(c[x+16>>2]|0)){E=Ed[c[(c[x>>2]|0)+36>>2]&255](x)|0}else{E=c[D>>2]|0}if((E|0)==-1){c[A>>2]=0;F=1;G=0}else{F=0;G=x}}else{F=1;G=0}D=c[e>>2]|0;do{if((D|0)!=0){H=c[D+12>>2]|0;if((H|0)==(c[D+16>>2]|0)){I=Ed[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{I=c[H>>2]|0}if(!((I|0)==-1)){if(F){J=D;break}else{K=m;L=D;break a}}else{c[e>>2]=0;M=18;break}}else{M=18}}while(0);if((M|0)==18){M=0;if(F){K=m;L=0;break}else{J=0}}D=a[g]|0;H=(D&1)==0;if(H){N=(D&255)>>>1}else{N=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(N|0)){if(H){O=(D&255)>>>1;P=(D&255)>>>1}else{D=c[B>>2]|0;O=D;P=D}Lk(o,O<<1,0);if((a[g]&1)==0){Q=10}else{Q=(c[f>>2]&-2)-1|0}Lk(o,Q,0);if((a[g]&1)==0){R=y}else{R=c[z>>2]|0}c[p>>2]=R+P;S=R}else{S=m}D=G+12|0;H=c[D>>2]|0;T=G+16|0;if((H|0)==(c[T>>2]|0)){U=Ed[c[(c[G>>2]|0)+36>>2]&255](G)|0}else{U=c[H>>2]|0}if(($m(U,t,u,S,p,C,l,n,w,r,s,v)|0)!=0){K=S;L=J;break}H=c[D>>2]|0;if((H|0)==(c[T>>2]|0)){Ed[c[(c[G>>2]|0)+40>>2]&255](G)|0;m=S;x=G;continue}else{c[D>>2]=H+4;m=S;x=G;continue}}x=n;S=a[x]|0;if((S&1)==0){V=(S&255)>>>1}else{V=c[n+4>>2]|0}if(!((V|0)==0|(a[t]|0)==0)?(t=c[r>>2]|0,(t-q|0)<160):0){q=c[s>>2]|0;c[r>>2]=t+4;c[t>>2]=q}h[k>>3]=+Vs(K,c[p>>2]|0,j);p=c[r>>2]|0;r=a[x]|0;if((r&1)==0){W=(r&255)>>>1}else{W=c[n+4>>2]|0}b:do{if((W|0)!=0){if((w|0)!=(p|0)?(K=p-4|0,K>>>0>w>>>0):0){k=w;q=K;do{K=c[k>>2]|0;c[k>>2]=c[q>>2];c[q>>2]=K;k=k+4|0;q=q-4|0}while(k>>>0<q>>>0);X=a[x]|0}else{X=r}if((X&1)==0){Y=(X&255)>>>1;Z=n+1|0}else{Y=c[n+4>>2]|0;Z=c[n+8>>2]|0}q=p-4|0;k=a[Z]|0;K=k<<24>>24<1|k<<24>>24==127;c:do{if(q>>>0>w>>>0){t=Z+Y|0;s=Z;V=w;S=k;m=K;while(1){if(!m?(S<<24>>24|0)!=(c[V>>2]|0):0){break}J=(t-s|0)>1?s+1|0:s;v=V+4|0;l=a[J]|0;C=l<<24>>24<1|l<<24>>24==127;if(v>>>0<q>>>0){s=J;V=v;S=l;m=C}else{_=l;$=C;break c}}c[j>>2]=4;break b}else{_=k;$=K}}while(0);if(!$?!(((c[q>>2]|0)-1|0)>>>0<_<<24>>24>>>0):0){c[j>>2]=4}}}while(0);do{if((G|0)!=0){_=c[G+12>>2]|0;if((_|0)==(c[G+16>>2]|0)){aa=Ed[c[(c[G>>2]|0)+36>>2]&255](G)|0}else{aa=c[_>>2]|0}if((aa|0)==-1){c[A>>2]=0;ba=1;break}else{ba=(c[A>>2]|0)==0;break}}else{ba=1}}while(0);do{if((L|0)!=0){aa=c[L+12>>2]|0;if((aa|0)==(c[L+16>>2]|0)){ca=Ed[c[(c[L>>2]|0)+36>>2]&255](L)|0}else{ca=c[aa>>2]|0}if((ca|0)==-1){c[e>>2]=0;M=84;break}if(ba){da=c[A>>2]|0;ea=b|0;c[ea>>2]=da;fa=160;ga=0;Ik(o);Ik(n);ha=128;ia=0;i=d;return}}else{M=84}}while(0);if((M|0)==84?!ba:0){da=c[A>>2]|0;ea=b|0;c[ea>>2]=da;fa=160;ga=0;Ik(o);Ik(n);ha=128;ia=0;i=d;return}c[j>>2]=c[j>>2]|2;da=c[A>>2]|0;ea=b|0;c[ea>>2]=da;fa=160;ga=0;Ik(o);Ik(n);ha=128;ia=0;i=d;return}function rs(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+16|0;h=g|0;j=h;c[j>>2]=f;c[j+4>>2]=0;j=Kc(d|0)|0;d=Lc(a|0,b|0,e|0,h|0)|0;if((j|0)==0){i=g;return d|0}Kc(j|0)|0;i=g;return d|0}function ss(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g;c[h>>2]=e;c[h+4>>2]=0;h=Kc(b|0)|0;b=hd(a|0,d|0,g|0)|0;if((h|0)==0){i=f;return b|0}Kc(h|0)|0;i=f;return b|0}function ts(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=k|0;m=d|0;d=c[m>>2]|0;if((d|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g>>2;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;g=h>>2;if((h|0)>0?(Cd[c[(c[d>>2]|0)+48>>2]&63](d,e,g)|0)!=(g|0):0){c[m>>2]=0;c[b>>2]=0;i=k;return}do{if((q|0)>0){Uk(l,q,j);if((a[l]&1)==0){r=l+4|0}else{r=c[l+8>>2]|0}if((Cd[c[(c[d>>2]|0)+48>>2]&63](d,r,q)|0)==(q|0)){Vk(l);break}c[m>>2]=0;c[b>>2]=0;Vk(l);i=k;return}}while(0);l=n-o|0;o=l>>2;if((l|0)>0?(Cd[c[(c[d>>2]|0)+48>>2]&63](d,f,o)|0)!=(o|0):0){c[m>>2]=0;c[b>>2]=0;i=k;return}c[p>>2]=0;c[b>>2]=d;i=k;return}function us(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;j=i;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;d=c[k>>2]|0;do{if((d|0)!=0){if((c[d+12>>2]|0)==(c[d+16>>2]|0)){if((Ed[c[(c[d>>2]|0)+36>>2]&255](d)|0)==-1){c[k>>2]=0;l=0;break}else{l=c[k>>2]|0;break}}else{l=d}}else{l=0}}while(0);d=(l|0)==0;l=e|0;e=c[l>>2]|0;do{if((e|0)!=0){if((c[e+12>>2]|0)==(c[e+16>>2]|0)?(Ed[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1:0){c[l>>2]=0;m=11;break}if(d){n=e}else{m=12}}else{m=11}}while(0);if((m|0)==11){if(d){m=12}else{n=0}}if((m|0)==12){c[f>>2]=c[f>>2]|6;o=0;i=j;return o|0}d=c[k>>2]|0;e=c[d+12>>2]|0;if((e|0)==(c[d+16>>2]|0)){p=(Ed[c[(c[d>>2]|0)+36>>2]&255](d)|0)&255}else{p=a[e]|0}if(p<<24>>24>-1?(e=g+8|0,!((b[(c[e>>2]|0)+(p<<24>>24<<1)>>1]&2048)==0)):0){d=g;q=(Cd[c[(c[d>>2]|0)+36>>2]&63](g,p,0)|0)<<24>>24;p=c[k>>2]|0;r=p+12|0;s=c[r>>2]|0;if((s|0)==(c[p+16>>2]|0)){Ed[c[(c[p>>2]|0)+40>>2]&255](p)|0;t=q;u=h;v=n;w=n}else{c[r>>2]=s+1;t=q;u=h;v=n;w=n}while(1){x=t-48|0;n=u-1|0;h=c[k>>2]|0;do{if((h|0)!=0){if((c[h+12>>2]|0)==(c[h+16>>2]|0)){if((Ed[c[(c[h>>2]|0)+36>>2]&255](h)|0)==-1){c[k>>2]=0;y=0;break}else{y=c[k>>2]|0;break}}else{y=h}}else{y=0}}while(0);h=(y|0)==0;if((v|0)!=0){if((c[v+12>>2]|0)==(c[v+16>>2]|0)){if((Ed[c[(c[v>>2]|0)+36>>2]&255](v)|0)==-1){c[l>>2]=0;z=0;A=0}else{z=w;A=w}}else{z=v;A=w}}else{z=0;A=w}B=c[k>>2]|0;if(!((h^(z|0)==0)&(n|0)>0)){m=40;break}h=c[B+12>>2]|0;if((h|0)==(c[B+16>>2]|0)){C=(Ed[c[(c[B>>2]|0)+36>>2]&255](B)|0)&255}else{C=a[h]|0}if(!(C<<24>>24>-1)){o=x;m=52;break}if((b[(c[e>>2]|0)+(C<<24>>24<<1)>>1]&2048)==0){o=x;m=52;break}h=((Cd[c[(c[d>>2]|0)+36>>2]&63](g,C,0)|0)<<24>>24)+(x*10|0)|0;q=c[k>>2]|0;s=q+12|0;r=c[s>>2]|0;if((r|0)==(c[q+16>>2]|0)){Ed[c[(c[q>>2]|0)+40>>2]&255](q)|0;t=h;u=n;v=z;w=A;continue}else{c[s>>2]=r+1;t=h;u=n;v=z;w=A;continue}}if((m|0)==40){do{if((B|0)!=0){if((c[B+12>>2]|0)==(c[B+16>>2]|0)){if((Ed[c[(c[B>>2]|0)+36>>2]&255](B)|0)==-1){c[k>>2]=0;D=0;break}else{D=c[k>>2]|0;break}}else{D=B}}else{D=0}}while(0);B=(D|0)==0;do{if((A|0)!=0){if((c[A+12>>2]|0)==(c[A+16>>2]|0)?(Ed[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1:0){c[l>>2]=0;m=50;break}if(B){o=x;i=j;return o|0}}else{m=50}}while(0);if((m|0)==50?!B:0){o=x;i=j;return o|0}c[f>>2]=c[f>>2]|2;o=x;i=j;return o|0}else if((m|0)==52){i=j;return o|0}}c[f>>2]=c[f>>2]|4;o=0;i=j;return o|0}function vs(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;g=i;h=b;b=i;i=i+4|0;i=i+7&-8;c[b>>2]=c[h>>2];h=a|0;a=c[h>>2]|0;do{if((a|0)!=0){j=c[a+12>>2]|0;if((j|0)==(c[a+16>>2]|0)){k=Ed[c[(c[a>>2]|0)+36>>2]&255](a)|0}else{k=c[j>>2]|0}if((k|0)==-1){c[h>>2]=0;l=1;break}else{l=(c[h>>2]|0)==0;break}}else{l=1}}while(0);k=b|0;b=c[k>>2]|0;do{if((b|0)!=0){a=c[b+12>>2]|0;if((a|0)==(c[b+16>>2]|0)){m=Ed[c[(c[b>>2]|0)+36>>2]&255](b)|0}else{m=c[a>>2]|0}if(!((m|0)==-1)){if(l){n=b;break}else{o=16;break}}else{c[k>>2]=0;o=14;break}}else{o=14}}while(0);if((o|0)==14){if(l){o=16}else{n=0}}if((o|0)==16){c[d>>2]=c[d>>2]|6;p=0;i=g;return p|0}l=c[h>>2]|0;b=c[l+12>>2]|0;if((b|0)==(c[l+16>>2]|0)){q=Ed[c[(c[l>>2]|0)+36>>2]&255](l)|0}else{q=c[b>>2]|0}b=e;if(!(Cd[c[(c[b>>2]|0)+12>>2]&63](e,2048,q)|0)){c[d>>2]=c[d>>2]|4;p=0;i=g;return p|0}l=e;m=(Cd[c[(c[l>>2]|0)+52>>2]&63](e,q,0)|0)<<24>>24;q=c[h>>2]|0;a=q+12|0;j=c[a>>2]|0;if((j|0)==(c[q+16>>2]|0)){Ed[c[(c[q>>2]|0)+40>>2]&255](q)|0;r=m;s=f;t=n;u=n}else{c[a>>2]=j+4;r=m;s=f;t=n;u=n}while(1){v=r-48|0;n=s-1|0;f=c[h>>2]|0;do{if((f|0)!=0){m=c[f+12>>2]|0;if((m|0)==(c[f+16>>2]|0)){w=Ed[c[(c[f>>2]|0)+36>>2]&255](f)|0}else{w=c[m>>2]|0}if((w|0)==-1){c[h>>2]=0;x=1;break}else{x=(c[h>>2]|0)==0;break}}else{x=1}}while(0);do{if((t|0)!=0){f=c[t+12>>2]|0;if((f|0)==(c[t+16>>2]|0)){y=Ed[c[(c[t>>2]|0)+36>>2]&255](t)|0}else{y=c[f>>2]|0}if((y|0)==-1){c[k>>2]=0;z=1;A=0;B=0;break}else{z=(u|0)==0;A=u;B=u;break}}else{z=1;A=0;B=u}}while(0);C=c[h>>2]|0;if(!((x^z)&(n|0)>0)){break}f=c[C+12>>2]|0;if((f|0)==(c[C+16>>2]|0)){D=Ed[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{D=c[f>>2]|0}if(!(Cd[c[(c[b>>2]|0)+12>>2]&63](e,2048,D)|0)){p=v;o=63;break}f=((Cd[c[(c[l>>2]|0)+52>>2]&63](e,D,0)|0)<<24>>24)+(v*10|0)|0;m=c[h>>2]|0;j=m+12|0;a=c[j>>2]|0;if((a|0)==(c[m+16>>2]|0)){Ed[c[(c[m>>2]|0)+40>>2]&255](m)|0;r=f;s=n;t=A;u=B;continue}else{c[j>>2]=a+4;r=f;s=n;t=A;u=B;continue}}if((o|0)==63){i=g;return p|0}do{if((C|0)!=0){u=c[C+12>>2]|0;if((u|0)==(c[C+16>>2]|0)){E=Ed[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{E=c[u>>2]|0}if((E|0)==-1){c[h>>2]=0;F=1;break}else{F=(c[h>>2]|0)==0;break}}else{F=1}}while(0);do{if((B|0)!=0){h=c[B+12>>2]|0;if((h|0)==(c[B+16>>2]|0)){G=Ed[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{G=c[h>>2]|0}if((G|0)==-1){c[k>>2]=0;o=60;break}if(F){p=v;i=g;return p|0}}else{o=60}}while(0);if((o|0)==60?!F:0){p=v;i=g;return p|0}c[d>>2]=c[d>>2]|2;p=v;i=g;return p|0}function ws(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=b;g=d;h=a[f]|0;if((h&1)==0){i=10;j=h;k=(h&255)>>>1}else{h=c[b>>2]|0;i=(h&-2)-1|0;j=h&255;k=c[b+4>>2]|0}h=e-g|0;if((e|0)==(d|0)){return b|0}if((i-k|0)>>>0<h>>>0){Rk(b,i,k+h-i|0,k,k,0,0);l=a[f]|0}else{l=j}if((l&1)==0){m=b+1|0}else{m=c[b+8>>2]|0}l=e+(k-g)|0;g=d;d=m+k|0;while(1){a[d]=a[g]|0;g=g+1|0;if((g|0)==(e|0)){break}else{d=d+1|0}}a[m+l|0]=0;l=k+h|0;if((a[f]&1)==0){a[f]=l<<1;return b|0}else{c[b+4>>2]=l;return b|0}return 0}function xs(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=b;g=d;h=a[f]|0;if((h&1)==0){i=1;j=h;k=(h&255)>>>1}else{h=c[b>>2]|0;i=(h&-2)-1|0;j=h&255;k=c[b+4>>2]|0}h=e-g>>2;if((h|0)==0){return b|0}if((i-k|0)>>>0<h>>>0){_k(b,i,k+h-i|0,k,k,0,0);l=a[f]|0}else{l=j}if((l&1)==0){m=b+4|0}else{m=c[b+8>>2]|0}l=m+(k<<2)|0;if((d|0)==(e|0)){n=l}else{j=k+((e-4-g|0)>>>2)+1|0;g=d;d=l;while(1){c[d>>2]=c[g>>2];g=g+4|0;if((g|0)==(e|0)){break}else{d=d+4|0}}n=m+(j<<2)|0}c[n>>2]=0;n=k+h|0;if((a[f]&1)==0){a[f]=n<<1;return b|0}else{c[b+4>>2]=n;return b|0}return 0}function ys(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=b+8|0;f=b+4|0;g=c[f>>2]|0;h=c[e>>2]|0;i=g;if(!(h-i>>2>>>0<d>>>0)){j=d;k=g;do{if((k|0)==0){l=0}else{c[k>>2]=0;l=c[f>>2]|0}k=l+4|0;c[f>>2]=k;j=j-1|0}while((j|0)!=0);return}j=b+16|0;k=b|0;l=c[k>>2]|0;g=i-l>>2;i=g+d|0;if(i>>>0>1073741823>>>0){Ep(b)}m=h-l|0;if(m>>2>>>0<536870911>>>0){l=m>>1;m=l>>>0<i>>>0?i:l;if((m|0)!=0){l=b+128|0;if((a[l]|0)==0&m>>>0<29>>>0){a[l]=1;n=j;o=m}else{p=m;q=11}}else{n=0;o=0}}else{p=1073741823;q=11}if((q|0)==11){n=Lt(p<<2)|0;o=p}p=d;d=n+(g<<2)|0;do{if((d|0)==0){r=0}else{c[d>>2]=0;r=d}d=r+4|0;p=p-1|0}while((p|0)!=0);p=c[k>>2]|0;r=(c[f>>2]|0)-p|0;q=n+(g-(r>>2)<<2)|0;g=p;du(q|0,g|0,r)|0;c[k>>2]=q;c[f>>2]=d;c[e>>2]=n+(o<<2);if((p|0)==0){return}if((j|0)==(p|0)){a[b+128|0]=0;return}else{Nt(g);return}}function zs(d,f,g,h,i,j,k,l){d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;c[g>>2]=d;c[j>>2]=h;do{if((l&2|0)!=0){if((i-h|0)<3){m=1;return m|0}else{c[j>>2]=h+1;a[h]=-17;d=c[j>>2]|0;c[j>>2]=d+1;a[d]=-69;d=c[j>>2]|0;c[j>>2]=d+1;a[d]=-65;break}}}while(0);h=f;l=c[g>>2]|0;if(!(l>>>0<f>>>0)){m=0;return m|0}d=i;i=l;a:while(1){l=b[i>>1]|0;n=l&65535;if(n>>>0>k>>>0){m=2;o=26;break}do{if((l&65535)>>>0<128>>>0){p=c[j>>2]|0;if((d-p|0)<1){m=1;o=26;break a}c[j>>2]=p+1;a[p]=l}else{if((l&65535)>>>0<2048>>>0){p=c[j>>2]|0;if((d-p|0)<2){m=1;o=26;break a}c[j>>2]=p+1;a[p]=n>>>6|192;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n&63|128;break}if((l&65535)>>>0<55296>>>0){p=c[j>>2]|0;if((d-p|0)<3){m=1;o=26;break a}c[j>>2]=p+1;a[p]=n>>>12|224;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n>>>6&63|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n&63|128;break}if(!((l&65535)>>>0<56320>>>0)){if((l&65535)>>>0<57344>>>0){m=2;o=26;break a}p=c[j>>2]|0;if((d-p|0)<3){m=1;o=26;break a}c[j>>2]=p+1;a[p]=n>>>12|224;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n>>>6&63|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n&63|128;break}if((h-i|0)<4){m=1;o=26;break a}p=i+2|0;q=e[p>>1]|0;if((q&64512|0)!=56320){m=2;o=26;break a}if((d-(c[j>>2]|0)|0)<4){m=1;o=26;break a}r=n&960;if(((r<<10)+65536|n<<10&64512|q&1023)>>>0>k>>>0){m=2;o=26;break a}c[g>>2]=p;p=(r>>>6)+1|0;r=c[j>>2]|0;c[j>>2]=r+1;a[r]=p>>>2|240;r=c[j>>2]|0;c[j>>2]=r+1;a[r]=n>>>2&15|p<<4&48|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n<<4&48|q>>>6&15|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=q&63|128}}while(0);n=(c[g>>2]|0)+2|0;c[g>>2]=n;if(n>>>0<f>>>0){i=n}else{m=0;o=26;break}}if((o|0)==26){return m|0}return 0}function As(e,f,g,h,i,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;c[g>>2]=e;c[j>>2]=h;h=c[g>>2]|0;if(((((l&4|0)!=0?(f-h|0)>2:0)?(a[h]|0)==-17:0)?(a[h+1|0]|0)==-69:0)?(a[h+2|0]|0)==-65:0){l=h+3|0;c[g>>2]=l;m=l}else{m=h}a:do{if(m>>>0<f>>>0){h=f;l=i;e=m;n=c[j>>2]|0;b:while(1){if(!(n>>>0<i>>>0)){o=e;break a}p=a[e]|0;q=p&255;if(q>>>0>k>>>0){r=2;s=41;break}do{if(p<<24>>24>-1){b[n>>1]=p&255;c[g>>2]=e+1}else{if((p&255)>>>0<194>>>0){r=2;s=41;break b}if((p&255)>>>0<224>>>0){if((h-e|0)<2){r=1;s=41;break b}t=d[e+1|0]|0;if((t&192|0)!=128){r=2;s=41;break b}u=t&63|q<<6&1984;if(u>>>0>k>>>0){r=2;s=41;break b}b[n>>1]=u;c[g>>2]=e+2;break}if((p&255)>>>0<240>>>0){if((h-e|0)<3){r=1;s=41;break b}u=a[e+1|0]|0;t=a[e+2|0]|0;if((q|0)==224){if(!((u&-32)<<24>>24==-96)){r=2;s=41;break b}}else if((q|0)==237){if(!((u&-32)<<24>>24==-128)){r=2;s=41;break b}}else{if(!((u&-64)<<24>>24==-128)){r=2;s=41;break b}}v=t&255;if((v&192|0)!=128){r=2;s=41;break b}t=(u&255)<<6&4032|q<<12|v&63;if((t&65535)>>>0>k>>>0){r=2;s=41;break b}b[n>>1]=t;c[g>>2]=e+3;break}if(!((p&255)>>>0<245>>>0)){r=2;s=41;break b}if((h-e|0)<4){r=1;s=41;break b}t=a[e+1|0]|0;v=a[e+2|0]|0;u=a[e+3|0]|0;if((q|0)==240){if(!((t+112&255)>>>0<48>>>0)){r=2;s=41;break b}}else if((q|0)==244){if(!((t&-16)<<24>>24==-128)){r=2;s=41;break b}}else{if(!((t&-64)<<24>>24==-128)){r=2;s=41;break b}}w=v&255;if((w&192|0)!=128){r=2;s=41;break b}v=u&255;if((v&192|0)!=128){r=2;s=41;break b}if((l-n|0)<4){r=1;s=41;break b}u=q&7;x=t&255;t=w<<6;y=v&63;if((x<<12&258048|u<<18|t&4032|y)>>>0>k>>>0){r=2;s=41;break b}b[n>>1]=x<<2&60|w>>>4&3|((x>>>4&3|u<<2)<<6)+16320|55296;u=n+2|0;c[j>>2]=u;b[u>>1]=y|t&960|56320;c[g>>2]=(c[g>>2]|0)+4}}while(0);q=(c[j>>2]|0)+2|0;c[j>>2]=q;p=c[g>>2]|0;if(p>>>0<f>>>0){e=p;n=q}else{o=p;break a}}if((s|0)==41){return r|0}}else{o=m}}while(0);r=o>>>0<f>>>0|0;return r|0}function Bs(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;if((((g&4|0)!=0?(c-b|0)>2:0)?(a[b]|0)==-17:0)?(a[b+1|0]|0)==-69:0){h=(a[b+2|0]|0)==-65?b+3|0:b}else{h=b}a:do{if(h>>>0<c>>>0&(e|0)!=0){g=c;i=0;j=h;b:while(1){k=a[j]|0;l=k&255;if(l>>>0>f>>>0){m=j;break a}do{if(k<<24>>24>-1){n=j+1|0;o=i}else{if((k&255)>>>0<194>>>0){m=j;break a}if((k&255)>>>0<224>>>0){if((g-j|0)<2){m=j;break a}p=d[j+1|0]|0;if((p&192|0)!=128){m=j;break a}if((p&63|l<<6&1984)>>>0>f>>>0){m=j;break a}n=j+2|0;o=i;break}if((k&255)>>>0<240>>>0){q=j;if((g-q|0)<3){m=j;break a}p=a[j+1|0]|0;r=a[j+2|0]|0;if((l|0)==237){if(!((p&-32)<<24>>24==-128)){s=23;break b}}else if((l|0)==224){if(!((p&-32)<<24>>24==-96)){s=21;break b}}else{if(!((p&-64)<<24>>24==-128)){s=25;break b}}t=r&255;if((t&192|0)!=128){m=j;break a}if(((p&255)<<6&4032|l<<12&61440|t&63)>>>0>f>>>0){m=j;break a}n=j+3|0;o=i;break}if(!((k&255)>>>0<245>>>0)){m=j;break a}u=j;if((g-u|0)<4|(e-i|0)>>>0<2>>>0){m=j;break a}t=a[j+1|0]|0;p=a[j+2|0]|0;r=a[j+3|0]|0;if((l|0)==240){if(!((t+112&255)>>>0<48>>>0)){s=33;break b}}else if((l|0)==244){if(!((t&-16)<<24>>24==-128)){s=35;break b}}else{if(!((t&-64)<<24>>24==-128)){s=37;break b}}v=p&255;if((v&192|0)!=128){m=j;break a}p=r&255;if((p&192|0)!=128){m=j;break a}if(((t&255)<<12&258048|l<<18&1835008|v<<6&4032|p&63)>>>0>f>>>0){m=j;break a}n=j+4|0;o=i+1|0}}while(0);l=o+1|0;if(n>>>0<c>>>0&l>>>0<e>>>0){i=l;j=n}else{m=n;break a}}if((s|0)==21){w=q-b|0;return w|0}else if((s|0)==23){w=q-b|0;return w|0}else if((s|0)==25){w=q-b|0;return w|0}else if((s|0)==33){w=u-b|0;return w|0}else if((s|0)==35){w=u-b|0;return w|0}else if((s|0)==37){w=u-b|0;return w|0}}else{m=h}}while(0);w=m-b|0;return w|0}function Cs(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0;c[e>>2]=b;c[h>>2]=f;do{if((j&2|0)!=0){if((g-f|0)<3){k=1;return k|0}else{c[h>>2]=f+1;a[f]=-17;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-69;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-65;break}}}while(0);f=c[e>>2]|0;if(!(f>>>0<d>>>0)){k=0;return k|0}j=g;g=f;a:while(1){f=c[g>>2]|0;if((f&-2048|0)==55296|f>>>0>i>>>0){k=2;l=19;break}do{if(!(f>>>0<128>>>0)){if(f>>>0<2048>>>0){b=c[h>>2]|0;if((j-b|0)<2){k=1;l=19;break a}c[h>>2]=b+1;a[b]=f>>>6|192;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f&63|128;break}b=c[h>>2]|0;m=j-b|0;if(f>>>0<65536>>>0){if((m|0)<3){k=1;l=19;break a}c[h>>2]=b+1;a[b]=f>>>12|224;n=c[h>>2]|0;c[h>>2]=n+1;a[n]=f>>>6&63|128;n=c[h>>2]|0;c[h>>2]=n+1;a[n]=f&63|128;break}else{if((m|0)<4){k=1;l=19;break a}c[h>>2]=b+1;a[b]=f>>>18|240;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f>>>12&63|128;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f>>>6&63|128;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f&63|128;break}}else{b=c[h>>2]|0;if((j-b|0)<1){k=1;l=19;break a}c[h>>2]=b+1;a[b]=f}}while(0);f=(c[e>>2]|0)+4|0;c[e>>2]=f;if(f>>>0<d>>>0){g=f}else{k=0;l=19;break}}if((l|0)==19){return k|0}return 0}function Ds(b,e,f,g,h,i,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;c[f>>2]=b;c[i>>2]=g;g=c[f>>2]|0;if(((((k&4|0)!=0?(e-g|0)>2:0)?(a[g]|0)==-17:0)?(a[g+1|0]|0)==-69:0)?(a[g+2|0]|0)==-65:0){k=g+3|0;c[f>>2]=k;l=k}else{l=g}a:do{if(l>>>0<e>>>0){g=e;k=l;b=c[i>>2]|0;b:while(1){if(!(b>>>0<h>>>0)){m=k;break a}n=a[k]|0;o=n&255;do{if(n<<24>>24>-1){if(o>>>0>j>>>0){p=2;q=40;break b}c[b>>2]=o;c[f>>2]=k+1}else{if((n&255)>>>0<194>>>0){p=2;q=40;break b}if((n&255)>>>0<224>>>0){if((g-k|0)<2){p=1;q=40;break b}r=d[k+1|0]|0;if((r&192|0)!=128){p=2;q=40;break b}s=r&63|o<<6&1984;if(s>>>0>j>>>0){p=2;q=40;break b}c[b>>2]=s;c[f>>2]=k+2;break}if((n&255)>>>0<240>>>0){if((g-k|0)<3){p=1;q=40;break b}s=a[k+1|0]|0;r=a[k+2|0]|0;if((o|0)==237){if(!((s&-32)<<24>>24==-128)){p=2;q=40;break b}}else if((o|0)==224){if(!((s&-32)<<24>>24==-96)){p=2;q=40;break b}}else{if(!((s&-64)<<24>>24==-128)){p=2;q=40;break b}}t=r&255;if((t&192|0)!=128){p=2;q=40;break b}r=(s&255)<<6&4032|o<<12&61440|t&63;if(r>>>0>j>>>0){p=2;q=40;break b}c[b>>2]=r;c[f>>2]=k+3;break}if(!((n&255)>>>0<245>>>0)){p=2;q=40;break b}if((g-k|0)<4){p=1;q=40;break b}r=a[k+1|0]|0;t=a[k+2|0]|0;s=a[k+3|0]|0;if((o|0)==240){if(!((r+112&255)>>>0<48>>>0)){p=2;q=40;break b}}else if((o|0)==244){if(!((r&-16)<<24>>24==-128)){p=2;q=40;break b}}else{if(!((r&-64)<<24>>24==-128)){p=2;q=40;break b}}u=t&255;if((u&192|0)!=128){p=2;q=40;break b}t=s&255;if((t&192|0)!=128){p=2;q=40;break b}s=(r&255)<<12&258048|o<<18&1835008|u<<6&4032|t&63;if(s>>>0>j>>>0){p=2;q=40;break b}c[b>>2]=s;c[f>>2]=k+4}}while(0);o=(c[i>>2]|0)+4|0;c[i>>2]=o;n=c[f>>2]|0;if(n>>>0<e>>>0){k=n;b=o}else{m=n;break a}}if((q|0)==40){return p|0}}else{m=l}}while(0);p=m>>>0<e>>>0|0;return p|0}function Es(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;if((((g&4|0)!=0?(c-b|0)>2:0)?(a[b]|0)==-17:0)?(a[b+1|0]|0)==-69:0){h=(a[b+2|0]|0)==-65?b+3|0:b}else{h=b}a:do{if(h>>>0<c>>>0&(e|0)!=0){g=c;i=0;j=h;b:while(1){k=a[j]|0;l=k&255;do{if(k<<24>>24>-1){if(l>>>0>f>>>0){m=j;break a}n=j+1|0}else{if((k&255)>>>0<194>>>0){m=j;break a}if((k&255)>>>0<224>>>0){if((g-j|0)<2){m=j;break a}o=d[j+1|0]|0;if((o&192|0)!=128){m=j;break a}if((o&63|l<<6&1984)>>>0>f>>>0){m=j;break a}n=j+2|0;break}if((k&255)>>>0<240>>>0){p=j;if((g-p|0)<3){m=j;break a}o=a[j+1|0]|0;q=a[j+2|0]|0;if((l|0)==224){if(!((o&-32)<<24>>24==-96)){r=21;break b}}else if((l|0)==237){if(!((o&-32)<<24>>24==-128)){r=23;break b}}else{if(!((o&-64)<<24>>24==-128)){r=25;break b}}s=q&255;if((s&192|0)!=128){m=j;break a}if(((o&255)<<6&4032|l<<12&61440|s&63)>>>0>f>>>0){m=j;break a}n=j+3|0;break}if(!((k&255)>>>0<245>>>0)){m=j;break a}t=j;if((g-t|0)<4){m=j;break a}s=a[j+1|0]|0;o=a[j+2|0]|0;q=a[j+3|0]|0;if((l|0)==240){if(!((s+112&255)>>>0<48>>>0)){r=33;break b}}else if((l|0)==244){if(!((s&-16)<<24>>24==-128)){r=35;break b}}else{if(!((s&-64)<<24>>24==-128)){r=37;break b}}u=o&255;if((u&192|0)!=128){m=j;break a}o=q&255;if((o&192|0)!=128){m=j;break a}if(((s&255)<<12&258048|l<<18&1835008|u<<6&4032|o&63)>>>0>f>>>0){m=j;break a}n=j+4|0}}while(0);l=i+1|0;if(n>>>0<c>>>0&l>>>0<e>>>0){i=l;j=n}else{m=n;break a}}if((r|0)==21){v=p-b|0;return v|0}else if((r|0)==23){v=p-b|0;return v|0}else if((r|0)==25){v=p-b|0;return v|0}else if((r|0)==33){v=t-b|0;return v|0}else if((r|0)==35){v=t-b|0;return v|0}else if((r|0)==37){v=t-b|0;return v|0}}else{m=h}}while(0);v=m-b|0;return v|0}function Fs(a){a=a|0;Ik(23956);Ik(23944);Ik(23932);Ik(23920);Ik(23908);Ik(23896);Ik(23884);Ik(23872);Ik(23860);Ik(23848);Ik(23836);Ik(23824);Ik(23812);Ik(23800);return}function Gs(a){a=a|0;Vk(23212);Vk(23200);Vk(23188);Vk(23176);Vk(23164);Vk(23152);Vk(23140);Vk(23128);Vk(23116);Vk(23104);Vk(23092);Vk(23080);Vk(23068);Vk(23056);return}function Hs(a){a=a|0;Ik(23788);Ik(23776);Ik(23764);Ik(23752);Ik(23740);Ik(23728);Ik(23716);Ik(23704);Ik(23692);Ik(23680);Ik(23668);Ik(23656);Ik(23644);Ik(23632);Ik(23620);Ik(23608);Ik(23596);Ik(23584);Ik(23572);Ik(23560);Ik(23548);Ik(23536);Ik(23524);Ik(23512);return}function Is(a){a=a|0;Vk(23044);Vk(23032);Vk(23020);Vk(23008);Vk(22996);Vk(22984);Vk(22972);Vk(22960);Vk(22948);Vk(22936);Vk(22924);Vk(22912);Vk(22900);Vk(22888);Vk(22876);Vk(22864);Vk(22852);Vk(22840);Vk(22828);Vk(22816);Vk(22804);Vk(22792);Vk(22780);Vk(22768);return}function Js(a){a=a|0;Ik(24244);Ik(24232);Ik(24220);Ik(24208);Ik(24196);Ik(24184);Ik(24172);Ik(24160);Ik(24148);Ik(24136);Ik(24124);Ik(24112);Ik(24100);Ik(24088);Ik(24076);Ik(24064);Ik(24052);Ik(24040);Ik(24028);Ik(24016);Ik(24004);Ik(23992);Ik(23980);Ik(23968);return}function Ks(a){a=a|0;Vk(23500);Vk(23488);Vk(23476);Vk(23464);Vk(23452);Vk(23440);Vk(23428);Vk(23416);Vk(23404);Vk(23392);Vk(23380);Vk(23368);Vk(23356);Vk(23344);Vk(23332);Vk(23320);Vk(23308);Vk(23296);Vk(23284);Vk(23272);Vk(23260);Vk(23248);Vk(23236);Vk(23224);return}function Ls(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;if((a[k]|0)!=0){l=b+48|0;m=c[l>>2]|0;if(!d){n=m;i=e;return n|0}c[l>>2]=-1;a[k]=0;n=m;i=e;return n|0}m=c[b+44>>2]|0;k=(m|0)>1?m:1;a:do{if((k|0)>0){m=b+32|0;l=0;while(1){o=mb(c[m>>2]|0)|0;if((o|0)==-1){n=-1;break}a[f+l|0]=o;l=l+1|0;if((l|0)>=(k|0)){break a}}i=e;return n|0}}while(0);b:do{if((a[b+53|0]|0)==0){l=b+40|0;m=b+36|0;o=f|0;p=g+4|0;q=b+32|0;r=k;while(1){s=c[l>>2]|0;t=s;u=c[t>>2]|0;v=c[t+4>>2]|0;t=c[m>>2]|0;w=f+r|0;x=Id[c[(c[t>>2]|0)+16>>2]&31](t,s,o,w,h,g,p,j)|0;if((x|0)==2){n=-1;y=22;break}else if((x|0)==3){y=14;break}else if((x|0)!=1){z=r;break b}x=c[l>>2]|0;c[x>>2]=u;c[x+4>>2]=v;if((r|0)==8){n=-1;y=22;break}v=mb(c[q>>2]|0)|0;if((v|0)==-1){n=-1;y=22;break}a[w]=v;r=r+1|0}if((y|0)==14){c[g>>2]=a[o]|0;z=r;break}else if((y|0)==22){i=e;return n|0}}else{c[g>>2]=a[f|0]|0;z=k}}while(0);if(d){d=c[g>>2]|0;c[b+48>>2]=d;n=d;i=e;return n|0}d=b+32|0;b=z;while(1){if((b|0)<=0){break}z=b-1|0;if((Hc(a[f+z|0]|0,c[d>>2]|0)|0)==-1){n=-1;y=22;break}else{b=z}}if((y|0)==22){i=e;return n|0}n=c[g>>2]|0;i=e;return n|0}function Ms(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;i=i+32|0;g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;l=b+52|0;if((a[l]|0)!=0){m=b+48|0;n=c[m>>2]|0;if(!e){o=n;i=f;return o|0}c[m>>2]=-1;a[l]=0;o=n;i=f;return o|0}n=c[b+44>>2]|0;l=(n|0)>1?n:1;a:do{if((l|0)>0){n=b+32|0;m=0;while(1){p=mb(c[n>>2]|0)|0;if((p|0)==-1){o=-1;break}a[g+m|0]=p;m=m+1|0;if((m|0)>=(l|0)){break a}}i=f;return o|0}}while(0);b:do{if((a[b+53|0]|0)==0){m=b+40|0;n=b+36|0;p=g|0;q=h+1|0;r=b+32|0;s=l;while(1){t=c[m>>2]|0;u=t;v=c[u>>2]|0;w=c[u+4>>2]|0;u=c[n>>2]|0;x=g+s|0;y=Id[c[(c[u>>2]|0)+16>>2]&31](u,t,p,x,j,h,q,k)|0;if((y|0)==2){o=-1;z=23;break}else if((y|0)==3){z=14;break}else if((y|0)!=1){A=s;break b}y=c[m>>2]|0;c[y>>2]=v;c[y+4>>2]=w;if((s|0)==8){o=-1;z=23;break}w=mb(c[r>>2]|0)|0;if((w|0)==-1){o=-1;z=23;break}a[x]=w;s=s+1|0}if((z|0)==14){a[h]=a[p]|0;A=s;break}else if((z|0)==23){i=f;return o|0}}else{a[h]=a[g|0]|0;A=l}}while(0);do{if(!e){l=b+32|0;k=A;while(1){if((k|0)<=0){z=21;break}j=k-1|0;if((Hc(d[g+j|0]|0,c[l>>2]|0)|0)==-1){o=-1;z=23;break}else{k=j}}if((z|0)==21){B=a[h]|0;break}else if((z|0)==23){i=f;return o|0}}else{k=a[h]|0;c[b+48>>2]=k&255;B=k}}while(0);o=B&255;i=f;return o|0}function Ns(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}k=Bc()|0;l=c[k>>2]|0;c[k>>2]=0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}m=nc(b|0,h|0,f|0,c[6072]|0)|0;f=L;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}do{if((b|0)==34){c[e>>2]=4;d=0;if((f|0)>(d|0)|(f|0)==(d|0)&m>>>0>0>>>0){j=2147483647;i=g;return j|0}}else{d=-1;if((f|0)<(d|0)|(f|0)==(d|0)&m>>>0<-2147483648>>>0){c[e>>2]=4;break}d=0;if((f|0)>(d|0)|(f|0)==(d|0)&m>>>0>2147483647>>>0){c[e>>2]=4;j=2147483647;i=g;return j|0}else{j=m;i=g;return j|0}}}while(0);j=-2147483648;i=g;return j|0}function Os(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;k=0;i=g;return(L=j,k)|0}l=Bc()|0;m=c[l>>2]|0;c[l>>2]=0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}n=nc(b|0,h|0,f|0,c[6072]|0)|0;f=L;b=c[l>>2]|0;if((b|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;i=g;return(L=j,k)|0}if((b|0)==34){c[e>>2]=4;e=0;b=(f|0)>(e|0)|(f|0)==(e|0)&n>>>0>0>>>0;i=g;return(L=b?2147483647:-2147483648,b?-1:0)|0}else{j=f;k=n;i=g;return(L=j,k)|0}return 0}function Ps(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=Bc()|0;l=c[k>>2]|0;c[k>>2]=0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}m=ic(b|0,h|0,f|0,c[6072]|0)|0;f=L;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>65535>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m&65535;i=g;return j|0}return 0}function Qs(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=Bc()|0;l=c[k>>2]|0;c[k>>2]=0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}m=ic(b|0,h|0,f|0,c[6072]|0)|0;f=L;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>-1>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function Rs(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=Bc()|0;l=c[k>>2]|0;c[k>>2]=0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}m=ic(b|0,h|0,f|0,c[6072]|0)|0;f=L;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>-1>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function Ss(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+8|0;h=g|0;do{if((b|0)!=(d|0)){if((a[b]|0)==45){c[e>>2]=4;j=0;k=0;break}l=Bc()|0;m=c[l>>2]|0;c[l>>2]=0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}n=ic(b|0,h|0,f|0,c[6072]|0)|0;o=c[l>>2]|0;if((o|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;break}if((o|0)==34){c[e>>2]=4;j=-1;k=-1}else{j=L;k=n}}else{c[e>>2]=4;j=0;k=0}}while(0);i=g;return(L=j,k)|0}function Ts(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=Bc()|0;k=c[j>>2]|0;c[j>>2]=0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}l=+_t(b,g,c[6072]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)==34){c[e>>2]=4}h=l;i=f;return+h}function Us(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=Bc()|0;k=c[j>>2]|0;c[j>>2]=0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}l=+_t(b,g,c[6072]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=l;i=f;return+h}c[e>>2]=4;h=l;i=f;return+h}function Vs(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=Bc()|0;k=c[j>>2]|0;c[j>>2]=0;if((a[26952]|0)==0?(Lb(26952)|0)!=0:0){c[6072]=ab(2147483647,168,0)|0}l=+_t(b,g,c[6072]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=l;i=f;return+h}c[e>>2]=4;h=l;i=f;return+h}function Ws(a,b,c){a=a|0;b=b|0;c=c|0;return Xs(0,a,b,(c|0)!=0?c:22096)|0}function Xs(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;i=i+8|0;h=g|0;c[h>>2]=b;j=((f|0)==0?22088:f)|0;f=c[j>>2]|0;a:do{if((d|0)==0){if((f|0)==0){k=0;i=g;return k|0}}else{if((b|0)==0){l=h;c[h>>2]=l;m=l}else{m=b}if((e|0)==0){k=-2;i=g;return k|0}do{if((f|0)==0){l=a[d]|0;n=l&255;if(l<<24>>24>-1){c[m>>2]=n;k=l<<24>>24!=0|0;i=g;return k|0}else{l=n-194|0;if(l>>>0>50>>>0){break a}o=d+1|0;p=c[4392+(l<<2)>>2]|0;q=e-1|0;break}}else{o=d;p=f;q=e}}while(0);b:do{if((q|0)==0){r=p}else{l=a[o]|0;n=(l&255)>>>3;if((n-16|n+(p>>26))>>>0>7>>>0){break a}else{s=o;t=p;u=q;v=l}while(1){s=s+1|0;t=(v&255)-128|t<<6;u=u-1|0;if((t|0)>=0){break}if((u|0)==0){r=t;break b}v=a[s]|0;if(!((v&-64)<<24>>24==-128)){break a}}c[j>>2]=0;c[m>>2]=t;k=e-u|0;i=g;return k|0}}while(0);c[j>>2]=r;k=-2;i=g;return k|0}}while(0);c[j>>2]=0;c[(Bc()|0)>>2]=84;k=-1;i=g;return k|0}function Ys(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;g=i;i=i+1032|0;h=g+1024|0;j=c[b>>2]|0;c[h>>2]=j;k=(a|0)!=0;l=g|0;m=k?e:256;e=k?a:l;a:do{if((j|0)!=0&(m|0)!=0){a=m;n=0;o=e;p=d;q=j;while(1){r=p>>>2;s=r>>>0>=a>>>0;if(!(s|p>>>0>131>>>0)){t=a;u=n;v=o;w=p;x=q;y=7;break a}z=s?a:r;r=p-z|0;s=Zs(o,h,z,f)|0;if((s|0)==-1){A=-1;break a}if((o|0)==(l|0)){B=l;C=a}else{B=o+(s<<2)|0;C=a-s|0}z=s+n|0;s=c[h>>2]|0;if((s|0)!=0&(C|0)!=0){a=C;n=z;o=B;p=r;q=s}else{t=C;u=z;v=B;w=r;x=s;y=7;break}}}else{t=m;u=0;v=e;w=d;x=j;y=7}}while(0);b:do{if((y|0)==7){if((x|0)!=0&(t|0)!=0&(w|0)!=0){j=w;d=v;e=u;m=t;B=x;while(1){D=Xs(d,B,j,f)|0;if((D+2|0)>>>0<3>>>0){break}C=(c[h>>2]|0)+D|0;c[h>>2]=C;l=m-1|0;q=e+1|0;if((l|0)!=0&(j|0)!=(D|0)){j=j-D|0;d=d+4|0;e=q;m=l;B=C}else{A=q;break b}}if((D|0)==0){c[h>>2]=0;A=e;break}else if((D|0)==(-1|0)){A=-1;break}else{c[f>>2]=0;A=e;break}}else{A=u}}}while(0);if(!k){E=1024;F=0;i=g;return A|0}c[b>>2]=c[h>>2];E=1024;F=0;i=g;return A|0}function Zs(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0;h=c[e>>2]|0;if((g|0)!=0?(i=g|0,g=c[i>>2]|0,(g|0)!=0):0){if((b|0)==0){j=g;k=h;l=f;m=16}else{c[i>>2]=0;n=g;o=h;p=b;q=f;m=35}}else{if((b|0)==0){r=h;s=f;m=7}else{t=h;u=b;v=f;m=6}}a:while(1){if((m|0)==6){m=0;if((v|0)==0){w=f;m=52;break}else{x=v;y=u;z=t}while(1){h=a[z]|0;b:do{if(((h&255)-1|0)>>>0<127>>>0?(z&3|0)==0&x>>>0>3>>>0:0){g=z;i=y;A=x;do{B=c[g>>2]|0;if(((B-16843009|B)&-2139062144|0)!=0){C=g;D=i;E=A;F=B&255;break b}c[i>>2]=B&255;c[i+4>>2]=d[g+1|0]|0;c[i+8>>2]=d[g+2|0]|0;B=g;g=g+4|0;G=i;i=i+16|0;c[G+12>>2]=d[B+3|0]|0;A=A-4|0}while(A>>>0>3>>>0);C=g;D=i;E=A;F=a[g]|0}else{C=z;D=y;E=x;F=h}}while(0);H=F&255;if(!((H-1|0)>>>0<127>>>0)){break}c[D>>2]=H;h=E-1|0;if((h|0)==0){w=f;m=52;break a}else{x=h;y=D+4|0;z=C+1|0}}h=H-194|0;if(h>>>0>50>>>0){I=E;J=D;K=C;m=46;break}n=c[4392+(h<<2)>>2]|0;o=C+1|0;p=D;q=E;m=35;continue}else if((m|0)==7){m=0;h=a[r]|0;if(((h&255)-1|0)>>>0<127>>>0?(r&3|0)==0:0){B=c[r>>2]|0;G=B&255;if(((B-16843009|B)&-2139062144|0)==0){B=s;L=r;do{L=L+4|0;B=B-4|0;M=c[L>>2]|0}while(((M-16843009|M)&-2139062144|0)==0);N=L;O=B;P=M&255}else{N=r;O=s;P=G}}else{N=r;O=s;P=h}Q=P&255;if((Q-1|0)>>>0<127>>>0){r=N+1|0;s=O-1|0;m=7;continue}R=Q-194|0;if(R>>>0>50>>>0){I=O;J=b;K=N;m=46;break}j=c[4392+(R<<2)>>2]|0;k=N+1|0;l=O;m=16;continue}else if((m|0)==16){m=0;R=(d[k]|0)>>>3;if((R-16|R+(j>>26))>>>0>7>>>0){m=17;break}R=k+1|0;if((j&33554432|0)!=0){if(!((a[R]&-64)<<24>>24==-128)){m=20;break}Q=k+2|0;if((j&524288|0)==0){S=Q}else{if(!((a[Q]&-64)<<24>>24==-128)){m=23;break}S=k+3|0}}else{S=R}r=S;s=l-1|0;m=7;continue}else if((m|0)==35){m=0;R=d[o]|0;Q=R>>>3;if((Q-16|Q+(n>>26))>>>0>7>>>0){m=36;break}Q=o+1|0;T=R-128|n<<6;if((T|0)<0){R=d[Q]|0;if((R&192|0)!=128){m=39;break}U=o+2|0;V=R-128|T<<6;if((V|0)<0){R=d[U]|0;if((R&192|0)!=128){m=42;break}W=R-128|V<<6;X=o+3|0}else{W=V;X=U}}else{W=T;X=Q}c[p>>2]=W;t=X;u=p+4|0;v=q-1|0;m=6;continue}}if((m|0)==17){Y=j;Z=k-1|0;_=b;$=l;m=45}else if((m|0)==20){Y=j;Z=k-1|0;_=b;$=l;m=45}else if((m|0)==23){Y=j;Z=k-1|0;_=b;$=l;m=45}else if((m|0)==36){Y=n;Z=o-1|0;_=p;$=q;m=45}else if((m|0)==39){Y=T;Z=o-1|0;_=p;$=q;m=45}else if((m|0)==42){Y=V;Z=o-1|0;_=p;$=q;m=45}else if((m|0)==52){return w|0}if((m|0)==45){if((Y|0)==0){I=$;J=_;K=Z;m=46}else{aa=_;ba=Z}}if((m|0)==46){if((a[K]|0)==0){if((J|0)!=0){c[J>>2]=0;c[e>>2]=0}w=f-I|0;return w|0}else{aa=J;ba=K}}c[(Bc()|0)>>2]=84;if((aa|0)==0){w=-1;return w|0}c[e>>2]=ba;w=-1;return w|0}function _s(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g|0;c[h>>2]=b;if((e|0)==0){j=0;i=g;return j|0}do{if((f|0)!=0){if((b|0)==0){k=h;c[h>>2]=k;l=k}else{l=b}k=a[e]|0;m=k&255;if(k<<24>>24>-1){c[l>>2]=m;j=k<<24>>24!=0|0;i=g;return j|0}k=m-194|0;if(!(k>>>0>50>>>0)){m=e+1|0;n=c[4392+(k<<2)>>2]|0;if(f>>>0<4>>>0?(n&-2147483648>>>(((f*6|0)-6|0)>>>0)|0)!=0:0){break}k=d[m]|0;m=k>>>3;if(!((m-16|m+(n>>26))>>>0>7>>>0)){m=k-128|n<<6;if((m|0)>=0){c[l>>2]=m;j=2;i=g;return j|0}n=d[e+2|0]|0;if((n&192|0)==128){k=n-128|m<<6;if((k|0)>=0){c[l>>2]=k;j=3;i=g;return j|0}m=d[e+3|0]|0;if((m&192|0)==128){c[l>>2]=m-128|k<<6;j=4;i=g;return j|0}}}}}}while(0);c[(Bc()|0)>>2]=84;j=-1;i=g;return j|0}function $s(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((b|0)==0){f=1;return f|0}if(d>>>0<128>>>0){a[b]=d;f=1;return f|0}if(d>>>0<2048>>>0){a[b]=d>>>6|192;a[b+1|0]=d&63|128;f=2;return f|0}if(d>>>0<55296>>>0|(d&-8192|0)==57344){a[b]=d>>>12|224;a[b+1|0]=d>>>6&63|128;a[b+2|0]=d&63|128;f=3;return f|0}if((d-65536|0)>>>0<1048576>>>0){a[b]=d>>>18|240;a[b+1|0]=d>>>12&63|128;a[b+2|0]=d>>>6&63|128;a[b+3|0]=d&63|128;f=4;return f|0}else{c[(Bc()|0)>>2]=84;f=-1;return f|0}return 0}function at(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;f=i;i=i+264|0;g=f+256|0;h=f|0;j=c[b>>2]|0;c[g>>2]=j;k=(a|0)!=0;l=k?e:256;e=k?a:h;a:do{if((j|0)!=0&(l|0)!=0){a=l;m=0;n=e;o=d;p=j;while(1){q=o>>>0>=a>>>0;if(!(q|o>>>0>32>>>0)){r=a;s=m;t=n;u=o;v=p;w=7;break a}x=q?a:o;q=o-x|0;y=bt(n,g,x,0)|0;if((y|0)==-1){z=-1;break a}if((n|0)==(h|0)){A=h;B=a}else{A=n+y|0;B=a-y|0}x=y+m|0;y=c[g>>2]|0;if((y|0)!=0&(B|0)!=0){a=B;m=x;n=A;o=q;p=y}else{r=B;s=x;t=A;u=q;v=y;w=7;break}}}else{r=l;s=0;t=e;u=d;v=j;w=7}}while(0);b:do{if((w|0)==7){if((v|0)!=0&(r|0)!=0&(u|0)!=0){j=u;d=t;e=s;l=r;A=v;while(1){C=$s(d,c[A>>2]|0,0)|0;if((C+1|0)>>>0<2>>>0){break}B=(c[g>>2]|0)+4|0;c[g>>2]=B;h=j-1|0;p=e+1|0;if((l|0)!=(C|0)&(h|0)!=0){j=h;d=d+C|0;e=p;l=l-C|0;A=B}else{z=p;break b}}if((C|0)==0){c[g>>2]=0;z=e}else{z=-1}}else{z=s}}}while(0);if(!k){D=256;E=0;i=f;return z|0}c[b>>2]=c[g>>2];D=256;E=0;i=f;return z|0}function bt(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=i;i=i+8|0;g=f|0;if((b|0)==0){h=c[d>>2]|0;j=g|0;k=c[h>>2]|0;if((k|0)==0){l=0;i=f;return l|0}else{m=0;n=h;o=k}while(1){if(o>>>0>127>>>0){k=$s(j,o,0)|0;if((k|0)==-1){l=-1;p=26;break}else{q=k}}else{q=1}k=q+m|0;h=n+4|0;r=c[h>>2]|0;if((r|0)==0){l=k;p=26;break}else{m=k;n=h;o=r}}if((p|0)==26){i=f;return l|0}}a:do{if(e>>>0>3>>>0){o=e;n=b;m=c[d>>2]|0;while(1){q=c[m>>2]|0;if((q|0)==0){s=o;t=n;break a}if(q>>>0>127>>>0){j=$s(n,q,0)|0;if((j|0)==-1){l=-1;break}u=n+j|0;v=o-j|0;w=m}else{a[n]=q;u=n+1|0;v=o-1|0;w=c[d>>2]|0}q=w+4|0;c[d>>2]=q;if(v>>>0>3>>>0){o=v;n=u;m=q}else{s=v;t=u;break a}}i=f;return l|0}else{s=e;t=b}}while(0);b:do{if((s|0)!=0){b=g|0;u=s;v=t;w=c[d>>2]|0;while(1){m=c[w>>2]|0;if((m|0)==0){p=24;break}if(m>>>0>127>>>0){n=$s(b,m,0)|0;if((n|0)==-1){l=-1;p=26;break}if(u>>>0<n>>>0){p=20;break}$s(v,c[w>>2]|0,0)|0;x=v+n|0;y=u-n|0;z=w}else{a[v]=m;x=v+1|0;y=u-1|0;z=c[d>>2]|0}m=z+4|0;c[d>>2]=m;if((y|0)==0){A=0;break b}else{u=y;v=x;w=m}}if((p|0)==20){l=e-u|0;i=f;return l|0}else if((p|0)==24){a[v]=0;A=u;break}else if((p|0)==26){i=f;return l|0}}else{A=0}}while(0);c[d>>2]=0;l=e-A|0;i=f;return l|0}function ct(a){a=a|0;var b=0;b=a;while(1){if((c[b>>2]|0)==0){break}else{b=b+4|0}}return b-a>>2|0}function dt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((d|0)==0){return a|0}else{e=b;f=d;g=a}while(1){f=f-1|0;c[g>>2]=c[e>>2];if((f|0)==0){break}else{e=e+4|0;g=g+4|0}}return a|0}function et(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=(d|0)==0;if(a-b>>2>>>0<d>>>0){if(e){return a|0}else{f=d}do{f=f-1|0;c[a+(f<<2)>>2]=c[b+(f<<2)>>2]}while((f|0)!=0);return a|0}else{if(e){return a|0}else{g=b;h=d;i=a}while(1){h=h-1|0;c[i>>2]=c[g>>2];if((h|0)==0){break}else{g=g+4|0;i=i+4|0}}return a|0}return 0}function ft(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if((d|0)==0){return a|0}else{e=d;f=a}while(1){e=e-1|0;c[f>>2]=b;if((e|0)==0){break}else{f=f+4|0}}return a|0}function gt(a){a=a|0;return}function ht(a){a=a|0;c[a>>2]=5600;return}function it(a){a=a|0;Nt(a);return}function jt(a){a=a|0;return}function kt(a){a=a|0;return 1800}function lt(a){a=a|0;gt(a|0);return}function mt(a){a=a|0;return}function nt(a){a=a|0;return}function ot(a){a=a|0;gt(a|0);Nt(a);return}function pt(a){a=a|0;gt(a|0);Nt(a);return}function qt(a){a=a|0;gt(a|0);Nt(a);return}function rt(a){a=a|0;gt(a|0);Nt(a);return}function st(a){a=a|0;gt(a|0);Nt(a);return}function tt(a){a=a|0;gt(a|0);Nt(a);return}function ut(a,b,c){a=a|0;b=b|0;c=c|0;return(a|0)==(b|0)|0}function vt(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function wt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+56|0;f=e|0;if((a|0)==(b|0)){g=1;i=e;return g|0}if((b|0)==0){g=0;i=e;return g|0}h=Bt(b,20584,20568,0)|0;b=h;if((h|0)==0){g=0;i=e;return g|0}eu(f|0,0,56)|0;c[f>>2]=b;c[f+8>>2]=a;c[f+12>>2]=-1;c[f+48>>2]=1;Od[c[(c[h>>2]|0)+28>>2]&31](b,f,c[d>>2]|0,1);if((c[f+24>>2]|0)!=1){g=0;i=e;return g|0}c[d>>2]=c[f+16>>2];g=1;i=e;return g|0}function xt(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;if((c[d+8>>2]|0)!=(b|0)){return}b=d+16|0;g=c[b>>2]|0;if((g|0)==0){c[b>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((g|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}e=d+24|0;if((c[e>>2]|0)!=2){return}c[e>>2]=f;return}function yt(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;if((b|0)!=(c[d+8>>2]|0)){g=c[b+8>>2]|0;Od[c[(c[g>>2]|0)+28>>2]&31](g,d,e,f);return}g=d+16|0;b=c[g>>2]|0;if((b|0)==0){c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}e=d+24|0;if((c[e>>2]|0)!=2){return}c[e>>2]=f;return}function zt(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;if((b|0)==(c[d+8>>2]|0)){g=d+16|0;h=c[g>>2]|0;if((h|0)==0){c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((h|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}h=d+24|0;if((c[h>>2]|0)!=2){return}c[h>>2]=f;return}h=c[b+12>>2]|0;g=b+16+(h<<3)|0;i=c[b+20>>2]|0;j=i>>8;if((i&1|0)==0){k=j}else{k=c[(c[e>>2]|0)+j>>2]|0}j=c[b+16>>2]|0;Od[c[(c[j>>2]|0)+28>>2]&31](j,d,e+k|0,(i&2|0)!=0?f:2);if((h|0)<=1){return}h=d+54|0;i=e;k=b+24|0;while(1){b=c[k+4>>2]|0;j=b>>8;if((b&1|0)==0){l=j}else{l=c[(c[i>>2]|0)+j>>2]|0}j=c[k>>2]|0;Od[c[(c[j>>2]|0)+28>>2]&31](j,d,e+l|0,(b&2|0)!=0?f:2);if((a[h]|0)!=0){m=16;break}b=k+8|0;if(b>>>0<g>>>0){k=b}else{m=16;break}}if((m|0)==16){return}}function At(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+56|0;f=e|0;c[d>>2]=c[c[d>>2]>>2];g=b|0;if(!((a|0)==(g|0)|(g|0)==20616)){if(((b|0)!=0?(g=Bt(b,20584,20536,0)|0,(g|0)!=0):0)?(c[g+8>>2]&~c[a+8>>2]|0)==0:0){b=c[a+12>>2]|0;a=g+12|0;if(!((b|0)==(c[a>>2]|0)|(b|0)==18424)){if(((((b|0)!=0?(g=Bt(b,20584,20568,0)|0,b=g,(g|0)!=0):0)?(g=c[a>>2]|0,(g|0)!=0):0)?(a=Bt(g,20584,20568,0)|0,g=a,(a|0)!=0):0)?(eu(f|0,0,56)|0,c[f>>2]=g,c[f+8>>2]=b,c[f+12>>2]=-1,c[f+48>>2]=1,Od[c[(c[a>>2]|0)+28>>2]&31](g,f,c[d>>2]|0,1),(c[f+24>>2]|0)==1):0){c[d>>2]=c[f+16>>2];h=1}else{h=0}}else{h=1}}else{h=0}}else{h=1}i=e;return h|0}function Bt(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+56|0;g=f|0;h=c[a>>2]|0;j=a+(c[h-8>>2]|0)|0;k=c[h-4>>2]|0;h=k;c[g>>2]=d;c[g+4>>2]=a;c[g+8>>2]=b;c[g+12>>2]=e;e=g+16|0;b=g+24|0;a=g+28|0;l=g+32|0;m=g+40|0;eu(e|0,0,39)|0;if((k|0)==(d|0)){c[g+48>>2]=1;Ld[c[(c[k>>2]|0)+20>>2]&63](h,g,j,j,1,0);n=(c[b>>2]|0)==1?j:0;o=56;p=0;i=f;return n|0}wd[c[(c[k>>2]|0)+24>>2]&7](h,g,j,1,0);j=c[g+36>>2]|0;if((j|0)==0){n=(c[m>>2]|0)==1&(c[a>>2]|0)==1&(c[l>>2]|0)==1?c[g+20>>2]|0:0;o=56;p=0;i=f;return n|0}else if((j|0)==1){if((c[b>>2]|0)!=1?!((c[m>>2]|0)==0&(c[a>>2]|0)==1&(c[l>>2]|0)==1):0){n=0;o=56;p=0;i=f;return n|0}n=c[e>>2]|0;o=56;p=0;i=f;return n|0}else{n=0;o=56;p=0;i=f;return n|0}return 0}function Ct(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;h=b|0;if((h|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){return}i=d+28|0;if((c[i>>2]|0)==1){return}c[i>>2]=f;return}if((h|0)==(c[d>>2]|0)){if((c[d+16>>2]|0)!=(e|0)?(h=d+20|0,(c[h>>2]|0)!=(e|0)):0){c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4){return}j=c[b+12>>2]|0;k=b+16+(j<<3)|0;a:do{if((j|0)>0){l=d+52|0;m=d+53|0;n=d+54|0;o=b+8|0;p=d+24|0;q=e;r=0;s=b+16|0;t=0;b:while(1){a[l]=0;a[m]=0;u=c[s+4>>2]|0;v=u>>8;if((u&1|0)==0){w=v}else{w=c[(c[q>>2]|0)+v>>2]|0}v=c[s>>2]|0;Ld[c[(c[v>>2]|0)+20>>2]&63](v,d,e,e+w|0,2-(u>>>1&1)|0,g);if((a[n]|0)!=0){x=t;y=r;break}do{if((a[m]|0)!=0){if((a[l]|0)==0){if((c[o>>2]&1|0)==0){x=1;y=r;break b}else{z=1;A=r;break}}if((c[p>>2]|0)==1){B=27;break a}if((c[o>>2]&2|0)==0){B=27;break a}else{z=1;A=1}}else{z=t;A=r}}while(0);u=s+8|0;if(u>>>0<k>>>0){r=A;s=u;t=z}else{x=z;y=A;break}}if(y){C=x;B=26}else{D=x;B=23}}else{D=0;B=23}}while(0);if((B|0)==23){c[h>>2]=e;h=d+40|0;c[h>>2]=(c[h>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54|0]=1;if(D){B=27}else{B=28}}else{C=D;B=26}}if((B|0)==26){if(C){B=27}else{B=28}}if((B|0)==27){c[i>>2]=3;return}else if((B|0)==28){c[i>>2]=4;return}}if((f|0)!=1){return}c[d+32>>2]=1;return}i=c[b+12>>2]|0;C=b+16+(i<<3)|0;D=c[b+20>>2]|0;h=D>>8;if((D&1|0)==0){E=h}else{E=c[(c[e>>2]|0)+h>>2]|0}h=c[b+16>>2]|0;wd[c[(c[h>>2]|0)+24>>2]&7](h,d,e+E|0,(D&2|0)!=0?f:2,g);D=b+24|0;if((i|0)<=1){return}i=c[b+8>>2]|0;if((i&2|0)==0?(b=d+36|0,(c[b>>2]|0)!=1):0){if((i&1|0)==0){i=d+54|0;E=e;h=D;while(1){if((a[i]|0)!=0){B=53;break}if((c[b>>2]|0)==1){B=53;break}x=c[h+4>>2]|0;y=x>>8;if((x&1|0)==0){F=y}else{F=c[(c[E>>2]|0)+y>>2]|0}y=c[h>>2]|0;wd[c[(c[y>>2]|0)+24>>2]&7](y,d,e+F|0,(x&2|0)!=0?f:2,g);x=h+8|0;if(x>>>0<C>>>0){h=x}else{B=53;break}}if((B|0)==53){return}}h=d+24|0;F=d+54|0;E=e;i=D;while(1){if((a[F]|0)!=0){B=53;break}if((c[b>>2]|0)==1?(c[h>>2]|0)==1:0){B=53;break}x=c[i+4>>2]|0;y=x>>8;if((x&1|0)==0){G=y}else{G=c[(c[E>>2]|0)+y>>2]|0}y=c[i>>2]|0;wd[c[(c[y>>2]|0)+24>>2]&7](y,d,e+G|0,(x&2|0)!=0?f:2,g);x=i+8|0;if(x>>>0<C>>>0){i=x}else{B=53;break}}if((B|0)==53){return}}i=d+54|0;G=e;E=D;while(1){if((a[i]|0)!=0){B=53;break}D=c[E+4>>2]|0;h=D>>8;if((D&1|0)==0){H=h}else{H=c[(c[G>>2]|0)+h>>2]|0}h=c[E>>2]|0;wd[c[(c[h>>2]|0)+24>>2]&7](h,d,e+H|0,(D&2|0)!=0?f:2,g);D=E+8|0;if(D>>>0<C>>>0){E=D}else{B=53;break}}if((B|0)==53){return}}function Dt(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;h=b|0;if((h|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){return}i=d+28|0;if((c[i>>2]|0)==1){return}c[i>>2]=f;return}if((h|0)!=(c[d>>2]|0)){h=c[b+8>>2]|0;wd[c[(c[h>>2]|0)+24>>2]&7](h,d,e,f,g);return}if((c[d+16>>2]|0)!=(e|0)?(h=d+20|0,(c[h>>2]|0)!=(e|0)):0){c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4){return}j=d+52|0;a[j]=0;k=d+53|0;a[k]=0;l=c[b+8>>2]|0;Ld[c[(c[l>>2]|0)+20>>2]&63](l,d,e,e,1,g);if((a[k]|0)!=0){if((a[j]|0)==0){m=1;n=13}}else{m=0;n=13}do{if((n|0)==13){c[h>>2]=e;j=d+40|0;c[j>>2]=(c[j>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54|0]=1;if(m){break}}else{n=16}if((n|0)==16?m:0){break}c[i>>2]=4;return}}while(0);c[i>>2]=3;return}if((f|0)!=1){return}c[d+32>>2]=1;return}function Et(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if((c[d+8>>2]|0)==(b|0)){if((c[d+4>>2]|0)!=(e|0)){return}g=d+28|0;if((c[g>>2]|0)==1){return}c[g>>2]=f;return}if((c[d>>2]|0)!=(b|0)){return}if((c[d+16>>2]|0)!=(e|0)?(b=d+20|0,(c[b>>2]|0)!=(e|0)):0){c[d+32>>2]=f;c[b>>2]=e;e=d+40|0;c[e>>2]=(c[e>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54|0]=1}c[d+44>>2]=4;return}if((f|0)!=1){return}c[d+32>>2]=1;return}function Ft(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;if((b|0)!=(c[d+8>>2]|0)){i=d+52|0;j=a[i]|0;k=d+53|0;l=a[k]|0;m=c[b+12>>2]|0;n=b+16+(m<<3)|0;a[i]=0;a[k]=0;o=c[b+20>>2]|0;p=o>>8;if((o&1|0)==0){q=p}else{q=c[(c[f>>2]|0)+p>>2]|0}p=c[b+16>>2]|0;Ld[c[(c[p>>2]|0)+20>>2]&63](p,d,e,f+q|0,(o&2|0)!=0?g:2,h);a:do{if((m|0)>1){o=d+24|0;q=b+8|0;p=d+54|0;r=f;s=b+24|0;do{if((a[p]|0)!=0){break a}if((a[i]|0)==0){if((a[k]|0)!=0?(c[q>>2]&1|0)==0:0){break a}}else{if((c[o>>2]|0)==1){break a}if((c[q>>2]&2|0)==0){break a}}a[i]=0;a[k]=0;t=c[s+4>>2]|0;u=t>>8;if((t&1|0)==0){v=u}else{v=c[(c[r>>2]|0)+u>>2]|0}u=c[s>>2]|0;Ld[c[(c[u>>2]|0)+20>>2]&63](u,d,e,f+v|0,(t&2|0)!=0?g:2,h);s=s+8|0}while(s>>>0<n>>>0)}}while(0);a[i]=j;a[k]=l;return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;l=c[f>>2]|0;if((l|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((l|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;l=c[e>>2]|0;if((l|0)==2){c[e>>2]=g;w=g}else{w=l}if(!((c[d+48>>2]|0)==1&(w|0)==1)){return}a[d+54|0]=1;return}function Gt(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0;if((b|0)!=(c[d+8>>2]|0)){i=c[b+8>>2]|0;Ld[c[(c[i>>2]|0)+20>>2]&63](i,d,e,f,g,h);return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;h=c[f>>2]|0;if((h|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((h|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;h=c[e>>2]|0;if((h|0)==2){c[e>>2]=g;j=g}else{j=h}if(!((c[d+48>>2]|0)==1&(j|0)==1)){return}a[d+54|0]=1;return}function Ht(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0;if((c[d+8>>2]|0)!=(b|0)){return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;b=c[f>>2]|0;if((b|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;b=c[e>>2]|0;if((b|0)==2){c[e>>2]=g;i=g}else{i=b}if(!((c[d+48>>2]|0)==1&(i|0)==1)){return}a[d+54|0]=1;return}function It(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0;do{if(a>>>0<245>>>0){if(a>>>0<11>>>0){b=16}else{b=a+11&-8}d=b>>>3;e=c[5574]|0;f=e>>>(d>>>0);if((f&3|0)!=0){g=(f&1^1)+d|0;h=g<<1;i=22336+(h<<2)|0;j=22336+(h+2<<2)|0;h=c[j>>2]|0;k=h+8|0;l=c[k>>2]|0;do{if((i|0)!=(l|0)){if(l>>>0<(c[5578]|0)>>>0){Uc();return 0}m=l+12|0;if((c[m>>2]|0)==(h|0)){c[m>>2]=i;c[j>>2]=l;break}else{Uc();return 0}}else{c[5574]=e&~(1<<g)}}while(0);l=g<<3;c[h+4>>2]=l|3;j=h+(l|4)|0;c[j>>2]=c[j>>2]|1;n=k;return n|0}j=c[5576]|0;if(b>>>0>j>>>0){if((f|0)!=0){l=2<<d;i=f<<d&(l|-l);l=(i&-i)-1|0;i=l>>>12&16;m=l>>>(i>>>0);l=m>>>5&8;o=m>>>(l>>>0);m=o>>>2&4;p=o>>>(m>>>0);o=p>>>1&2;q=p>>>(o>>>0);p=q>>>1&1;r=(l|i|m|o|p)+(q>>>(p>>>0))|0;p=r<<1;q=22336+(p<<2)|0;o=22336+(p+2<<2)|0;p=c[o>>2]|0;m=p+8|0;i=c[m>>2]|0;do{if((q|0)!=(i|0)){if(i>>>0<(c[5578]|0)>>>0){Uc();return 0}l=i+12|0;if((c[l>>2]|0)==(p|0)){c[l>>2]=q;c[o>>2]=i;s=c[5576]|0;break}else{Uc();return 0}}else{c[5574]=e&~(1<<r);s=j}}while(0);j=r<<3;e=j-b|0;c[p+4>>2]=b|3;i=p;o=i+b|0;c[i+(b|4)>>2]=e|1;c[i+j>>2]=e;if((s|0)!=0){j=c[5579]|0;i=s>>>3;q=i<<1;d=22336+(q<<2)|0;f=c[5574]|0;k=1<<i;if((f&k|0)!=0){i=22336+(q+2<<2)|0;h=c[i>>2]|0;if(h>>>0<(c[5578]|0)>>>0){Uc();return 0}else{t=h;u=i}}else{c[5574]=f|k;t=d;u=22336+(q+2<<2)|0}c[u>>2]=j;c[t+12>>2]=j;c[j+8>>2]=t;c[j+12>>2]=d}c[5576]=e;c[5579]=o;n=m;return n|0}o=c[5575]|0;if((o|0)!=0){e=(o&-o)-1|0;o=e>>>12&16;d=e>>>(o>>>0);e=d>>>5&8;j=d>>>(e>>>0);d=j>>>2&4;q=j>>>(d>>>0);j=q>>>1&2;k=q>>>(j>>>0);q=k>>>1&1;f=c[22600+((e|o|d|j|q)+(k>>>(q>>>0))<<2)>>2]|0;q=f;k=f;j=(c[f+4>>2]&-8)-b|0;while(1){f=c[q+16>>2]|0;if((f|0)==0){d=c[q+20>>2]|0;if((d|0)==0){break}else{v=d}}else{v=f}f=(c[v+4>>2]&-8)-b|0;d=f>>>0<j>>>0;q=v;k=d?v:k;j=d?f:j}q=k;m=c[5578]|0;if(q>>>0<m>>>0){Uc();return 0}p=q+b|0;r=p;if(!(q>>>0<p>>>0)){Uc();return 0}p=c[k+24>>2]|0;f=c[k+12>>2]|0;do{if((f|0)==(k|0)){d=k+20|0;o=c[d>>2]|0;if((o|0)==0){e=k+16|0;i=c[e>>2]|0;if((i|0)==0){w=0;break}else{x=i;y=e}}else{x=o;y=d}while(1){d=x+20|0;o=c[d>>2]|0;if((o|0)!=0){x=o;y=d;continue}d=x+16|0;o=c[d>>2]|0;if((o|0)==0){break}else{x=o;y=d}}if(y>>>0<m>>>0){Uc();return 0}else{c[y>>2]=0;w=x;break}}else{d=c[k+8>>2]|0;if(d>>>0<m>>>0){Uc();return 0}o=d+12|0;if((c[o>>2]|0)!=(k|0)){Uc();return 0}e=f+8|0;if((c[e>>2]|0)==(k|0)){c[o>>2]=f;c[e>>2]=d;w=f;break}else{Uc();return 0}}}while(0);do{if((p|0)!=0){f=c[k+28>>2]|0;m=22600+(f<<2)|0;if((k|0)==(c[m>>2]|0)){c[m>>2]=w;if((w|0)==0){c[5575]=c[5575]&~(1<<f);break}}else{if(p>>>0<(c[5578]|0)>>>0){Uc();return 0}f=p+16|0;if((c[f>>2]|0)==(k|0)){c[f>>2]=w}else{c[p+20>>2]=w}if((w|0)==0){break}}f=c[5578]|0;if(w>>>0<f>>>0){Uc();return 0}c[w+24>>2]=p;m=c[k+16>>2]|0;do{if((m|0)!=0){if(m>>>0<f>>>0){Uc();return 0}else{c[w+16>>2]=m;c[m+24>>2]=w;break}}}while(0);m=c[k+20>>2]|0;if((m|0)!=0){if(m>>>0<(c[5578]|0)>>>0){Uc();return 0}else{c[w+20>>2]=m;c[m+24>>2]=w;break}}}}while(0);if(j>>>0<16>>>0){p=j+b|0;c[k+4>>2]=p|3;m=q+(p+4)|0;c[m>>2]=c[m>>2]|1}else{c[k+4>>2]=b|3;c[q+(b|4)>>2]=j|1;c[q+(j+b)>>2]=j;m=c[5576]|0;if((m|0)!=0){p=c[5579]|0;f=m>>>3;m=f<<1;d=22336+(m<<2)|0;e=c[5574]|0;o=1<<f;if((e&o|0)!=0){f=22336+(m+2<<2)|0;i=c[f>>2]|0;if(i>>>0<(c[5578]|0)>>>0){Uc();return 0}else{z=i;A=f}}else{c[5574]=e|o;z=d;A=22336+(m+2<<2)|0}c[A>>2]=p;c[z+12>>2]=p;c[p+8>>2]=z;c[p+12>>2]=d}c[5576]=j;c[5579]=r}n=k+8|0;return n|0}else{B=b}}else{B=b}}else{if(!(a>>>0>4294967231>>>0)){d=a+11|0;p=d&-8;m=c[5575]|0;if((m|0)!=0){o=-p|0;e=d>>>8;if((e|0)!=0){if(p>>>0>16777215>>>0){C=31}else{d=(e+1048320|0)>>>16&8;f=e<<d;e=(f+520192|0)>>>16&4;i=f<<e;f=(i+245760|0)>>>16&2;h=14-(e|d|f)+(i<<f>>>15)|0;C=p>>>((h+7|0)>>>0)&1|h<<1}}else{C=0}h=c[22600+(C<<2)>>2]|0;a:do{if((h|0)==0){D=0;E=o;F=0}else{if((C|0)==31){G=0}else{G=25-(C>>>1)|0}f=0;i=o;d=h;e=p<<G;g=0;while(1){l=c[d+4>>2]&-8;H=l-p|0;if(H>>>0<i>>>0){if((l|0)==(p|0)){D=d;E=H;F=d;break a}else{I=d;J=H}}else{I=f;J=i}H=c[d+20>>2]|0;l=c[d+16+(e>>>31<<2)>>2]|0;K=(H|0)==0|(H|0)==(l|0)?g:H;if((l|0)==0){D=I;E=J;F=K;break}else{f=I;i=J;d=l;e=e<<1;g=K}}}}while(0);if((F|0)==0&(D|0)==0){h=2<<C;o=m&(h|-h);if((o|0)==0){B=p;break}h=(o&-o)-1|0;o=h>>>12&16;k=h>>>(o>>>0);h=k>>>5&8;r=k>>>(h>>>0);k=r>>>2&4;j=r>>>(k>>>0);r=j>>>1&2;q=j>>>(r>>>0);j=q>>>1&1;L=c[22600+((h|o|k|r|j)+(q>>>(j>>>0))<<2)>>2]|0}else{L=F}if((L|0)==0){M=E;N=D}else{j=L;q=E;r=D;while(1){k=(c[j+4>>2]&-8)-p|0;o=k>>>0<q>>>0;h=o?k:q;k=o?j:r;o=c[j+16>>2]|0;if((o|0)!=0){j=o;q=h;r=k;continue}o=c[j+20>>2]|0;if((o|0)==0){M=h;N=k;break}else{j=o;q=h;r=k}}}if((N|0)!=0?M>>>0<((c[5576]|0)-p|0)>>>0:0){r=N;q=c[5578]|0;if(r>>>0<q>>>0){Uc();return 0}j=r+p|0;m=j;if(!(r>>>0<j>>>0)){Uc();return 0}k=c[N+24>>2]|0;h=c[N+12>>2]|0;do{if((h|0)==(N|0)){o=N+20|0;g=c[o>>2]|0;if((g|0)==0){e=N+16|0;d=c[e>>2]|0;if((d|0)==0){O=0;break}else{P=d;Q=e}}else{P=g;Q=o}while(1){o=P+20|0;g=c[o>>2]|0;if((g|0)!=0){P=g;Q=o;continue}o=P+16|0;g=c[o>>2]|0;if((g|0)==0){break}else{P=g;Q=o}}if(Q>>>0<q>>>0){Uc();return 0}else{c[Q>>2]=0;O=P;break}}else{o=c[N+8>>2]|0;if(o>>>0<q>>>0){Uc();return 0}g=o+12|0;if((c[g>>2]|0)!=(N|0)){Uc();return 0}e=h+8|0;if((c[e>>2]|0)==(N|0)){c[g>>2]=h;c[e>>2]=o;O=h;break}else{Uc();return 0}}}while(0);do{if((k|0)!=0){h=c[N+28>>2]|0;q=22600+(h<<2)|0;if((N|0)==(c[q>>2]|0)){c[q>>2]=O;if((O|0)==0){c[5575]=c[5575]&~(1<<h);break}}else{if(k>>>0<(c[5578]|0)>>>0){Uc();return 0}h=k+16|0;if((c[h>>2]|0)==(N|0)){c[h>>2]=O}else{c[k+20>>2]=O}if((O|0)==0){break}}h=c[5578]|0;if(O>>>0<h>>>0){Uc();return 0}c[O+24>>2]=k;q=c[N+16>>2]|0;do{if((q|0)!=0){if(q>>>0<h>>>0){Uc();return 0}else{c[O+16>>2]=q;c[q+24>>2]=O;break}}}while(0);q=c[N+20>>2]|0;if((q|0)!=0){if(q>>>0<(c[5578]|0)>>>0){Uc();return 0}else{c[O+20>>2]=q;c[q+24>>2]=O;break}}}}while(0);b:do{if(!(M>>>0<16>>>0)){c[N+4>>2]=p|3;c[r+(p|4)>>2]=M|1;c[r+(M+p)>>2]=M;k=M>>>3;if(M>>>0<256>>>0){q=k<<1;h=22336+(q<<2)|0;o=c[5574]|0;e=1<<k;if((o&e|0)!=0){k=22336+(q+2<<2)|0;g=c[k>>2]|0;if(g>>>0<(c[5578]|0)>>>0){Uc();return 0}else{R=g;S=k}}else{c[5574]=o|e;R=h;S=22336+(q+2<<2)|0}c[S>>2]=m;c[R+12>>2]=m;c[r+(p+8)>>2]=R;c[r+(p+12)>>2]=h;break}h=j;q=M>>>8;if((q|0)!=0){if(M>>>0>16777215>>>0){T=31}else{e=(q+1048320|0)>>>16&8;o=q<<e;q=(o+520192|0)>>>16&4;k=o<<q;o=(k+245760|0)>>>16&2;g=14-(q|e|o)+(k<<o>>>15)|0;T=M>>>((g+7|0)>>>0)&1|g<<1}}else{T=0}g=22600+(T<<2)|0;c[r+(p+28)>>2]=T;c[r+(p+20)>>2]=0;c[r+(p+16)>>2]=0;o=c[5575]|0;k=1<<T;if((o&k|0)==0){c[5575]=o|k;c[g>>2]=h;c[r+(p+24)>>2]=g;c[r+(p+12)>>2]=h;c[r+(p+8)>>2]=h;break}k=c[g>>2]|0;if((T|0)==31){U=0}else{U=25-(T>>>1)|0}c:do{if((c[k+4>>2]&-8|0)!=(M|0)){g=k;o=M<<U;while(1){V=g+16+(o>>>31<<2)|0;e=c[V>>2]|0;if((e|0)==0){break}if((c[e+4>>2]&-8|0)==(M|0)){W=e;break c}else{g=e;o=o<<1}}if(V>>>0<(c[5578]|0)>>>0){Uc();return 0}else{c[V>>2]=h;c[r+(p+24)>>2]=g;c[r+(p+12)>>2]=h;c[r+(p+8)>>2]=h;break b}}else{W=k}}while(0);k=W+8|0;o=c[k>>2]|0;e=c[5578]|0;if(W>>>0>=e>>>0&o>>>0>=e>>>0){c[o+12>>2]=h;c[k>>2]=h;c[r+(p+8)>>2]=o;c[r+(p+12)>>2]=W;c[r+(p+24)>>2]=0;break}else{Uc();return 0}}else{o=M+p|0;c[N+4>>2]=o|3;k=r+(o+4)|0;c[k>>2]=c[k>>2]|1}}while(0);n=N+8|0;return n|0}else{B=p}}else{B=p}}else{B=-1}}}while(0);N=c[5576]|0;if(!(N>>>0<B>>>0)){M=N-B|0;W=c[5579]|0;if(M>>>0>15>>>0){V=W;c[5579]=V+B;c[5576]=M;c[V+(B+4)>>2]=M|1;c[V+N>>2]=M;c[W+4>>2]=B|3}else{c[5576]=0;c[5579]=0;c[W+4>>2]=N|3;M=W+(N+4)|0;c[M>>2]=c[M>>2]|1}n=W+8|0;return n|0}W=c[5577]|0;if(W>>>0>B>>>0){M=W-B|0;c[5577]=M;W=c[5580]|0;N=W;c[5580]=N+B;c[N+(B+4)>>2]=M|1;c[W+4>>2]=B|3;n=W+8|0;return n|0}do{if((c[5516]|0)==0){W=kc(30)|0;if((W-1&W|0)==0){c[5518]=W;c[5517]=W;c[5519]=-1;c[5520]=-1;c[5521]=0;c[5685]=0;c[5516]=(ud(0)|0)&-16^1431655768;break}else{Uc();return 0}}}while(0);W=B+48|0;M=c[5518]|0;N=B+47|0;V=M+N|0;U=-M|0;M=V&U;if(!(M>>>0>B>>>0)){n=0;return n|0}T=c[5684]|0;if((T|0)!=0?(R=c[5682]|0,S=R+M|0,S>>>0<=R>>>0|S>>>0>T>>>0):0){n=0;return n|0}d:do{if((c[5685]&4|0)==0){T=c[5580]|0;e:do{if((T|0)!=0){S=T;R=22744;while(1){X=R|0;O=c[X>>2]|0;if(!(O>>>0>S>>>0)?(Y=R+4|0,(O+(c[Y>>2]|0)|0)>>>0>S>>>0):0){break}O=c[R+8>>2]|0;if((O|0)==0){Z=181;break e}else{R=O}}if((R|0)!=0){S=V-(c[5577]|0)&U;if(S>>>0<2147483647>>>0){h=Ac(S|0)|0;if((h|0)==((c[X>>2]|0)+(c[Y>>2]|0)|0)){_=h;$=S;Z=190}else{aa=S;ba=h;Z=191}}else{ca=0}}else{Z=181}}else{Z=181}}while(0);do{if((Z|0)==181){T=Ac(0)|0;if(!((T|0)==-1)){p=T;h=c[5517]|0;S=h-1|0;if((S&p|0)==0){da=M}else{da=M-p+(S+p&-h)|0}h=c[5682]|0;p=h+da|0;if(da>>>0>B>>>0&da>>>0<2147483647>>>0){S=c[5684]|0;if((S|0)!=0?p>>>0<=h>>>0|p>>>0>S>>>0:0){ca=0;break}S=Ac(da|0)|0;if((S|0)==(T|0)){_=T;$=da;Z=190}else{aa=da;ba=S;Z=191}}else{ca=0}}else{ca=0}}}while(0);f:do{if((Z|0)==190){if((_|0)==-1){ca=$}else{ea=$;fa=_;Z=201;break d}}else if((Z|0)==191){S=-aa|0;do{if((ba|0)!=-1&aa>>>0<2147483647>>>0&W>>>0>aa>>>0?(T=c[5518]|0,p=N-aa+T&-T,p>>>0<2147483647>>>0):0){if((Ac(p|0)|0)==-1){Ac(S|0)|0;ca=0;break f}else{ga=p+aa|0;break}}else{ga=aa}}while(0);if((ba|0)==-1){ca=0}else{ea=ga;fa=ba;Z=201;break d}}}while(0);c[5685]=c[5685]|4;ha=ca;Z=198}else{ha=0;Z=198}}while(0);if((((Z|0)==198?M>>>0<2147483647>>>0:0)?(ca=Ac(M|0)|0,M=Ac(0)|0,(ca|0)!=-1&(M|0)!=-1&ca>>>0<M>>>0):0)?(ba=M-ca|0,M=ba>>>0>(B+40|0)>>>0,M):0){ea=M?ba:ha;fa=ca;Z=201}if((Z|0)==201){ca=(c[5682]|0)+ea|0;c[5682]=ca;if(ca>>>0>(c[5683]|0)>>>0){c[5683]=ca}ca=c[5580]|0;g:do{if((ca|0)!=0){ha=22744;while(1){ia=c[ha>>2]|0;ja=ha+4|0;ka=c[ja>>2]|0;if((fa|0)==(ia+ka|0)){Z=213;break}ba=c[ha+8>>2]|0;if((ba|0)==0){break}else{ha=ba}}if(((Z|0)==213?(c[ha+12>>2]&8|0)==0:0)?(ba=ca,ba>>>0>=ia>>>0&ba>>>0<fa>>>0):0){c[ja>>2]=ka+ea;M=(c[5577]|0)+ea|0;ga=ca+8|0;if((ga&7|0)==0){la=0}else{la=-ga&7}ga=M-la|0;c[5580]=ba+la;c[5577]=ga;c[ba+(la+4)>>2]=ga|1;c[ba+(M+4)>>2]=40;c[5581]=c[5520];break}M=c[5578]|0;if(fa>>>0<M>>>0){c[5578]=fa;ma=fa}else{ma=M}M=fa+ea|0;ba=22744;while(1){na=ba|0;if((c[na>>2]|0)==(M|0)){Z=223;break}ga=c[ba+8>>2]|0;if((ga|0)==0){break}else{ba=ga}}if((Z|0)==223?(c[ba+12>>2]&8|0)==0:0){c[na>>2]=fa;M=ba+4|0;c[M>>2]=(c[M>>2]|0)+ea;M=fa+8|0;if((M&7|0)==0){oa=0}else{oa=-M&7}M=fa+(ea+8)|0;if((M&7|0)==0){pa=0}else{pa=-M&7}M=fa+(pa+ea)|0;ha=M;ga=oa+B|0;aa=fa+ga|0;N=aa;W=M-(fa+oa)-B|0;c[fa+(oa+4)>>2]=B|3;h:do{if((ha|0)!=(ca|0)){if((ha|0)==(c[5579]|0)){_=(c[5576]|0)+W|0;c[5576]=_;c[5579]=N;c[fa+(ga+4)>>2]=_|1;c[fa+(_+ga)>>2]=_;break}_=ea+4|0;$=c[fa+(_+pa)>>2]|0;if(($&3|0)==1){da=$&-8;Y=$>>>3;do{if(!($>>>0<256>>>0)){X=M;U=c[fa+((pa|24)+ea)>>2]|0;V=c[fa+(ea+12+pa)>>2]|0;do{if((V|0)==(X|0)){S=pa|16;R=fa+(_+S)|0;p=c[R>>2]|0;if((p|0)==0){T=fa+(S+ea)|0;S=c[T>>2]|0;if((S|0)==0){qa=0;break}else{ra=S;sa=T}}else{ra=p;sa=R}while(1){R=ra+20|0;p=c[R>>2]|0;if((p|0)!=0){ra=p;sa=R;continue}R=ra+16|0;p=c[R>>2]|0;if((p|0)==0){break}else{ra=p;sa=R}}if(sa>>>0<ma>>>0){Uc();return 0}else{c[sa>>2]=0;qa=ra;break}}else{R=c[fa+((pa|8)+ea)>>2]|0;if(R>>>0<ma>>>0){Uc();return 0}p=R+12|0;if((c[p>>2]|0)!=(X|0)){Uc();return 0}T=V+8|0;if((c[T>>2]|0)==(X|0)){c[p>>2]=V;c[T>>2]=R;qa=V;break}else{Uc();return 0}}}while(0);if((U|0)!=0){V=c[fa+(ea+28+pa)>>2]|0;g=22600+(V<<2)|0;if((X|0)==(c[g>>2]|0)){c[g>>2]=qa;if((qa|0)==0){c[5575]=c[5575]&~(1<<V);break}}else{if(U>>>0<(c[5578]|0)>>>0){Uc();return 0}V=U+16|0;if((c[V>>2]|0)==(X|0)){c[V>>2]=qa}else{c[U+20>>2]=qa}if((qa|0)==0){break}}V=c[5578]|0;if(qa>>>0<V>>>0){Uc();return 0}c[qa+24>>2]=U;g=pa|16;R=c[fa+(g+ea)>>2]|0;do{if((R|0)!=0){if(R>>>0<V>>>0){Uc();return 0}else{c[qa+16>>2]=R;c[R+24>>2]=qa;break}}}while(0);R=c[fa+(_+g)>>2]|0;if((R|0)!=0){if(R>>>0<(c[5578]|0)>>>0){Uc();return 0}else{c[qa+20>>2]=R;c[R+24>>2]=qa;break}}}}else{R=c[fa+((pa|8)+ea)>>2]|0;V=c[fa+(ea+12+pa)>>2]|0;U=22336+(Y<<1<<2)|0;if((R|0)!=(U|0)){if(R>>>0<ma>>>0){Uc();return 0}if((c[R+12>>2]|0)!=(ha|0)){Uc();return 0}}if((V|0)==(R|0)){c[5574]=c[5574]&~(1<<Y);break}if((V|0)!=(U|0)){if(V>>>0<ma>>>0){Uc();return 0}U=V+8|0;if((c[U>>2]|0)==(ha|0)){ta=U}else{Uc();return 0}}else{ta=V+8|0}c[R+12>>2]=V;c[ta>>2]=R}}while(0);ua=fa+((da|pa)+ea)|0;va=da+W|0}else{ua=ha;va=W}Y=ua+4|0;c[Y>>2]=c[Y>>2]&-2;c[fa+(ga+4)>>2]=va|1;c[fa+(va+ga)>>2]=va;Y=va>>>3;if(va>>>0<256>>>0){_=Y<<1;$=22336+(_<<2)|0;R=c[5574]|0;V=1<<Y;if((R&V|0)!=0){Y=22336+(_+2<<2)|0;U=c[Y>>2]|0;if(U>>>0<(c[5578]|0)>>>0){Uc();return 0}else{wa=U;xa=Y}}else{c[5574]=R|V;wa=$;xa=22336+(_+2<<2)|0}c[xa>>2]=N;c[wa+12>>2]=N;c[fa+(ga+8)>>2]=wa;c[fa+(ga+12)>>2]=$;break}$=aa;_=va>>>8;if((_|0)!=0){if(va>>>0>16777215>>>0){ya=31}else{V=(_+1048320|0)>>>16&8;R=_<<V;_=(R+520192|0)>>>16&4;Y=R<<_;R=(Y+245760|0)>>>16&2;U=14-(_|V|R)+(Y<<R>>>15)|0;ya=va>>>((U+7|0)>>>0)&1|U<<1}}else{ya=0}U=22600+(ya<<2)|0;c[fa+(ga+28)>>2]=ya;c[fa+(ga+20)>>2]=0;c[fa+(ga+16)>>2]=0;R=c[5575]|0;Y=1<<ya;if((R&Y|0)==0){c[5575]=R|Y;c[U>>2]=$;c[fa+(ga+24)>>2]=U;c[fa+(ga+12)>>2]=$;c[fa+(ga+8)>>2]=$;break}Y=c[U>>2]|0;if((ya|0)==31){za=0}else{za=25-(ya>>>1)|0}i:do{if((c[Y+4>>2]&-8|0)!=(va|0)){U=Y;R=va<<za;while(1){Aa=U+16+(R>>>31<<2)|0;V=c[Aa>>2]|0;if((V|0)==0){break}if((c[V+4>>2]&-8|0)==(va|0)){Ba=V;break i}else{U=V;R=R<<1}}if(Aa>>>0<(c[5578]|0)>>>0){Uc();return 0}else{c[Aa>>2]=$;c[fa+(ga+24)>>2]=U;c[fa+(ga+12)>>2]=$;c[fa+(ga+8)>>2]=$;break h}}else{Ba=Y}}while(0);Y=Ba+8|0;da=c[Y>>2]|0;R=c[5578]|0;if(Ba>>>0>=R>>>0&da>>>0>=R>>>0){c[da+12>>2]=$;c[Y>>2]=$;c[fa+(ga+8)>>2]=da;c[fa+(ga+12)>>2]=Ba;c[fa+(ga+24)>>2]=0;break}else{Uc();return 0}}else{da=(c[5577]|0)+W|0;c[5577]=da;c[5580]=N;c[fa+(ga+4)>>2]=da|1}}while(0);n=fa+(oa|8)|0;return n|0}ga=ca;N=22744;while(1){Ca=c[N>>2]|0;if(!(Ca>>>0>ga>>>0)?(Da=c[N+4>>2]|0,Ea=Ca+Da|0,Ea>>>0>ga>>>0):0){break}N=c[N+8>>2]|0}N=Ca+(Da-39)|0;if((N&7|0)==0){Fa=0}else{Fa=-N&7}N=Ca+(Da-47+Fa)|0;W=N>>>0<(ca+16|0)>>>0?ga:N;N=W+8|0;aa=fa+8|0;if((aa&7|0)==0){Ga=0}else{Ga=-aa&7}aa=ea-40-Ga|0;c[5580]=fa+Ga;c[5577]=aa;c[fa+(Ga+4)>>2]=aa|1;c[fa+(ea-36)>>2]=40;c[5581]=c[5520];c[W+4>>2]=27;c[N>>2]=c[5686];c[N+4>>2]=c[5687];c[N+8>>2]=c[5688];c[N+12>>2]=c[5689];c[5686]=fa;c[5687]=ea;c[5689]=0;c[5688]=N;N=W+28|0;c[N>>2]=7;if((W+32|0)>>>0<Ea>>>0){aa=N;do{N=aa;aa=aa+4|0;c[aa>>2]=7}while((N+8|0)>>>0<Ea>>>0)}if((W|0)!=(ga|0)){aa=W-ca|0;N=ga+(aa+4)|0;c[N>>2]=c[N>>2]&-2;c[ca+4>>2]=aa|1;c[ga+aa>>2]=aa;N=aa>>>3;if(aa>>>0<256>>>0){ha=N<<1;M=22336+(ha<<2)|0;ba=c[5574]|0;da=1<<N;if((ba&da|0)!=0){N=22336+(ha+2<<2)|0;Y=c[N>>2]|0;if(Y>>>0<(c[5578]|0)>>>0){Uc();return 0}else{Ha=Y;Ia=N}}else{c[5574]=ba|da;Ha=M;Ia=22336+(ha+2<<2)|0}c[Ia>>2]=ca;c[Ha+12>>2]=ca;c[ca+8>>2]=Ha;c[ca+12>>2]=M;break}M=ca;ha=aa>>>8;if((ha|0)!=0){if(aa>>>0>16777215>>>0){Ja=31}else{da=(ha+1048320|0)>>>16&8;ba=ha<<da;ha=(ba+520192|0)>>>16&4;N=ba<<ha;ba=(N+245760|0)>>>16&2;Y=14-(ha|da|ba)+(N<<ba>>>15)|0;Ja=aa>>>((Y+7|0)>>>0)&1|Y<<1}}else{Ja=0}Y=22600+(Ja<<2)|0;c[ca+28>>2]=Ja;c[ca+20>>2]=0;c[ca+16>>2]=0;ba=c[5575]|0;N=1<<Ja;if((ba&N|0)==0){c[5575]=ba|N;c[Y>>2]=M;c[ca+24>>2]=Y;c[ca+12>>2]=ca;c[ca+8>>2]=ca;break}N=c[Y>>2]|0;if((Ja|0)==31){Ka=0}else{Ka=25-(Ja>>>1)|0}j:do{if((c[N+4>>2]&-8|0)!=(aa|0)){Y=N;ba=aa<<Ka;while(1){La=Y+16+(ba>>>31<<2)|0;da=c[La>>2]|0;if((da|0)==0){break}if((c[da+4>>2]&-8|0)==(aa|0)){Ma=da;break j}else{Y=da;ba=ba<<1}}if(La>>>0<(c[5578]|0)>>>0){Uc();return 0}else{c[La>>2]=M;c[ca+24>>2]=Y;c[ca+12>>2]=ca;c[ca+8>>2]=ca;break g}}else{Ma=N}}while(0);N=Ma+8|0;aa=c[N>>2]|0;ga=c[5578]|0;if(Ma>>>0>=ga>>>0&aa>>>0>=ga>>>0){c[aa+12>>2]=M;c[N>>2]=M;c[ca+8>>2]=aa;c[ca+12>>2]=Ma;c[ca+24>>2]=0;break}else{Uc();return 0}}}else{aa=c[5578]|0;if((aa|0)==0|fa>>>0<aa>>>0){c[5578]=fa}c[5686]=fa;c[5687]=ea;c[5689]=0;c[5583]=c[5516];c[5582]=-1;aa=0;do{N=aa<<1;ga=22336+(N<<2)|0;c[22336+(N+3<<2)>>2]=ga;c[22336+(N+2<<2)>>2]=ga;aa=aa+1|0}while(aa>>>0<32>>>0);aa=fa+8|0;if((aa&7|0)==0){Na=0}else{Na=-aa&7}aa=ea-40-Na|0;c[5580]=fa+Na;c[5577]=aa;c[fa+(Na+4)>>2]=aa|1;c[fa+(ea-36)>>2]=40;c[5581]=c[5520]}}while(0);ea=c[5577]|0;if(ea>>>0>B>>>0){fa=ea-B|0;c[5577]=fa;ea=c[5580]|0;Na=ea;c[5580]=Na+B;c[Na+(B+4)>>2]=fa|1;c[ea+4>>2]=B|3;n=ea+8|0;return n|0}}c[(Bc()|0)>>2]=12;n=0;return n|0}function Jt(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;if((a|0)==0){return}b=a-8|0;d=b;e=c[5578]|0;if(b>>>0<e>>>0){Uc()}f=c[a-4>>2]|0;g=f&3;if((g|0)==1){Uc()}h=f&-8;i=a+(h-8)|0;j=i;do{if((f&1|0)==0){k=c[b>>2]|0;if((g|0)==0){return}l=-8-k|0;m=a+l|0;n=m;o=k+h|0;if(m>>>0<e>>>0){Uc()}if((n|0)==(c[5579]|0)){p=a+(h-4)|0;q=c[p>>2]|0;if((q&3|0)!=3){r=n;s=o;break}c[5576]=o;c[p>>2]=q&-2;c[a+(l+4)>>2]=o|1;c[i>>2]=o;return}q=k>>>3;if(k>>>0<256>>>0){k=c[a+(l+8)>>2]|0;p=c[a+(l+12)>>2]|0;t=22336+(q<<1<<2)|0;if((k|0)!=(t|0)){if(k>>>0<e>>>0){Uc()}if((c[k+12>>2]|0)!=(n|0)){Uc()}}if((p|0)==(k|0)){c[5574]=c[5574]&~(1<<q);r=n;s=o;break}if((p|0)!=(t|0)){if(p>>>0<e>>>0){Uc()}t=p+8|0;if((c[t>>2]|0)==(n|0)){u=t}else{Uc()}}else{u=p+8|0}c[k+12>>2]=p;c[u>>2]=k;r=n;s=o;break}k=m;m=c[a+(l+24)>>2]|0;p=c[a+(l+12)>>2]|0;do{if((p|0)==(k|0)){t=a+(l+20)|0;q=c[t>>2]|0;if((q|0)==0){v=a+(l+16)|0;w=c[v>>2]|0;if((w|0)==0){x=0;break}else{y=w;z=v}}else{y=q;z=t}while(1){t=y+20|0;q=c[t>>2]|0;if((q|0)!=0){y=q;z=t;continue}t=y+16|0;q=c[t>>2]|0;if((q|0)==0){break}else{y=q;z=t}}if(z>>>0<e>>>0){Uc()}else{c[z>>2]=0;x=y;break}}else{t=c[a+(l+8)>>2]|0;if(t>>>0<e>>>0){Uc()}q=t+12|0;if((c[q>>2]|0)!=(k|0)){Uc()}v=p+8|0;if((c[v>>2]|0)==(k|0)){c[q>>2]=p;c[v>>2]=t;x=p;break}else{Uc()}}}while(0);if((m|0)!=0){p=c[a+(l+28)>>2]|0;t=22600+(p<<2)|0;if((k|0)==(c[t>>2]|0)){c[t>>2]=x;if((x|0)==0){c[5575]=c[5575]&~(1<<p);r=n;s=o;break}}else{if(m>>>0<(c[5578]|0)>>>0){Uc()}p=m+16|0;if((c[p>>2]|0)==(k|0)){c[p>>2]=x}else{c[m+20>>2]=x}if((x|0)==0){r=n;s=o;break}}p=c[5578]|0;if(x>>>0<p>>>0){Uc()}c[x+24>>2]=m;t=c[a+(l+16)>>2]|0;do{if((t|0)!=0){if(t>>>0<p>>>0){Uc()}else{c[x+16>>2]=t;c[t+24>>2]=x;break}}}while(0);t=c[a+(l+20)>>2]|0;if((t|0)!=0){if(t>>>0<(c[5578]|0)>>>0){Uc()}else{c[x+20>>2]=t;c[t+24>>2]=x;r=n;s=o;break}}else{r=n;s=o}}else{r=n;s=o}}else{r=d;s=h}}while(0);d=r;if(!(d>>>0<i>>>0)){Uc()}x=a+(h-4)|0;e=c[x>>2]|0;if((e&1|0)==0){Uc()}if((e&2|0)==0){if((j|0)==(c[5580]|0)){y=(c[5577]|0)+s|0;c[5577]=y;c[5580]=r;c[r+4>>2]=y|1;if((r|0)!=(c[5579]|0)){return}c[5579]=0;c[5576]=0;return}if((j|0)==(c[5579]|0)){y=(c[5576]|0)+s|0;c[5576]=y;c[5579]=r;c[r+4>>2]=y|1;c[d+y>>2]=y;return}y=(e&-8)+s|0;z=e>>>3;do{if(!(e>>>0<256>>>0)){u=i;g=c[a+(h+16)>>2]|0;b=c[a+(h|4)>>2]|0;do{if((b|0)==(u|0)){f=a+(h+12)|0;t=c[f>>2]|0;if((t|0)==0){p=a+(h+8)|0;m=c[p>>2]|0;if((m|0)==0){A=0;break}else{B=m;C=p}}else{B=t;C=f}while(1){f=B+20|0;t=c[f>>2]|0;if((t|0)!=0){B=t;C=f;continue}f=B+16|0;t=c[f>>2]|0;if((t|0)==0){break}else{B=t;C=f}}if(C>>>0<(c[5578]|0)>>>0){Uc()}else{c[C>>2]=0;A=B;break}}else{f=c[a+h>>2]|0;if(f>>>0<(c[5578]|0)>>>0){Uc()}t=f+12|0;if((c[t>>2]|0)!=(u|0)){Uc()}p=b+8|0;if((c[p>>2]|0)==(u|0)){c[t>>2]=b;c[p>>2]=f;A=b;break}else{Uc()}}}while(0);if((g|0)!=0){b=c[a+(h+20)>>2]|0;o=22600+(b<<2)|0;if((u|0)==(c[o>>2]|0)){c[o>>2]=A;if((A|0)==0){c[5575]=c[5575]&~(1<<b);break}}else{if(g>>>0<(c[5578]|0)>>>0){Uc()}b=g+16|0;if((c[b>>2]|0)==(u|0)){c[b>>2]=A}else{c[g+20>>2]=A}if((A|0)==0){break}}b=c[5578]|0;if(A>>>0<b>>>0){Uc()}c[A+24>>2]=g;o=c[a+(h+8)>>2]|0;do{if((o|0)!=0){if(o>>>0<b>>>0){Uc()}else{c[A+16>>2]=o;c[o+24>>2]=A;break}}}while(0);o=c[a+(h+12)>>2]|0;if((o|0)!=0){if(o>>>0<(c[5578]|0)>>>0){Uc()}else{c[A+20>>2]=o;c[o+24>>2]=A;break}}}}else{o=c[a+h>>2]|0;b=c[a+(h|4)>>2]|0;g=22336+(z<<1<<2)|0;if((o|0)!=(g|0)){if(o>>>0<(c[5578]|0)>>>0){Uc()}if((c[o+12>>2]|0)!=(j|0)){Uc()}}if((b|0)==(o|0)){c[5574]=c[5574]&~(1<<z);break}if((b|0)!=(g|0)){if(b>>>0<(c[5578]|0)>>>0){Uc()}g=b+8|0;if((c[g>>2]|0)==(j|0)){D=g}else{Uc()}}else{D=b+8|0}c[o+12>>2]=b;c[D>>2]=o}}while(0);c[r+4>>2]=y|1;c[d+y>>2]=y;if((r|0)==(c[5579]|0)){c[5576]=y;return}else{E=y}}else{c[x>>2]=e&-2;c[r+4>>2]=s|1;c[d+s>>2]=s;E=s}s=E>>>3;if(E>>>0<256>>>0){d=s<<1;e=22336+(d<<2)|0;x=c[5574]|0;y=1<<s;if((x&y|0)!=0){s=22336+(d+2<<2)|0;D=c[s>>2]|0;if(D>>>0<(c[5578]|0)>>>0){Uc()}else{F=D;G=s}}else{c[5574]=x|y;F=e;G=22336+(d+2<<2)|0}c[G>>2]=r;c[F+12>>2]=r;c[r+8>>2]=F;c[r+12>>2]=e;return}e=r;F=E>>>8;if((F|0)!=0){if(E>>>0>16777215>>>0){H=31}else{G=(F+1048320|0)>>>16&8;d=F<<G;F=(d+520192|0)>>>16&4;y=d<<F;d=(y+245760|0)>>>16&2;x=14-(F|G|d)+(y<<d>>>15)|0;H=E>>>((x+7|0)>>>0)&1|x<<1}}else{H=0}x=22600+(H<<2)|0;c[r+28>>2]=H;c[r+20>>2]=0;c[r+16>>2]=0;d=c[5575]|0;y=1<<H;a:do{if((d&y|0)!=0){G=c[x>>2]|0;if((H|0)==31){I=0}else{I=25-(H>>>1)|0}b:do{if((c[G+4>>2]&-8|0)!=(E|0)){F=G;s=E<<I;while(1){J=F+16+(s>>>31<<2)|0;D=c[J>>2]|0;if((D|0)==0){break}if((c[D+4>>2]&-8|0)==(E|0)){K=D;break b}else{F=D;s=s<<1}}if(J>>>0<(c[5578]|0)>>>0){Uc()}else{c[J>>2]=e;c[r+24>>2]=F;c[r+12>>2]=r;c[r+8>>2]=r;break a}}else{K=G}}while(0);G=K+8|0;s=c[G>>2]|0;D=c[5578]|0;if(K>>>0>=D>>>0&s>>>0>=D>>>0){c[s+12>>2]=e;c[G>>2]=e;c[r+8>>2]=s;c[r+12>>2]=K;c[r+24>>2]=0;break}else{Uc()}}else{c[5575]=d|y;c[x>>2]=e;c[r+24>>2]=x;c[r+12>>2]=r;c[r+8>>2]=r}}while(0);r=(c[5582]|0)-1|0;c[5582]=r;if((r|0)==0){L=22752}else{return}while(1){r=c[L>>2]|0;if((r|0)==0){break}else{L=r+8|0}}c[5582]=-1;return}function Kt(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if((a|0)==0){d=It(b)|0;return d|0}if(b>>>0>4294967231>>>0){c[(Bc()|0)>>2]=12;d=0;return d|0}if(b>>>0<11>>>0){e=16}else{e=b+11&-8}f=au(a-8|0,e)|0;if((f|0)!=0){d=f+8|0;return d|0}f=It(b)|0;if((f|0)==0){d=0;return d|0}e=c[a-4>>2]|0;g=(e&-8)-((e&3|0)==0?8:4)|0;du(f|0,a|0,g>>>0<b>>>0?g:b)|0;Jt(a);d=f;return d|0}function Lt(a){a=a|0;var b=0,d=0,e=0;b=(a|0)==0?1:a;while(1){d=It(b)|0;if((d|0)!=0){e=10;break}a=(J=c[6720]|0,c[6720]=J+0,J);if((a|0)==0){break}Hd[a&7]()}if((e|0)==10){return d|0}d=dd(4)|0;c[d>>2]=5568;ac(d|0,18456,58);return 0}function Mt(a){a=a|0;return Lt(a)|0}function Nt(a){a=a|0;if((a|0)==0){return}Jt(a);return}function Ot(a){a=a|0;Nt(a);return}function Pt(a){a=a|0;Nt(a);return}function Qt(a){a=a|0;return}function Rt(a){a=a|0;return 2216}function St(){var a=0;a=dd(4)|0;c[a>>2]=5568;ac(a|0,18456,58)}function Tt(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0.0,T=0.0,U=0,V=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0.0,fa=0.0,ga=0,ia=0,ja=0.0,ka=0,la=0.0,ma=0.0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0.0,wa=0,xa=0.0,ya=0,za=0.0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0.0,Fa=0,Ga=0.0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0.0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0.0,Pc=0.0,Qc=0.0,Rc=0,Sc=0,Tc=0.0,Uc=0.0,Vc=0.0,Wc=0.0,Xc=0,Yc=0,Zc=0.0,_c=0;g=i;i=i+512|0;h=g|0;if((e|0)==1){j=-1074;k=53}else if((e|0)==2){j=-1074;k=53}else if((e|0)==0){j=-149;k=24}else{l=0.0;i=g;return+l}e=b+4|0;m=b+100|0;do{n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;o=d[n]|0}else{o=Vt(b)|0}}while((Wa(o|0)|0)!=0);do{if((o|0)==45|(o|0)==43){n=1-(((o|0)==45)<<1)|0;p=c[e>>2]|0;if(p>>>0<(c[m>>2]|0)>>>0){c[e>>2]=p+1;q=d[p]|0;r=n;break}else{q=Vt(b)|0;r=n;break}}else{q=o;r=1}}while(0);o=0;n=q;while(1){if((n|32|0)!=(a[1136+o|0]|0)){s=o;t=n;break}do{if(o>>>0<7>>>0){q=c[e>>2]|0;if(q>>>0<(c[m>>2]|0)>>>0){c[e>>2]=q+1;u=d[q]|0;break}else{u=Vt(b)|0;break}}else{u=n}}while(0);q=o+1|0;if(q>>>0<8>>>0){o=q;n=u}else{s=q;t=u;break}}do{if((s|0)==3){v=23}else if((s|0)!=8){u=(f|0)!=0;if(s>>>0>3>>>0&u){if((s|0)==8){break}else{v=23;break}}a:do{if((s|0)==0){n=0;o=t;while(1){if((o|32|0)!=(a[3296+n|0]|0)){y=o;z=n;break a}do{if(n>>>0<2>>>0){q=c[e>>2]|0;if(q>>>0<(c[m>>2]|0)>>>0){c[e>>2]=q+1;A=d[q]|0;break}else{A=Vt(b)|0;break}}else{A=o}}while(0);q=n+1|0;if(q>>>0<3>>>0){n=q;o=A}else{y=A;z=q;break}}}else{y=t;z=s}}while(0);if((z|0)==3){o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;B=d[o]|0}else{B=Vt(b)|0}if((B|0)==40){C=1}else{if((c[m>>2]|0)==0){l=+w;i=g;return+l}c[e>>2]=(c[e>>2]|0)-1;l=+w;i=g;return+l}while(1){o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;D=d[o]|0}else{D=Vt(b)|0}if(!((D-48|0)>>>0<10>>>0|(D-65|0)>>>0<26>>>0)?!((D-97|0)>>>0<26>>>0|(D|0)==95):0){break}C=C+1|0}if((D|0)==41){l=+w;i=g;return+l}o=(c[m>>2]|0)==0;if(!o){c[e>>2]=(c[e>>2]|0)-1}if(!u){c[(Bc()|0)>>2]=22;Ut(b,0);l=0.0;i=g;return+l}if((C|0)==0|o){l=+w;i=g;return+l}else{E=C}while(1){o=E-1|0;c[e>>2]=(c[e>>2]|0)-1;if((o|0)==0){l=+w;break}else{E=o}}i=g;return+l}else if((z|0)==0){do{if((y|0)==48){u=c[e>>2]|0;if(u>>>0<(c[m>>2]|0)>>>0){c[e>>2]=u+1;F=d[u]|0}else{F=Vt(b)|0}if((F|32|0)!=120){if((c[m>>2]|0)==0){G=48;break}c[e>>2]=(c[e>>2]|0)-1;G=48;break}u=c[e>>2]|0;if(u>>>0<(c[m>>2]|0)>>>0){c[e>>2]=u+1;H=d[u]|0;I=0}else{H=Vt(b)|0;I=0}while(1){if((H|0)==46){v=70;break}else if((H|0)!=48){J=H;K=0;M=0;N=0;O=0;P=I;Q=0;R=0;S=1.0;T=0.0;U=0;break}u=c[e>>2]|0;if(u>>>0<(c[m>>2]|0)>>>0){c[e>>2]=u+1;H=d[u]|0;I=1;continue}else{H=Vt(b)|0;I=1;continue}}if((v|0)==70){u=c[e>>2]|0;if(u>>>0<(c[m>>2]|0)>>>0){c[e>>2]=u+1;V=d[u]|0}else{V=Vt(b)|0}if((V|0)==48){u=0;o=0;while(1){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;X=d[n]|0}else{X=Vt(b)|0}n=ju(o,u,-1,-1)|0;q=L;if((X|0)==48){u=q;o=n}else{J=X;K=0;M=0;N=q;O=n;P=1;Q=1;R=0;S=1.0;T=0.0;U=0;break}}}else{J=V;K=0;M=0;N=0;O=0;P=I;Q=1;R=0;S=1.0;T=0.0;U=0}}b:while(1){o=J-48|0;do{if(!(o>>>0<10>>>0)){u=J|32;n=(J|0)==46;if(!((u-97|0)>>>0<6>>>0|n)){Y=J;break b}if(n){if((Q|0)==0){Z=K;_=M;$=K;aa=M;ba=P;ca=1;da=R;ea=S;fa=T;ga=U;break}else{Y=46;break b}}else{ia=(J|0)>57?u-87|0:o;v=83;break}}else{ia=o;v=83}}while(0);if((v|0)==83){v=0;o=0;do{if(!((K|0)<(o|0)|(K|0)==(o|0)&M>>>0<8>>>0)){u=0;if((K|0)<(u|0)|(K|0)==(u|0)&M>>>0<14>>>0){ja=S*.0625;ka=R;la=ja;ma=T+ja*+(ia|0);na=U;break}if((ia|0)==0|(R|0)!=0){ka=R;la=S;ma=T;na=U}else{ka=1;la=S;ma=T+S*.5;na=U}}else{ka=R;la=S;ma=T;na=ia+(U<<4)|0}}while(0);o=ju(M,K,1,0)|0;Z=L;_=o;$=N;aa=O;ba=1;ca=Q;da=ka;ea=la;fa=ma;ga=na}o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;J=d[o]|0;K=Z;M=_;N=$;O=aa;P=ba;Q=ca;R=da;S=ea;T=fa;U=ga;continue}else{J=Vt(b)|0;K=Z;M=_;N=$;O=aa;P=ba;Q=ca;R=da;S=ea;T=fa;U=ga;continue}}if((P|0)==0){o=(c[m>>2]|0)==0;if(!o){c[e>>2]=(c[e>>2]|0)-1}if((f|0)!=0){if(!o?(o=c[e>>2]|0,c[e>>2]=o-1,(Q|0)!=0):0){c[e>>2]=o-2}}else{Ut(b,0)}l=+(r|0)*0.0;i=g;return+l}o=(Q|0)==0;u=o?M:O;n=o?K:N;o=0;if((K|0)<(o|0)|(K|0)==(o|0)&M>>>0<8>>>0){o=U;q=K;p=M;while(1){oa=o<<4;pa=ju(p,q,1,0)|0;qa=L;ra=0;if((qa|0)<(ra|0)|(qa|0)==(ra|0)&pa>>>0<8>>>0){o=oa;q=qa;p=pa}else{sa=oa;break}}}else{sa=U}do{if((Y|32|0)==112){p=cu(b,f)|0;q=L;if((p|0)==0&(q|0)==(-2147483648|0)){if((f|0)==0){Ut(b,0);l=0.0;i=g;return+l}else{if((c[m>>2]|0)==0){ta=0;ua=0;break}c[e>>2]=(c[e>>2]|0)-1;ta=0;ua=0;break}}else{ta=q;ua=p}}else{if((c[m>>2]|0)==0){ta=0;ua=0}else{c[e>>2]=(c[e>>2]|0)-1;ta=0;ua=0}}}while(0);p=ju(u<<2|0>>>30,n<<2|u>>>30,-32,-1)|0;q=ju(p,L,ua,ta)|0;p=L;if((sa|0)==0){l=+(r|0)*0.0;i=g;return+l}o=0;if((p|0)>(o|0)|(p|0)==(o|0)&q>>>0>(-j|0)>>>0){c[(Bc()|0)>>2]=34;l=+(r|0)*1.7976931348623157e+308*1.7976931348623157e+308;i=g;return+l}o=j-106|0;oa=(o|0)<0|0?-1:0;if((p|0)<(oa|0)|(p|0)==(oa|0)&q>>>0<o>>>0){c[(Bc()|0)>>2]=34;l=+(r|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return+l}if((sa|0)>-1){o=sa;ja=T;oa=p;pa=q;while(1){qa=o<<1;if(ja<.5){va=ja;wa=qa}else{va=ja+-1.0;wa=qa|1}xa=ja+va;qa=ju(pa,oa,-1,-1)|0;ra=L;if((wa|0)>-1){o=wa;ja=xa;oa=ra;pa=qa}else{ya=wa;za=xa;Aa=ra;Ba=qa;break}}}else{ya=sa;za=T;Aa=p;Ba=q}pa=0;oa=ku(32,0,j,(j|0)<0|0?-1:0)|0;o=ju(Ba,Aa,oa,L)|0;oa=L;if((pa|0)>(oa|0)|(pa|0)==(oa|0)&k>>>0>o>>>0){oa=o;if((oa|0)<0){Ca=0;v=126}else{Da=oa;v=124}}else{Da=k;v=124}if((v|0)==124){if((Da|0)<53){Ca=Da;v=126}else{Ea=0.0;Fa=Da;Ga=+(r|0)}}if((v|0)==126){ja=+(r|0);Ea=+Wb(+(+Wt(1.0,84-Ca|0)),+ja);Fa=Ca;Ga=ja}oa=(Fa|0)<32&za!=0.0&(ya&1|0)==0;ja=Ga*(oa?0.0:za)+(Ea+Ga*+(((oa&1)+ya|0)>>>0>>>0))-Ea;if(!(ja!=0.0)){c[(Bc()|0)>>2]=34}l=+Xt(ja,Ba);i=g;return+l}else{G=y}}while(0);oa=j+k|0;o=-oa|0;pa=G;u=0;while(1){if((pa|0)==46){v=137;break}else if((pa|0)!=48){Ha=pa;Ia=0;Ja=u;Ka=0;La=0;break}n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;pa=d[n]|0;u=1;continue}else{pa=Vt(b)|0;u=1;continue}}if((v|0)==137){pa=c[e>>2]|0;if(pa>>>0<(c[m>>2]|0)>>>0){c[e>>2]=pa+1;Ma=d[pa]|0}else{Ma=Vt(b)|0}if((Ma|0)==48){pa=0;n=0;while(1){qa=ju(n,pa,-1,-1)|0;ra=L;Na=c[e>>2]|0;if(Na>>>0<(c[m>>2]|0)>>>0){c[e>>2]=Na+1;Oa=d[Na]|0}else{Oa=Vt(b)|0}if((Oa|0)==48){pa=ra;n=qa}else{Ha=Oa;Ia=1;Ja=1;Ka=ra;La=qa;break}}}else{Ha=Ma;Ia=1;Ja=u;Ka=0;La=0}}n=h|0;c[n>>2]=0;pa=Ha-48|0;qa=(Ha|0)==46;c:do{if(pa>>>0<10>>>0|qa){ra=h+496|0;Na=Ka;Pa=La;Qa=0;Ra=0;Sa=0;Ta=Ja;Ua=Ia;Va=0;Xa=0;Ya=Ha;Za=pa;_a=qa;d:while(1){do{if(_a){if((Ua|0)==0){$a=Xa;ab=Va;bb=1;cb=Ta;db=Sa;fb=Qa;gb=Ra;hb=Qa;ib=Ra}else{break d}}else{jb=ju(Ra,Qa,1,0)|0;kb=L;lb=(Ya|0)!=48;if((Va|0)>=125){if(!lb){$a=Xa;ab=Va;bb=Ua;cb=Ta;db=Sa;fb=kb;gb=jb;hb=Na;ib=Pa;break}c[ra>>2]=c[ra>>2]|1;$a=Xa;ab=Va;bb=Ua;cb=Ta;db=Sa;fb=kb;gb=jb;hb=Na;ib=Pa;break}mb=h+(Va<<2)|0;if((Xa|0)==0){nb=Za}else{nb=Ya-48+((c[mb>>2]|0)*10|0)|0}c[mb>>2]=nb;mb=Xa+1|0;ob=(mb|0)==9;$a=ob?0:mb;ab=(ob&1)+Va|0;bb=Ua;cb=1;db=lb?jb:Sa;fb=kb;gb=jb;hb=Na;ib=Pa}}while(0);jb=c[e>>2]|0;if(jb>>>0<(c[m>>2]|0)>>>0){c[e>>2]=jb+1;pb=d[jb]|0}else{pb=Vt(b)|0}jb=pb-48|0;kb=(pb|0)==46;if(jb>>>0<10>>>0|kb){Na=hb;Pa=ib;Qa=fb;Ra=gb;Sa=db;Ta=cb;Ua=bb;Va=ab;Xa=$a;Ya=pb;Za=jb;_a=kb}else{qb=hb;rb=ib;sb=fb;tb=gb;ub=db;vb=cb;wb=bb;xb=ab;yb=$a;zb=pb;v=160;break c}}Ab=(Ta|0)!=0;Bb=Na;Cb=Pa;Db=Qa;Eb=Ra;Fb=Sa;Gb=Va;Hb=Xa;v=168}else{qb=Ka;rb=La;sb=0;tb=0;ub=0;vb=Ja;wb=Ia;xb=0;yb=0;zb=Ha;v=160}}while(0);do{if((v|0)==160){qa=(wb|0)==0;pa=qa?tb:rb;u=qa?sb:qb;qa=(vb|0)!=0;if(!(qa&(zb|32|0)==101)){if((zb|0)>-1){Ab=qa;Bb=u;Cb=pa;Db=sb;Eb=tb;Fb=ub;Gb=xb;Hb=yb;v=168;break}else{Ib=u;Jb=pa;Kb=qa;Lb=sb;Mb=tb;Nb=ub;Ob=xb;Pb=yb;v=170;break}}qa=cu(b,f)|0;_a=L;do{if((qa|0)==0&(_a|0)==(-2147483648|0)){if((f|0)==0){Ut(b,0);l=0.0;i=g;return+l}else{if((c[m>>2]|0)==0){Qb=0;Rb=0;break}c[e>>2]=(c[e>>2]|0)-1;Qb=0;Rb=0;break}}else{Qb=_a;Rb=qa}}while(0);qa=ju(Rb,Qb,pa,u)|0;Sb=L;Tb=qa;Ub=sb;Vb=tb;Xb=ub;Yb=xb;Zb=yb}}while(0);if((v|0)==168){if((c[m>>2]|0)!=0){c[e>>2]=(c[e>>2]|0)-1;if(Ab){Sb=Bb;Tb=Cb;Ub=Db;Vb=Eb;Xb=Fb;Yb=Gb;Zb=Hb}else{v=171}}else{Ib=Bb;Jb=Cb;Kb=Ab;Lb=Db;Mb=Eb;Nb=Fb;Ob=Gb;Pb=Hb;v=170}}if((v|0)==170){if(Kb){Sb=Ib;Tb=Jb;Ub=Lb;Vb=Mb;Xb=Nb;Yb=Ob;Zb=Pb}else{v=171}}if((v|0)==171){c[(Bc()|0)>>2]=22;Ut(b,0);l=0.0;i=g;return+l}qa=c[n>>2]|0;if((qa|0)==0){l=+(r|0)*0.0;i=g;return+l}_a=0;if((Tb|0)==(Vb|0)&(Sb|0)==(Ub|0)&((Ub|0)<(_a|0)|(Ub|0)==(_a|0)&Vb>>>0<10>>>0)?k>>>0>30>>>0|(qa>>>(k>>>0)|0)==0:0){l=+(r|0)*+(qa>>>0>>>0);i=g;return+l}qa=(j|0)/-2|0;_a=(qa|0)<0|0?-1:0;if((Sb|0)>(_a|0)|(Sb|0)==(_a|0)&Tb>>>0>qa>>>0){c[(Bc()|0)>>2]=34;l=+(r|0)*1.7976931348623157e+308*1.7976931348623157e+308;i=g;return+l}qa=j-106|0;_a=(qa|0)<0|0?-1:0;if((Sb|0)<(_a|0)|(Sb|0)==(_a|0)&Tb>>>0<qa>>>0){c[(Bc()|0)>>2]=34;l=+(r|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return+l}if((Zb|0)==0){_b=Yb}else{if((Zb|0)<9){qa=h+(Yb<<2)|0;_a=Zb;Xa=c[qa>>2]|0;do{Xa=Xa*10|0;_a=_a+1|0}while((_a|0)<9);c[qa>>2]=Xa}_b=Yb+1|0}_a=Tb;if((Xb|0)<9?(Xb|0)<=(_a|0)&(_a|0)<18:0){if((_a|0)==9){l=+(r|0)*+((c[n>>2]|0)>>>0>>>0);i=g;return+l}if((_a|0)<9){l=+(r|0)*+((c[n>>2]|0)>>>0>>>0)/+(c[16+(8-_a<<2)>>2]|0);i=g;return+l}Va=k+27+(_a*-3|0)|0;Sa=c[n>>2]|0;if((Va|0)>30|(Sa>>>(Va>>>0)|0)==0){l=+(r|0)*+(Sa>>>0>>>0)*+(c[16+(_a-10<<2)>>2]|0);i=g;return+l}}Sa=(_a|0)%9|0;if((Sa|0)==0){$b=0;ac=_b;bc=0;cc=_a}else{Va=(_a|0)>-1?Sa:Sa+9|0;Sa=c[16+(8-Va<<2)>>2]|0;if((_b|0)!=0){Ra=1e9/(Sa|0)|0;Qa=_a;Pa=0;Na=0;Ta=0;while(1){Za=h+(Na<<2)|0;Ya=c[Za>>2]|0;Ua=((Ya>>>0)/(Sa>>>0)|0)+Ta|0;c[Za>>2]=Ua;Ta=ha((Ya>>>0)%(Sa>>>0)|0,Ra)|0;Ya=Na;Na=Na+1|0;if((Ya|0)==(Pa|0)&(Ua|0)==0){dc=Na&127;ec=Qa-9|0}else{dc=Pa;ec=Qa}if((Na|0)==(_b|0)){break}else{Qa=ec;Pa=dc}}if((Ta|0)==0){fc=_b;gc=dc;hc=ec}else{c[h+(_b<<2)>>2]=Ta;fc=_b+1|0;gc=dc;hc=ec}}else{fc=0;gc=0;hc=_a}$b=gc;ac=fc;bc=0;cc=9-Va+hc|0}e:while(1){Pa=h+($b<<2)|0;if((cc|0)<18){Qa=ac;Na=bc;while(1){Ra=0;Sa=Qa+127|0;n=Qa;while(1){Xa=Sa&127;qa=h+(Xa<<2)|0;Ua=c[qa>>2]|0;Ya=ju(Ua<<29|0>>>3,0<<29|Ua>>>3,Ra,0)|0;Ua=L;Za=0;if(Ua>>>0>Za>>>0|Ua>>>0==Za>>>0&Ya>>>0>1e9>>>0){Za=tu(Ya,Ua,1e9,0)|0;ra=uu(Ya,Ua,1e9,0)|0;ic=Za;jc=ra}else{ic=0;jc=Ya}c[qa>>2]=jc;qa=(Xa|0)==($b|0);if((Xa|0)!=(n+127&127|0)|qa){kc=n}else{kc=(jc|0)==0?Xa:n}if(qa){break}else{Ra=ic;Sa=Xa-1|0;n=kc}}n=Na-29|0;if((ic|0)==0){Qa=kc;Na=n}else{lc=n;mc=kc;nc=ic;break}}}else{if((cc|0)==18){oc=ac;pc=bc}else{qc=$b;rc=ac;sc=bc;tc=cc;break}while(1){if(!((c[Pa>>2]|0)>>>0<9007199>>>0)){qc=$b;rc=oc;sc=pc;tc=18;break e}Na=0;Qa=oc+127|0;u=oc;while(1){pa=Qa&127;n=h+(pa<<2)|0;Sa=c[n>>2]|0;Ra=ju(Sa<<29|0>>>3,0<<29|Sa>>>3,Na,0)|0;Sa=L;Xa=0;if(Sa>>>0>Xa>>>0|Sa>>>0==Xa>>>0&Ra>>>0>1e9>>>0){Xa=tu(Ra,Sa,1e9,0)|0;qa=uu(Ra,Sa,1e9,0)|0;uc=Xa;vc=qa}else{uc=0;vc=Ra}c[n>>2]=vc;n=(pa|0)==($b|0);if((pa|0)!=(u+127&127|0)|n){wc=u}else{wc=(vc|0)==0?pa:u}if(n){break}else{Na=uc;Qa=pa-1|0;u=wc}}u=pc-29|0;if((uc|0)==0){oc=wc;pc=u}else{lc=u;mc=wc;nc=uc;break}}}Pa=$b+127&127;if((Pa|0)==(mc|0)){u=mc+127&127;Qa=h+((mc+126&127)<<2)|0;c[Qa>>2]=c[Qa>>2]|c[h+(u<<2)>>2];xc=u}else{xc=mc}c[h+(Pa<<2)>>2]=nc;$b=Pa;ac=xc;bc=lc;cc=cc+9|0}f:while(1){yc=rc+1&127;Va=h+((rc+127&127)<<2)|0;_a=qc;Ta=sc;Pa=tc;while(1){u=(Pa|0)==18;Qa=(Pa|0)>27?9:1;zc=_a;Ac=Ta;while(1){Na=0;while(1){pa=Na+zc&127;if((pa|0)==(rc|0)){Cc=2;break}n=c[h+(pa<<2)>>2]|0;pa=c[8+(Na<<2)>>2]|0;if(n>>>0<pa>>>0){Cc=2;break}Ra=Na+1|0;if(n>>>0>pa>>>0){Cc=Na;break}if((Ra|0)<2){Na=Ra}else{Cc=Ra;break}}if((Cc|0)==2&u){break f}Dc=Qa+Ac|0;if((zc|0)==(rc|0)){zc=rc;Ac=Dc}else{break}}u=(1<<Qa)-1|0;Na=1e9>>>(Qa>>>0);Ec=Pa;Fc=zc;Ra=zc;Gc=0;do{pa=h+(Ra<<2)|0;n=c[pa>>2]|0;qa=(n>>>(Qa>>>0))+Gc|0;c[pa>>2]=qa;Gc=ha(n&u,Na)|0;n=(Ra|0)==(Fc|0)&(qa|0)==0;Ra=Ra+1&127;Ec=n?Ec-9|0:Ec;Fc=n?Ra:Fc}while((Ra|0)!=(rc|0));if((Gc|0)==0){_a=Fc;Ta=Dc;Pa=Ec;continue}if((yc|0)!=(Fc|0)){break}c[Va>>2]=c[Va>>2]|1;_a=Fc;Ta=Dc;Pa=Ec}c[h+(rc<<2)>>2]=Gc;qc=Fc;rc=yc;sc=Dc;tc=Ec}Pa=zc&127;if((Pa|0)==(rc|0)){c[h+(yc-1<<2)>>2]=0;Hc=yc}else{Hc=rc}ja=+((c[h+(Pa<<2)>>2]|0)>>>0>>>0);Pa=zc+1&127;if((Pa|0)==(Hc|0)){Ta=Hc+1&127;c[h+(Ta-1<<2)>>2]=0;Ic=Ta}else{Ic=Hc}xa=+(r|0);Jc=xa*(ja*1.0e9+ +((c[h+(Pa<<2)>>2]|0)>>>0>>>0));Pa=Ac+53|0;Ta=Pa-j|0;if((Ta|0)<(k|0)){if((Ta|0)<0){Kc=1;Lc=0;v=244}else{Mc=Ta;Nc=1;v=243}}else{Mc=k;Nc=0;v=243}if((v|0)==243){if((Mc|0)<53){Kc=Nc;Lc=Mc;v=244}else{Oc=0.0;Pc=0.0;Qc=Jc;Rc=Nc;Sc=Mc}}if((v|0)==244){ja=+Wb(+(+Wt(1.0,105-Lc|0)),+Jc);Tc=+eb(+Jc,+(+Wt(1.0,53-Lc|0)));Oc=ja;Pc=Tc;Qc=ja+(Jc-Tc);Rc=Kc;Sc=Lc}_a=zc+2&127;if((_a|0)!=(Ic|0)){Va=c[h+(_a<<2)>>2]|0;do{if(!(Va>>>0<5e8>>>0)){if(Va>>>0>5e8>>>0){Uc=xa*.75+Pc;break}if((zc+3&127|0)==(Ic|0)){Uc=xa*.5+Pc;break}else{Uc=xa*.75+Pc;break}}else{if((Va|0)==0?(zc+3&127|0)==(Ic|0):0){Uc=Pc;break}Uc=xa*.25+Pc}}while(0);if((53-Sc|0)>1?!(+eb(+Uc,+1.0)!=0.0):0){Vc=Uc+1.0}else{Vc=Uc}}else{Vc=Pc}xa=Qc+Vc-Oc;do{if((Pa&2147483647|0)>(-2-oa|0)){if(+W(+xa)<9007199254740992.0){Wc=xa;Xc=Rc;Yc=Ac}else{Wc=xa*.5;Xc=(Rc|0)!=0&(Sc|0)==(Ta|0)?0:Rc;Yc=Ac+1|0}if((Yc+50|0)<=(o|0)?!((Xc|0)!=0&Vc!=0.0):0){Zc=Wc;_c=Yc;break}c[(Bc()|0)>>2]=34;Zc=Wc;_c=Yc}else{Zc=xa;_c=Ac}}while(0);l=+Xt(Zc,_c);i=g;return+l}else{if((c[m>>2]|0)!=0){c[e>>2]=(c[e>>2]|0)-1}c[(Bc()|0)>>2]=22;Ut(b,0);l=0.0;i=g;return+l}}}while(0);if((v|0)==23){v=(c[m>>2]|0)==0;if(!v){c[e>>2]=(c[e>>2]|0)-1}if(!(s>>>0<4>>>0|(f|0)==0|v)){v=s;do{c[e>>2]=(c[e>>2]|0)-1;v=v-1|0}while(v>>>0>3>>>0)}}l=+(r|0)*x;i=g;return+l}function Ut(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a+104>>2]=b;d=c[a+8>>2]|0;e=c[a+4>>2]|0;f=d-e|0;c[a+108>>2]=f;if((b|0)!=0&(f|0)>(b|0)){c[a+100>>2]=e+b;return}else{c[a+100>>2]=d;return}}function Vt(b){b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=b+104|0;f=c[e>>2]|0;if(!((f|0)!=0?(c[b+108>>2]|0)>=(f|0):0)){g=3}if((g|0)==3?(g=Zt(b)|0,(g|0)>=0):0){f=c[e>>2]|0;e=c[b+8>>2]|0;if((f|0)!=0?(h=c[b+4>>2]|0,i=f-(c[b+108>>2]|0)-1|0,(e-h|0)>(i|0)):0){c[b+100>>2]=h+i}else{c[b+100>>2]=e}i=c[b+4>>2]|0;if((e|0)!=0){h=b+108|0;c[h>>2]=e+1-i+(c[h>>2]|0)}h=i-1|0;if((d[h]|0|0)==(g|0)){j=g;return j|0}a[h]=g;j=g;return j|0}c[b+100>>2]=0;j=-1;return j|0}function Wt(a,b){a=+a;b=b|0;var d=0.0,e=0,f=0,g=0.0,i=0;if((b|0)>1023){d=a*8.98846567431158e+307;e=b-1023|0;if((e|0)>1023){f=b-2046|0;g=d*8.98846567431158e+307;i=(f|0)>1023?1023:f}else{g=d;i=e}}else{if((b|0)<-1022){d=a*2.2250738585072014e-308;e=b+1022|0;if((e|0)<-1022){f=b+2044|0;g=d*2.2250738585072014e-308;i=(f|0)<-1022?-1022:f}else{g=d;i=e}}else{g=a;i=b}}return+(g*(c[k>>2]=0<<20|0>>>12,c[k+4>>2]=i+1023<<20|0>>>12,+h[k>>3]))}function Xt(a,b){a=+a;b=b|0;return+(+Wt(a,b))}function Yt(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=b+74|0;e=a[d]|0;a[d]=e-1&255|e;e=b+20|0;d=b+44|0;if((c[e>>2]|0)>>>0>(c[d>>2]|0)>>>0){Cd[c[b+36>>2]&63](b,0,0)|0}c[b+16>>2]=0;c[b+28>>2]=0;c[e>>2]=0;e=b|0;f=c[e>>2]|0;if((f&20|0)==0){g=c[d>>2]|0;c[b+8>>2]=g;c[b+4>>2]=g;h=0;return h|0}if((f&4|0)==0){h=-1;return h|0}c[e>>2]=f|32;h=-1;return h|0}function Zt(a){a=a|0;var b=0,e=0,f=0;b=i;i=i+8|0;e=b|0;if((c[a+8>>2]|0)==0?(Yt(a)|0)!=0:0){f=-1}else{if((Cd[c[a+32>>2]&63](a,e,1)|0)==1){f=d[e]|0}else{f=-1}}i=b;return f|0}function _t(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0.0,j=0,k=0,l=0,m=0;d=i;i=i+112|0;e=d|0;eu(e|0,0,112)|0;f=e+4|0;c[f>>2]=a;g=e+8|0;c[g>>2]=-1;c[e+44>>2]=a;c[e+76>>2]=-1;Ut(e,0);h=+Tt(e,2,1);j=(c[f>>2]|0)-(c[g>>2]|0)+(c[e+108>>2]|0)|0;if((b|0)==0){k=112;l=0;i=d;return+h}if((j|0)==0){m=a}else{m=a+j|0}c[b>>2]=m;k=112;l=0;i=d;return+h}function $t(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;if((d|0)==0){e=0;return e|0}else{f=d;g=b;h=c}while(1){i=a[g]|0;j=a[h]|0;if(!(i<<24>>24==j<<24>>24)){break}c=f-1|0;if((c|0)==0){e=0;k=5;break}else{f=c;g=g+1|0;h=h+1|0}}if((k|0)==5){return e|0}e=(i&255)-(j&255)|0;return e|0}function au(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;d=a+4|0;e=c[d>>2]|0;f=e&-8;g=a;h=g+f|0;i=h;j=c[5578]|0;k=e&3;if(!((k|0)!=1&g>>>0>=j>>>0&g>>>0<h>>>0)){Uc();return 0}l=g+(f|4)|0;m=c[l>>2]|0;if((m&1|0)==0){Uc();return 0}if((k|0)==0){if(b>>>0<256>>>0){n=0;return n|0}if(!(f>>>0<(b+4|0)>>>0)?!((f-b|0)>>>0>c[5518]<<1>>>0):0){n=a;return n|0}n=0;return n|0}if(!(f>>>0<b>>>0)){k=f-b|0;if(!(k>>>0>15>>>0)){n=a;return n|0}c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|3;c[l>>2]=c[l>>2]|1;bu(g+b|0,k);n=a;return n|0}if((i|0)==(c[5580]|0)){k=(c[5577]|0)+f|0;if(!(k>>>0>b>>>0)){n=0;return n|0}l=k-b|0;c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=l|1;c[5580]=g+b;c[5577]=l;n=a;return n|0}if((i|0)==(c[5579]|0)){l=(c[5576]|0)+f|0;if(l>>>0<b>>>0){n=0;return n|0}k=l-b|0;if(k>>>0>15>>>0){c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|1;c[g+l>>2]=k;o=g+(l+4)|0;c[o>>2]=c[o>>2]&-2;p=g+b|0;q=k}else{c[d>>2]=e&1|l|2;k=g+(l+4)|0;c[k>>2]=c[k>>2]|1;p=0;q=0}c[5576]=q;c[5579]=p;n=a;return n|0}if((m&2|0)!=0){n=0;return n|0}p=(m&-8)+f|0;if(p>>>0<b>>>0){n=0;return n|0}q=p-b|0;k=m>>>3;do{if(!(m>>>0<256>>>0)){l=h;o=c[g+(f+24)>>2]|0;r=c[g+(f+12)>>2]|0;do{if((r|0)==(l|0)){s=g+(f+20)|0;t=c[s>>2]|0;if((t|0)==0){u=g+(f+16)|0;v=c[u>>2]|0;if((v|0)==0){w=0;break}else{x=v;y=u}}else{x=t;y=s}while(1){s=x+20|0;t=c[s>>2]|0;if((t|0)!=0){x=t;y=s;continue}s=x+16|0;t=c[s>>2]|0;if((t|0)==0){break}else{x=t;y=s}}if(y>>>0<j>>>0){Uc();return 0}else{c[y>>2]=0;w=x;break}}else{s=c[g+(f+8)>>2]|0;if(s>>>0<j>>>0){Uc();return 0}t=s+12|0;if((c[t>>2]|0)!=(l|0)){Uc();return 0}u=r+8|0;if((c[u>>2]|0)==(l|0)){c[t>>2]=r;c[u>>2]=s;w=r;break}else{Uc();return 0}}}while(0);if((o|0)!=0){r=c[g+(f+28)>>2]|0;s=22600+(r<<2)|0;if((l|0)==(c[s>>2]|0)){c[s>>2]=w;if((w|0)==0){c[5575]=c[5575]&~(1<<r);break}}else{if(o>>>0<(c[5578]|0)>>>0){Uc();return 0}r=o+16|0;if((c[r>>2]|0)==(l|0)){c[r>>2]=w}else{c[o+20>>2]=w}if((w|0)==0){break}}r=c[5578]|0;if(w>>>0<r>>>0){Uc();return 0}c[w+24>>2]=o;s=c[g+(f+16)>>2]|0;do{if((s|0)!=0){if(s>>>0<r>>>0){Uc();return 0}else{c[w+16>>2]=s;c[s+24>>2]=w;break}}}while(0);s=c[g+(f+20)>>2]|0;if((s|0)!=0){if(s>>>0<(c[5578]|0)>>>0){Uc();return 0}else{c[w+20>>2]=s;c[s+24>>2]=w;break}}}}else{s=c[g+(f+8)>>2]|0;r=c[g+(f+12)>>2]|0;o=22336+(k<<1<<2)|0;if((s|0)!=(o|0)){if(s>>>0<j>>>0){Uc();return 0}if((c[s+12>>2]|0)!=(i|0)){Uc();return 0}}if((r|0)==(s|0)){c[5574]=c[5574]&~(1<<k);break}if((r|0)!=(o|0)){if(r>>>0<j>>>0){Uc();return 0}o=r+8|0;if((c[o>>2]|0)==(i|0)){z=o}else{Uc();return 0}}else{z=r+8|0}c[s+12>>2]=r;c[z>>2]=s}}while(0);if(q>>>0<16>>>0){c[d>>2]=p|e&1|2;z=g+(p|4)|0;c[z>>2]=c[z>>2]|1;n=a;return n|0}else{c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=q|3;e=g+(p|4)|0;c[e>>2]=c[e>>2]|1;bu(g+b|0,q);n=a;return n|0}return 0}function bu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;d=a;e=d+b|0;f=e;g=c[a+4>>2]|0;do{if((g&1|0)==0){h=c[a>>2]|0;if((g&3|0)==0){return}i=d+(-h|0)|0;j=i;k=h+b|0;l=c[5578]|0;if(i>>>0<l>>>0){Uc()}if((j|0)==(c[5579]|0)){m=d+(b+4)|0;n=c[m>>2]|0;if((n&3|0)!=3){o=j;p=k;break}c[5576]=k;c[m>>2]=n&-2;c[d+(4-h)>>2]=k|1;c[e>>2]=k;return}n=h>>>3;if(h>>>0<256>>>0){m=c[d+(8-h)>>2]|0;q=c[d+(12-h)>>2]|0;r=22336+(n<<1<<2)|0;if((m|0)!=(r|0)){if(m>>>0<l>>>0){Uc()}if((c[m+12>>2]|0)!=(j|0)){Uc()}}if((q|0)==(m|0)){c[5574]=c[5574]&~(1<<n);o=j;p=k;break}if((q|0)!=(r|0)){if(q>>>0<l>>>0){Uc()}r=q+8|0;if((c[r>>2]|0)==(j|0)){s=r}else{Uc()}}else{s=q+8|0}c[m+12>>2]=q;c[s>>2]=m;o=j;p=k;break}m=i;i=c[d+(24-h)>>2]|0;q=c[d+(12-h)>>2]|0;do{if((q|0)==(m|0)){r=16-h|0;n=d+(r+4)|0;t=c[n>>2]|0;if((t|0)==0){u=d+r|0;r=c[u>>2]|0;if((r|0)==0){v=0;break}else{w=r;x=u}}else{w=t;x=n}while(1){n=w+20|0;t=c[n>>2]|0;if((t|0)!=0){w=t;x=n;continue}n=w+16|0;t=c[n>>2]|0;if((t|0)==0){break}else{w=t;x=n}}if(x>>>0<l>>>0){Uc()}else{c[x>>2]=0;v=w;break}}else{n=c[d+(8-h)>>2]|0;if(n>>>0<l>>>0){Uc()}t=n+12|0;if((c[t>>2]|0)!=(m|0)){Uc()}u=q+8|0;if((c[u>>2]|0)==(m|0)){c[t>>2]=q;c[u>>2]=n;v=q;break}else{Uc()}}}while(0);if((i|0)!=0){q=c[d+(28-h)>>2]|0;l=22600+(q<<2)|0;if((m|0)==(c[l>>2]|0)){c[l>>2]=v;if((v|0)==0){c[5575]=c[5575]&~(1<<q);o=j;p=k;break}}else{if(i>>>0<(c[5578]|0)>>>0){Uc()}q=i+16|0;if((c[q>>2]|0)==(m|0)){c[q>>2]=v}else{c[i+20>>2]=v}if((v|0)==0){o=j;p=k;break}}q=c[5578]|0;if(v>>>0<q>>>0){Uc()}c[v+24>>2]=i;l=16-h|0;n=c[d+l>>2]|0;do{if((n|0)!=0){if(n>>>0<q>>>0){Uc()}else{c[v+16>>2]=n;c[n+24>>2]=v;break}}}while(0);n=c[d+(l+4)>>2]|0;if((n|0)!=0){if(n>>>0<(c[5578]|0)>>>0){Uc()}else{c[v+20>>2]=n;c[n+24>>2]=v;o=j;p=k;break}}else{o=j;p=k}}else{o=j;p=k}}else{o=a;p=b}}while(0);a=c[5578]|0;if(e>>>0<a>>>0){Uc()}v=d+(b+4)|0;w=c[v>>2]|0;if((w&2|0)==0){if((f|0)==(c[5580]|0)){x=(c[5577]|0)+p|0;c[5577]=x;c[5580]=o;c[o+4>>2]=x|1;if((o|0)!=(c[5579]|0)){return}c[5579]=0;c[5576]=0;return}if((f|0)==(c[5579]|0)){x=(c[5576]|0)+p|0;c[5576]=x;c[5579]=o;c[o+4>>2]=x|1;c[o+x>>2]=x;return}x=(w&-8)+p|0;s=w>>>3;do{if(!(w>>>0<256>>>0)){g=e;n=c[d+(b+24)>>2]|0;q=c[d+(b+12)>>2]|0;do{if((q|0)==(g|0)){h=d+(b+20)|0;i=c[h>>2]|0;if((i|0)==0){m=d+(b+16)|0;u=c[m>>2]|0;if((u|0)==0){y=0;break}else{z=u;A=m}}else{z=i;A=h}while(1){h=z+20|0;i=c[h>>2]|0;if((i|0)!=0){z=i;A=h;continue}h=z+16|0;i=c[h>>2]|0;if((i|0)==0){break}else{z=i;A=h}}if(A>>>0<a>>>0){Uc()}else{c[A>>2]=0;y=z;break}}else{h=c[d+(b+8)>>2]|0;if(h>>>0<a>>>0){Uc()}i=h+12|0;if((c[i>>2]|0)!=(g|0)){Uc()}m=q+8|0;if((c[m>>2]|0)==(g|0)){c[i>>2]=q;c[m>>2]=h;y=q;break}else{Uc()}}}while(0);if((n|0)!=0){q=c[d+(b+28)>>2]|0;k=22600+(q<<2)|0;if((g|0)==(c[k>>2]|0)){c[k>>2]=y;if((y|0)==0){c[5575]=c[5575]&~(1<<q);break}}else{if(n>>>0<(c[5578]|0)>>>0){Uc()}q=n+16|0;if((c[q>>2]|0)==(g|0)){c[q>>2]=y}else{c[n+20>>2]=y}if((y|0)==0){break}}q=c[5578]|0;if(y>>>0<q>>>0){Uc()}c[y+24>>2]=n;k=c[d+(b+16)>>2]|0;do{if((k|0)!=0){if(k>>>0<q>>>0){Uc()}else{c[y+16>>2]=k;c[k+24>>2]=y;break}}}while(0);k=c[d+(b+20)>>2]|0;if((k|0)!=0){if(k>>>0<(c[5578]|0)>>>0){Uc()}else{c[y+20>>2]=k;c[k+24>>2]=y;break}}}}else{k=c[d+(b+8)>>2]|0;q=c[d+(b+12)>>2]|0;n=22336+(s<<1<<2)|0;if((k|0)!=(n|0)){if(k>>>0<a>>>0){Uc()}if((c[k+12>>2]|0)!=(f|0)){Uc()}}if((q|0)==(k|0)){c[5574]=c[5574]&~(1<<s);break}if((q|0)!=(n|0)){if(q>>>0<a>>>0){Uc()}n=q+8|0;if((c[n>>2]|0)==(f|0)){B=n}else{Uc()}}else{B=q+8|0}c[k+12>>2]=q;c[B>>2]=k}}while(0);c[o+4>>2]=x|1;c[o+x>>2]=x;if((o|0)==(c[5579]|0)){c[5576]=x;return}else{C=x}}else{c[v>>2]=w&-2;c[o+4>>2]=p|1;c[o+p>>2]=p;C=p}p=C>>>3;if(C>>>0<256>>>0){w=p<<1;v=22336+(w<<2)|0;x=c[5574]|0;B=1<<p;if((x&B|0)!=0){p=22336+(w+2<<2)|0;f=c[p>>2]|0;if(f>>>0<(c[5578]|0)>>>0){Uc()}else{D=f;E=p}}else{c[5574]=x|B;D=v;E=22336+(w+2<<2)|0}c[E>>2]=o;c[D+12>>2]=o;c[o+8>>2]=D;c[o+12>>2]=v;return}v=o;D=C>>>8;if((D|0)!=0){if(C>>>0>16777215>>>0){F=31}else{E=(D+1048320|0)>>>16&8;w=D<<E;D=(w+520192|0)>>>16&4;B=w<<D;w=(B+245760|0)>>>16&2;x=14-(D|E|w)+(B<<w>>>15)|0;F=C>>>((x+7|0)>>>0)&1|x<<1}}else{F=0}x=22600+(F<<2)|0;c[o+28>>2]=F;c[o+20>>2]=0;c[o+16>>2]=0;w=c[5575]|0;B=1<<F;if((w&B|0)==0){c[5575]=w|B;c[x>>2]=v;c[o+24>>2]=x;c[o+12>>2]=o;c[o+8>>2]=o;return}B=c[x>>2]|0;if((F|0)==31){G=0}else{G=25-(F>>>1)|0}a:do{if((c[B+4>>2]&-8|0)==(C|0)){H=B}else{F=B;x=C<<G;while(1){I=F+16+(x>>>31<<2)|0;w=c[I>>2]|0;if((w|0)==0){break}if((c[w+4>>2]&-8|0)==(C|0)){H=w;break a}else{F=w;x=x<<1}}if(I>>>0<(c[5578]|0)>>>0){Uc()}c[I>>2]=v;c[o+24>>2]=F;c[o+12>>2]=o;c[o+8>>2]=o;return}}while(0);I=H+8|0;C=c[I>>2]|0;G=c[5578]|0;if(!(H>>>0>=G>>>0&C>>>0>=G>>>0)){Uc()}c[C+12>>2]=v;c[I>>2]=v;c[o+8>>2]=C;c[o+12>>2]=H;c[o+24>>2]=0;return}function cu(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=a+4|0;f=c[e>>2]|0;g=a+100|0;if(f>>>0<(c[g>>2]|0)>>>0){c[e>>2]=f+1;h=d[f]|0}else{h=Vt(a)|0}if((h|0)==45|(h|0)==43){f=c[e>>2]|0;i=(h|0)==45|0;if(f>>>0<(c[g>>2]|0)>>>0){c[e>>2]=f+1;j=d[f]|0}else{j=Vt(a)|0}if((j-48|0)>>>0>9>>>0&(b|0)!=0?(c[g>>2]|0)!=0:0){c[e>>2]=(c[e>>2]|0)-1;k=i;l=j}else{k=i;l=j}}else{k=0;l=h}if((l-48|0)>>>0>9>>>0){if((c[g>>2]|0)==0){m=-2147483648;n=0;return(L=m,n)|0}c[e>>2]=(c[e>>2]|0)-1;m=-2147483648;n=0;return(L=m,n)|0}else{o=l;p=0}while(1){p=o-48+(p*10|0)|0;l=c[e>>2]|0;if(l>>>0<(c[g>>2]|0)>>>0){c[e>>2]=l+1;q=d[l]|0}else{q=Vt(a)|0}if(!((q-48|0)>>>0<10>>>0&(p|0)<214748364)){break}else{o=q}}o=p;l=(p|0)<0|0?-1:0;if((q-48|0)>>>0<10>>>0){p=q;h=l;j=o;while(1){i=su(j,h,10,0)|0;b=L;f=ju(p,(p|0)<0|0?-1:0,-48,-1)|0;r=ju(f,L,i,b)|0;b=L;i=c[e>>2]|0;if(i>>>0<(c[g>>2]|0)>>>0){c[e>>2]=i+1;s=d[i]|0}else{s=Vt(a)|0}i=21474836;if((s-48|0)>>>0<10>>>0&((b|0)<(i|0)|(b|0)==(i|0)&r>>>0<2061584302>>>0)){p=s;h=b;j=r}else{t=s;u=b;v=r;break}}}else{t=q;u=l;v=o}if((t-48|0)>>>0<10>>>0){do{t=c[e>>2]|0;if(t>>>0<(c[g>>2]|0)>>>0){c[e>>2]=t+1;w=d[t]|0}else{w=Vt(a)|0}}while((w-48|0)>>>0<10>>>0)}if((c[g>>2]|0)!=0){c[e>>2]=(c[e>>2]|0)-1}e=(k|0)!=0;k=ku(0,0,v,u)|0;m=e?L:u;n=e?k:v;return(L=m,n)|0}function du(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return Nb(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function eu(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;g=b&3;h=d|d<<8|d<<16|d<<24;i=f&~3;if(g){g=b+4-g|0;while((b|0)<(g|0)){a[b]=d;b=b+1|0}}while((b|0)<(i|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b]=d;b=b+1|0}return b-e|0}function fu(b){b=b|0;var c=0;c=b;while(a[c]|0){c=c+1|0}return c-b|0}function gu(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b]=a[c]|0}b=e}else{du(b,c,d)|0}return b|0}function hu(b){b=b|0;var c=0;c=a[n+(b>>>24)|0]|0;if((c|0)<8)return c|0;c=a[n+(b>>16&255)|0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>8&255)|0]|0;if((c|0)<8)return c+16|0;return(a[n+(b&255)|0]|0)+24|0}function iu(a){a=a|0;if((a|0)<65)return a|0;if((a|0)>90)return a|0;return a-65+97|0}function ju(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+c>>>0;return(L=b+d+(e>>>0<a>>>0|0)>>>0,e|0)|0}function ku(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=b-d>>>0;e=b-d-(c>>>0>a>>>0|0)>>>0;return(L=e,a-c>>>0|0)|0}function lu(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){L=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}L=a<<c-32;return 0}function mu(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){L=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}L=0;return b>>>c-32|0}function nu(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){L=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}L=(b|0)<0?-1:0;return b>>c-32|0}function ou(b){b=b|0;var c=0;c=a[m+(b&255)|0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)|0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)|0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)|0]|0)+24|0}function pu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=a&65535;d=b&65535;e=ha(d,c)|0;f=a>>>16;a=(e>>>16)+(ha(d,f)|0)|0;d=b>>>16;b=ha(d,c)|0;return(L=(a>>>16)+(ha(d,f)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|e&65535|0)|0}function qu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;g=d>>31|((d|0)<0?-1:0)<<1;h=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;i=ku(e^a,f^b,e,f)|0;b=L;a=g^e;e=h^f;f=ku((vu(i,b,ku(g^c,h^d,g,h)|0,L,0)|0)^a,L^e,a,e)|0;return f|0}function ru(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=b>>31|((b|0)<0?-1:0)<<1;j=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;l=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;m=ku(h^a,j^b,h,j)|0;b=L;vu(m,b,ku(k^d,l^e,k,l)|0,L,g)|0;l=ku(c[g>>2]^h,c[g+4>>2]^j,h,j)|0;j=L;i=f;return(L=j,l)|0}function su(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;a=c;c=pu(e,a)|0;f=L;return(L=(ha(b,a)|0)+(ha(d,e)|0)+f|f&0,c|0|0)|0}function tu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=vu(a,b,c,d,0)|0;return e|0}function uu(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+8|0;g=f|0;vu(a,b,d,e,g)|0;i=f;return(L=c[g+4>>2]|0,c[g>>2]|0)|0}function vu(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;g=a;h=b;i=h;j=d;k=e;l=k;if((i|0)==0){m=(f|0)!=0;if((l|0)==0){if(m){c[f>>2]=(g>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(g>>>0)/(j>>>0)>>>0;return(L=n,o)|0}else{if(!m){n=0;o=0;return(L=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;o=0;return(L=n,o)|0}}m=(l|0)==0;do{if((j|0)!=0){if(!m){p=(hu(l|0)|0)-(hu(i|0)|0)|0;if(p>>>0<=31){q=p+1|0;r=31-p|0;s=p-31>>31;t=q;u=g>>>(q>>>0)&s|i<<r;v=i>>>(q>>>0)&s;w=0;x=g<<r;break}if((f|0)==0){n=0;o=0;return(L=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(L=n,o)|0}r=j-1|0;if((r&j|0)!=0){s=(hu(j|0)|0)+33-(hu(i|0)|0)|0;q=64-s|0;p=32-s|0;y=p>>31;z=s-32|0;A=z>>31;t=s;u=p-1>>31&i>>>(z>>>0)|(i<<p|g>>>(s>>>0))&A;v=A&i>>>(s>>>0);w=g<<q&y;x=(i<<q|g>>>(z>>>0))&y|g<<p&s-33>>31;break}if((f|0)!=0){c[f>>2]=r&g;c[f+4>>2]=0}if((j|0)==1){n=h|b&0;o=a|0|0;return(L=n,o)|0}else{r=ou(j|0)|0;n=i>>>(r>>>0)|0;o=i<<32-r|g>>>(r>>>0)|0;return(L=n,o)|0}}else{if(m){if((f|0)!=0){c[f>>2]=(i>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(i>>>0)/(j>>>0)>>>0;return(L=n,o)|0}if((g|0)==0){if((f|0)!=0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(l>>>0)}n=0;o=(i>>>0)/(l>>>0)>>>0;return(L=n,o)|0}r=l-1|0;if((r&l|0)==0){if((f|0)!=0){c[f>>2]=a|0;c[f+4>>2]=r&i|b&0}n=0;o=i>>>((ou(l|0)|0)>>>0);return(L=n,o)|0}r=(hu(l|0)|0)-(hu(i|0)|0)|0;if(r>>>0<=30){s=r+1|0;p=31-r|0;t=s;u=i<<p|g>>>(s>>>0);v=i>>>(s>>>0);w=0;x=g<<p;break}if((f|0)==0){n=0;o=0;return(L=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(L=n,o)|0}}while(0);if((t|0)==0){B=x;C=w;D=v;E=u;F=0;G=0}else{b=d|0|0;d=k|e&0;e=ju(b,d,-1,-1)|0;k=L;h=x;x=w;w=v;v=u;u=t;t=0;do{a=h;h=x>>>31|h<<1;x=t|x<<1;g=v<<1|a>>>31|0;a=v>>>31|w<<1|0;ku(e,k,g,a)|0;i=L;l=i>>31|((i|0)<0?-1:0)<<1;t=l&1;v=ku(g,a,l&b,(((i|0)<0?-1:0)>>31|((i|0)<0?-1:0)<<1)&d)|0;w=L;u=u-1|0}while((u|0)!=0);B=h;C=x;D=w;E=v;F=0;G=t}t=C;C=0;if((f|0)!=0){c[f>>2]=E;c[f+4>>2]=D}n=(t|0)>>>31|(B|C)<<1|(C<<1|t>>>31)&0|F;o=(t<<1|0>>>31)&-2|G;return(L=n,o)|0}function wu(a){a=a|0;Tb(a|0)}function xu(a){a=a|0;return Qb(a|0)|0}function yu(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;wd[a&7](b|0,c|0,d|0,e|0,f|0)}function zu(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;xd[a&127](b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function Au(a){a=a|0;return yd[a&3]()|0}function Bu(a,b){a=a|0;b=b|0;zd[a&511](b|0)}function Cu(a,b,c){a=a|0;b=b|0;c=c|0;Ad[a&127](b|0,c|0)}function Du(a,b,c){a=a|0;b=b|0;c=c|0;return Bd[a&127](b|0,c|0)|0}function Eu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Cd[a&63](b|0,c|0,d|0)|0}function Fu(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=+h;Dd[a&7](b|0,c|0,d|0,e|0,f|0,g|0,+h)}function Gu(a,b){a=a|0;b=b|0;return Ed[a&255](b|0)|0}function Hu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Fd[a&15](b|0,c|0,d|0)}function Iu(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;Gd[a&15](b|0,c|0,d|0,e|0,f|0,+g)}function Ju(a){a=a|0;Hd[a&7]()}function Ku(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return Id[a&31](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function Lu(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;Jd[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function Mu(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;Kd[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function Nu(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;Ld[a&63](b|0,c|0,d|0,e|0,f|0,g|0)}function Ou(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Md[a&15](b|0,c|0,d|0,e|0)|0}function Pu(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Nd[a&31](b|0,c|0,d|0,e|0,f|0)|0}function Qu(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Od[a&31](b|0,c|0,d|0,e|0)}function Ru(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ia(0)}function Su(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ia(1)}function Tu(){ia(2);return 0}function Uu(a){a=a|0;ia(3)}function Vu(a,b){a=a|0;b=b|0;ia(4)}function Wu(a,b){a=a|0;b=b|0;ia(5);return 0}function Xu(a,b,c){a=a|0;b=b|0;c=c|0;ia(6);return 0}function Yu(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;ia(7)}function Zu(a){a=a|0;ia(8);return 0}function _u(a,b,c){a=a|0;b=b|0;c=c|0;ia(9)}function $u(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;ia(10)}function av(){ia(11)}function bv(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ia(12);return 0}function cv(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ia(13)}function dv(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ia(14)}function ev(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ia(15)}function fv(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ia(16);return 0}function gv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ia(17);return 0}function hv(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ia(18)}




// EMSCRIPTEN_END_FUNCS
var wd=[Ru,Ru,Et,Ru,Dt,Ru,Ct,Ru];var xd=[Su,Su,Hn,Su,Pn,Su,Rn,Su,tp,Su,un,Su,sn,Su,np,Su,Dn,Su,Sn,Su,Fn,Su,hn,Su,Um,Su,Gn,Su,Om,Su,Qn,Su,fn,Su,Pm,Su,Qm,Su,Mm,Su,Nm,Su,Hm,Su,Lm,Su,Km,Su,Tm,Su,Sm,Su,Rm,Su,Tn,Su,Bm,Su,En,Su,Dm,Su,zm,Su,Am,Su,Cm,Su,ym,Su,Gm,Su,Fm,Su,Em,Su,xm,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su,Su];var yd=[Tu,Tu,Hf,Tu];var zd=[Uu,Uu,Yg,Uu,jj,Uu,vm,Uu,zp,Uu,up,Uu,ik,Uu,on,Uu,Gg,Uu,pk,Uu,gl,Uu,Hs,Uu,nj,Uu,wr,Uu,wj,Uu,Sp,Uu,Dr,Uu,an,Uu,hk,Uu,Eq,Uu,nk,Uu,Im,Uu,qk,Uu,Ag,Uu,Kj,Uu,lm,Uu,im,Uu,Mi,Uu,xe,Uu,Qt,Uu,ik,Uu,Qp,Uu,eq,Uu,nk,Uu,Bg,Uu,Nn,Uu,Jm,Uu,ht,Uu,Lg,Uu,bm,Uu,Vg,Uu,vp,Uu,Li,Uu,bg,Uu,Rp,Uu,Ll,Uu,wm,Uu,rj,Uu,Is,Uu,Ao,Uu,Js,Uu,Jp,Uu,cg,Uu,Qi,Uu,mt,Uu,ze,Uu,tt,Uu,Mg,Uu,Wq,Uu,Vk,Uu,nk,Uu,Ji,Uu,Qj,Uu,Fs,Uu,rm,Uu,fo,Uu,Zq,Uu,Tp,Uu,Jt,Uu,yg,Uu,op,Uu,Vq,Uu,ot,Uu,Ql,Uu,hl,Uu,Bj,Uu,qm,Uu,$n,Uu,ik,Uu,qg,Uu,Xr,Uu,bn,Uu,mj,Uu,Xq,Uu,vj,Uu,Ak,Uu,Ug,Uu,Mq,Uu,mg,Uu,ij,Uu,ve,Uu,Bo,Uu,Sf,Uu,Qg,Uu,Hg,Uu,Pg,Uu,Kl,Uu,Xl,Uu,Xn,Uu,Mn,Uu,yf,Uu,Fj,Uu,jm,Uu,po,Uu,Pt,Uu,fl,Uu,Xg,Uu,Nf,Uu,Ip,Uu,cm,Uu,vl,Uu,rt,Uu,fg,Uu,oq,Uu,ye,Uu,jt,Uu,Ml,Uu,oe,Uu,hm,Uu,Wo,Uu,ck,Uu,Lo,Uu,dm,Uu,wu,Uu,nt,Uu,ee,Uu,Vj,Uu,ue,Uu,Np,Uu,Yn,Uu,dp,Uu,it,Uu,Uq,Uu,rg,Uu,Zo,Uu,pp,Uu,eo,Uu,nn,Uu,Aj,Uu,km,Uu,we,Uu,mm,Uu,Sl,Uu,Pj,Uu,yk,Uu,Dg,Uu,wf,Uu,wq,Uu,ip,Uu,ng,Uu,cp,Uu,Yq,Uu,xg,Uu,zg,Uu,Cg,Uu,Qe,Uu,Ej,Uu,Ii,Uu,jt,Uu,st,Uu,Wl,Uu,$f,Uu,wg,Uu,eg,Uu,zk,Uu,Jl,Uu,dg,Uu,wl,Uu,Ir,Uu,Of,Uu,am,Uu,gg,Uu,pt,Uu,cl,Uu,Vl,Uu,Nr,Uu,Lp,Uu,Sr,Uu,Mo,Uu,Wj,Uu,An,Uu,qo,Uu,yr,Uu,Gs,Uu,sj,Uu,Rl,Uu,ul,Uu,Ul,Uu,Pi,Uu,Ks,Uu,Bn,Uu,qt,Uu,vg,Uu,Ap,Uu,Jj,Uu,lt,Uu,ao,Uu,jp,Uu,Xo,Uu,Wg,Uu,ag,Uu,Ik,Uu,fq,Uu,mk,Uu,Pl,Uu,rk,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu,Uu];var Ad=[Vu,Vu,gr,Vu,lj,Vu,Ro,Vu,to,Vu,Og,Vu,uj,Vu,dr,Vu,Ko,Vu,Dj,Vu,Sj,Vu,Gj,Vu,cr,Vu,sg,Vu,zo,Vu,Rg,Vu,zr,Vu,Vi,Vu,yp,Vu,lk,Vu,$i,Vu,xl,Vu,lo,Vu,Oi,Vu,Uo,Vu,Ei,Vu,Ho,Vu,ko,Vu,io,Vu,So,Vu,Mp,Vu,Uf,Vu,Jr,Vu,kk,Vu,Vo,Vu,Mj,Vu,fr,Vu,Po,Vu,Jf,Vu,Ig,Vu,Fg,Vu,Ae,Vu,uo,Vu,Ri,Vu,hr,Vu,Jo,Vu,wo,Vu,er,Vu,yo,Vu,Er,Vu,Dp,Vu,il,Vu,af,Vu,Re,Vu,pg,Vu,Or,Vu,Eo,Vu,oo,Vu,no,Vu,jo,Vu,Fo,Vu,Go,Vu,Qo,Vu,vo,Vu];var Bd=[Wu,Wu,Gi,Wu,Rr,Wu,Lf,Wu,aq,Wu,Gl,Wu,Fi,Wu,kq,Wu,gq,Wu,Hr,Wu,Mr,Wu,Yp,Wu,yj,Wu,lg,Wu,Jg,Wu,Sg,Wu,Ge,Wu,iq,Wu,Hj,Wu,pj,Wu,Oj,Wu,Nj,Wu,tl,Wu,Si,Wu,Il,Wu,_p,Wu,Tj,Wu,tg,Wu,kg,Wu,He,Wu,rl,Wu,Uj,Wu,oj,Wu,Cr,Wu,Kf,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu,Wu];var Cd=[Xu,Xu,Hl,Xu,pm,Xu,$p,Xu,wt,Xu,wp,Xu,cq,Xu,vt,Xu,um,Xu,tk,Xu,sl,Xu,ol,Xu,Up,Xu,hq,Xu,yl,Xu,Bp,Xu,mq,Xu,At,Xu,Be,Xu,Zp,Xu,ut,Xu,Br,Xu,Dl,Xu,uk,Xu,jq,Xu,jl,Xu,Lr,Xu,Xu,Xu,Xu,Xu,Xu,Xu,Xu,Xu,Xu,Xu];var Dd=[Yu,Yu,qp,Yu,kp,Yu,Yu,Yu];var Ed=[Zu,Zu,vr,Zu,pl,Zu,tq,Zu,lr,Zu,ql,Zu,tr,Zu,Kr,Zu,ro,Zu,Pr,Zu,Cn,Zu,jr,Zu,xu,Zu,Qr,Zu,kh,Zu,xj,Zu,Fl,Zu,El,Zu,Qq,Zu,pr,Zu,nr,Zu,qj,Zu,kt,Zu,If,Zu,ok,Zu,Kg,Zu,og,Zu,br,Zu,_q,Zu,or,Zu,Cj,Zu,Ij,Zu,Ee,Zu,$q,Zu,ml,Zu,sq,Zu,To,Zu,qr,Zu,Lj,Zu,Ar,Zu,Ni,Zu,ug,Zu,so,Zu,Jq,Zu,kj,Zu,Rj,Zu,Bq,Zu,No,Zu,ir,Zu,Fr,Zu,Rq,Zu,Ti,Zu,fm,Zu,mo,Zu,Cl,Zu,Gr,Zu,ar,Zu,nl,Zu,Bl,Zu,Fe,Zu,vq,Zu,xo,Zu,ur,Zu,Iq,Zu,Rt,Zu,go,Zu,Ng,Zu,kr,Zu,zj,Zu,ho,Zu,Ki,Zu,jk,Zu,Co,Zu,Dq,Zu,Io,Zu,Do,Zu,mr,Zu,Oo,Zu,Aq,Zu,On,Zu,Eg,Zu,jg,Zu,sr,Zu,rr,Zu,Lq,Zu,Tg,Zu,Pf,Zu,tj,Zu,Tq,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu,Zu];var Fd=[_u,_u,ti,_u,bf,_u,sk,_u,gm,_u,_u,_u,_u,_u,_u,_u];var Gd=[$u,$u,xn,$u,vn,$u,ln,$u,jn,$u,$u,$u,$u,$u,$u,$u];var Hd=[av,av,ej,av,gj,av,av,av];var Id=[bv,bv,xq,bv,Gq,bv,Fq,bv,Oq,bv,yq,bv,Nq,bv,pq,bv,qq,bv,bv,bv,bv,bv,bv,bv,bv,bv,bv,bv,bv,bv,bv,bv];var Jd=[cv,cv,Un,cv,In,cv,cv,cv];var Kd=[dv,dv,bo,dv,_n,dv,Yo,dv,ep,dv,ap,dv,gp,dv,dv,dv];var Ld=[ev,ev,Ft,ev,tn,ev,Gt,ev,yn,ev,Ce,ev,xp,ev,zl,ev,mn,ev,qn,ev,cn,ev,dn,ev,hg,ev,pn,ev,Ht,ev,gn,ev,kl,ev,Cp,ev,ev,ev,ev,ev,ev,ev,ev,ev,ev,ev,ev,ev,ev,ev,ev,ev,ev,ev,ev,ev,ev,ev,ev,ev,ev,ev,ev,ev];var Md=[fv,fv,Wp,fv,lq,fv,Vp,fv,bq,fv,Xp,fv,fv,fv,fv,fv];var Nd=[gv,gv,dq,gv,Hq,gv,nq,gv,sm,gv,Sq,gv,Kq,gv,nm,gv,rq,gv,uq,gv,zq,gv,Pq,gv,Cq,gv,gv,gv,gv,gv,gv,gv];var Od=[hv,hv,ig,hv,De,hv,yt,hv,zt,hv,xt,hv,ll,hv,tm,hv,Al,hv,om,hv,hv,hv,hv,hv,hv,hv,hv,hv,hv,hv,hv,hv];return{_strlen:fu,__GLOBAL__I_a:Ke,_free:Jt,_main:hj,_realloc:Kt,_memmove:gu,_tolower:iu,__GLOBAL__I_a41:uf,_memset:eu,__GLOBAL__I_a133:aj,_malloc:It,_memcpy:du,_llvm_ctlz_i32:hu,__GLOBAL__I_a153:bj,__GLOBAL__I_a367:xr,__GLOBAL__I_a49:Mf,runPostSets:de,stackAlloc:Pd,stackSave:Qd,stackRestore:Rd,setThrew:Sd,setTempRet0:Vd,setTempRet1:Wd,setTempRet2:Xd,setTempRet3:Yd,setTempRet4:Zd,setTempRet5:_d,setTempRet6:$d,setTempRet7:ae,setTempRet8:be,setTempRet9:ce,dynCall_viiiii:yu,dynCall_viiiiiii:zu,dynCall_i:Au,dynCall_vi:Bu,dynCall_vii:Cu,dynCall_iii:Du,dynCall_iiii:Eu,dynCall_viiiiiid:Fu,dynCall_ii:Gu,dynCall_viii:Hu,dynCall_viiiiid:Iu,dynCall_v:Ju,dynCall_iiiiiiiii:Ku,dynCall_viiiiiiiii:Lu,dynCall_viiiiiiii:Mu,dynCall_viiiiii:Nu,dynCall_iiiii:Ou,dynCall_iiiiii:Pu,dynCall_viiii:Qu}})


// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_viiiii": invoke_viiiii, "invoke_viiiiiii": invoke_viiiiiii, "invoke_i": invoke_i, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iii": invoke_iii, "invoke_iiii": invoke_iiii, "invoke_viiiiiid": invoke_viiiiiid, "invoke_ii": invoke_ii, "invoke_viii": invoke_viii, "invoke_viiiiid": invoke_viiiiid, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iiiii": invoke_iiiii, "invoke_iiiiii": invoke_iiiiii, "invoke_viiii": invoke_viiii, "_llvm_lifetime_end": _llvm_lifetime_end, "_lseek": _lseek, "_glClearColor": _glClearColor, "__scanString": __scanString, "_fclose": _fclose, "_pthread_mutex_lock": _pthread_mutex_lock, "___cxa_end_catch": ___cxa_end_catch, "_glLinkProgram": _glLinkProgram, "_strtoull": _strtoull, "_glBindTexture": _glBindTexture, "_fflush": _fflush, "__isLeapYear": __isLeapYear, "_fwrite": _fwrite, "_send": _send, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_glCompileShader": _glCompileShader, "_isspace": _isspace, "_read": _read, "_isxdigit_l": _isxdigit_l, "_fileno": _fileno, "_fsync": _fsync, "_glGenTextures": _glGenTextures, "_newlocale": _newlocale, "___gxx_personality_v0": ___gxx_personality_v0, "_pthread_cond_wait": _pthread_cond_wait, "___cxa_rethrow": ___cxa_rethrow, "_fmod": _fmod, "___resumeException": ___resumeException, "_glCreateShader": _glCreateShader, "_glUniform1i": _glUniform1i, "_llvm_va_end": _llvm_va_end, "_vsscanf": _vsscanf, "_snprintf": _snprintf, "_SDL_RWFromFile": _SDL_RWFromFile, "_fgetc": _fgetc, "_glGetProgramiv": _glGetProgramiv, "_glVertexAttribPointer": _glVertexAttribPointer, "__getFloat": __getFloat, "_atexit": _atexit, "___cxa_free_exception": ___cxa_free_exception, "_glGetUniformLocation": _glGetUniformLocation, "_close": _close, "_fopen": _fopen, "___setErrNo": ___setErrNo, "___cxa_guard_abort": ___cxa_guard_abort, "_isxdigit": _isxdigit, "_ftell": _ftell, "_glDeleteProgram": _glDeleteProgram, "_exit": _exit, "_sprintf": _sprintf, "___ctype_b_loc": ___ctype_b_loc, "_freelocale": _freelocale, "_glAttachShader": _glAttachShader, "_catopen": _catopen, "_catgets": _catgets, "_asprintf": _asprintf, "___cxa_is_number_type": ___cxa_is_number_type, "___cxa_does_inherit": ___cxa_does_inherit, "___ctype_toupper_loc": ___ctype_toupper_loc, "___cxa_guard_acquire": ___cxa_guard_acquire, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_recv": _recv, "__parseInt64": __parseInt64, "__ZNKSt9exception4whatEv": __ZNKSt9exception4whatEv, "_SDL_GL_SwapBuffers": _SDL_GL_SwapBuffers, "_glBufferSubData": _glBufferSubData, "__ZNSt9exceptionD2Ev": __ZNSt9exceptionD2Ev, "_SDL_Init": _SDL_Init, "_mkport": _mkport, "_copysign": _copysign, "_glGetShaderiv": _glGetShaderiv, "__exit": __exit, "_SDL_FreeRW": _SDL_FreeRW, "_IMG_Quit": _IMG_Quit, "_strftime": _strftime, "___cxa_throw": ___cxa_throw, "_toupper": _toupper, "_glShaderSource": _glShaderSource, "_pread": _pread, "_SDL_SetVideoMode": _SDL_SetVideoMode, "_SDL_LockSurface": _SDL_LockSurface, "_open": _open, "_glDrawArrays": _glDrawArrays, "_strtoull_l": _strtoull_l, "__arraySum": __arraySum, "_sysconf": _sysconf, "_SDL_PollEvent": _SDL_PollEvent, "_SDL_GetTicks": _SDL_GetTicks, "_strtoll_l": _strtoll_l, "_glClear": _glClear, "_glActiveTexture": _glActiveTexture, "_glEnableVertexAttribArray": _glEnableVertexAttribArray, "_glBindBuffer": _glBindBuffer, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "_SDL_GetError": _SDL_GetError, "_glBufferData": _glBufferData, "__formatString": __formatString, "_pthread_cond_broadcast": _pthread_cond_broadcast, "__ZSt9terminatev": __ZSt9terminatev, "_pthread_mutex_unlock": _pthread_mutex_unlock, "___cxa_call_unexpected": ___cxa_call_unexpected, "_sbrk": _sbrk, "___errno_location": ___errno_location, "_strerror": _strerror, "_catclose": _catclose, "_llvm_lifetime_start": _llvm_lifetime_start, "_SDL_Quit": _SDL_Quit, "___cxa_guard_release": ___cxa_guard_release, "_ungetc": _ungetc, "_IMG_Load": _IMG_Load, "_SDL_EnableUNICODE": _SDL_EnableUNICODE, "_uselocale": _uselocale, "_vsnprintf": _vsnprintf, "_glUseProgram": _glUseProgram, "_sscanf": _sscanf, "_glTexImage2D": _glTexImage2D, "___assert_fail": ___assert_fail, "_fread": _fread, "_IMG_Init": _IMG_Init, "_glGetShaderInfoLog": _glGetShaderInfoLog, "_strftime_l": _strftime_l, "_abort": _abort, "_fprintf": _fprintf, "_isdigit": _isdigit, "_strtoll": _strtoll, "__addDays": __addDays, "_fabs": _fabs, "__reallyNegative": __reallyNegative, "_fseek": _fseek, "_write": _write, "_glGenBuffers": _glGenBuffers, "_glGetAttribLocation": _glGetAttribLocation, "___cxa_allocate_exception": ___cxa_allocate_exception, "_glDeleteShader": _glDeleteShader, "_glCreateProgram": _glCreateProgram, "_ceilf": _ceilf, "_vasprintf": _vasprintf, "_glViewport": _glViewport, "_emscripten_set_main_loop": _emscripten_set_main_loop, "_llvm_invariant_start": _llvm_invariant_start, "_IMG_Load_RW": _IMG_Load_RW, "_isdigit_l": _isdigit_l, "___ctype_tolower_loc": ___ctype_tolower_loc, "_llvm_eh_typeid_for": _llvm_eh_typeid_for, "_glUniformMatrix4fv": _glUniformMatrix4fv, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_glTexParameteri": _glTexParameteri, "_SDL_FreeSurface": _SDL_FreeSurface, "_time": _time, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "_stdin": _stdin, "__ZTVN10__cxxabiv117__class_type_infoE": __ZTVN10__cxxabiv117__class_type_infoE, "__ZTVN10__cxxabiv120__si_class_type_infoE": __ZTVN10__cxxabiv120__si_class_type_infoE, "_stderr": _stderr, "_stdout": _stdout, "__ZTISt9exception": __ZTISt9exception, "__ZTVN10__cxxabiv119__pointer_type_infoE": __ZTVN10__cxxabiv119__pointer_type_infoE, "___dso_handle": ___dso_handle }, buffer);
var _strlen = Module["_strlen"] = asm["_strlen"];
var __GLOBAL__I_a = Module["__GLOBAL__I_a"] = asm["__GLOBAL__I_a"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _tolower = Module["_tolower"] = asm["_tolower"];
var __GLOBAL__I_a41 = Module["__GLOBAL__I_a41"] = asm["__GLOBAL__I_a41"];
var _memset = Module["_memset"] = asm["_memset"];
var __GLOBAL__I_a133 = Module["__GLOBAL__I_a133"] = asm["__GLOBAL__I_a133"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _llvm_ctlz_i32 = Module["_llvm_ctlz_i32"] = asm["_llvm_ctlz_i32"];
var __GLOBAL__I_a153 = Module["__GLOBAL__I_a153"] = asm["__GLOBAL__I_a153"];
var __GLOBAL__I_a367 = Module["__GLOBAL__I_a367"] = asm["__GLOBAL__I_a367"];
var __GLOBAL__I_a49 = Module["__GLOBAL__I_a49"] = asm["__GLOBAL__I_a49"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiiid = Module["dynCall_viiiiiid"] = asm["dynCall_viiiiiid"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_viiiiid = Module["dynCall_viiiiid"] = asm["dynCall_viiiiid"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];

Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };

// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;

  // exit the runtime
  exitRuntime();

  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371

  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  throw 'abort() at ' + stackTrace() + extra;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}






